<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Waymex.GpsLibrary</name>
    </assembly>
    <members>
        <member name="T:Waymex.Buffers.ByteFifo">
            <summary>
            The ByteFifo class provides a thread safe cyclic byte buffer.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.ByteFifo.#ctor(System.Int32)">
            <summary>
            Construtor for the buffer. Accepts a single parameter 
            that initialises the buffer to the number of bytes specified.
            </summary>
            <param name="BufferSize">Size of buffer in bytes.</param>
        </member>
        <member name="P:Waymex.Buffers.ByteFifo.Count">
            <summary>
            Returns the number of bytes in the buffer.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.ByteFifo.DataLastAdded">
            <summary>
            Returns the data that was last added to the buffer. This property does not access
            the buffer directly it simply reads the incomming cache. The data in the buffer is not affected.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.ByteFifo.BufferOutPointer">
            <summary>
            Returns the buffer out pointer.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.ByteFifo.BufferInPointer">
            <summary>
            Returns the buffer in pointer.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.ByteFifo.Size">
            <summary>
            Returns the size of the buffer.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.ByteFifo.Add(System.Byte[])">
            <summary>
            This method adds bytes to the buffer.
            </summary>
            <param name="Bytes"></param>
        </member>
        <member name="M:Waymex.Buffers.ByteFifo.Clear">
            <summary>
            Clears the contents of the buffer.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.ByteFifo.ReadByte">
            <summary>
            Reads the next byte in the buffer. This method does not remove the byte.
            Returns null if no bytes in the buffer.
            </summary>
            <returns>The next available byte, throws an exception if the buffer is empty.</returns>
        </member>
        <member name="M:Waymex.Buffers.ByteFifo.RemoveByte">
            <summary>
            Reads the next byte in the buffer. This method removes the byte.
            Returns null if no bytes in the buffer.
            </summary>
            <returns>The next available byte, throws an exception if the buffer is empty.</returns>
        </member>
        <member name="M:Waymex.Buffers.ByteFifo.ByteToHex(System.Byte[])">
            <summary>
            This function converts an array of bytes to a string, of hex digits representing those bytes.
            No Synchronisation needed as it is private and can only becalled from a thread safe method.
            </summary>
            <param name="ByteData"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Buffers.ExceptionBase">
            <summary>
            Base Exception Class.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.ExceptionBase.#ctor(System.String,System.Exception)">
            <summary>
            GISSystem Exception.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.ExceptionBase.#ctor(System.String)">
            <summary>
            GPSSystem Exception.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.ExceptionBase.AppSource">
            <summary>
            Exposed in order that derived classe can overide.
            </summary>
        </member>
        <member name="T:Waymex.Buffers.BufferException">
            <summary>
            BufferException Exception.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.BufferException.#ctor(System.String)">
            <summary>
            BufferException Exception contructor.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.BufferException.#ctor(System.String,System.Exception)">
            <summary>
            BufferException Exception contructor.
            </summary>
        </member>
        <member name="T:Waymex.Buffers.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.Strings.Buffers_BufferFull">
            <summary>
              Looks up a localized string similar to StringFifo buffer is full..
            </summary>
        </member>
        <member name="T:Waymex.Buffers.StringFifo">
            <summary>
            The StringFifo class implements a First In First Out (FIFO) buffer for strings.
            The class is thread safe. The property BufferStrings sets the maximum amount of 
            strings that may be placed in the buffer. If an attempt is made to exceed this amount
            and Exception is raised. The BufferStrings defaults to 1000.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.StringFifo.#ctor">
            <summary>
            Constructor for the StringFifo class.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.StringFifo.Clear">
            <summary>
            This method clears all the strings from the buffer.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.StringFifo.Add(System.String)">
            <summary>
            This method adds a string to the buffer.
            </summary>
            <param name="StringData"></param>
        </member>
        <member name="M:Waymex.Buffers.StringFifo.Remove">
            <summary>
            This method returns the string that has been in the buffer the longest (FIFO).
            The string is removed from the buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Buffers.StringFifo.Remove(System.Int32)">
            <summary>
            This method returns the string that has been in the buffer the longest (FIFO).
            The string is removed from the buffer. The Seconds represents the number of seconds
            the method will check for data in the buffer before returning.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Waymex.Buffers.StringFifo.BufferStrings">
            <summary>
            Sets/Gets the maximum strings that can be stored in the buffer. Defaults to 1000.
            </summary>
        </member>
        <member name="P:Waymex.Buffers.StringFifo.Count">
            <summary>
            Returns the number of strings in the buffer.
            </summary>
        </member>
        <member name="M:Waymex.Buffers.StringFifo.Timer">
            <summary>
            Emulates the Visual Basic Timer() function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gis.Convert">
            <summary>
            This class performs various generic conversions between coordinate systems and units of measure. 
            This class does not perform transformations.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Convert.ToRadians(System.Double)">
            <summary>
            Converts decimal degrees to radians.
            </summary>
            <param name="degrees"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Convert.ToDegrees(System.Double)">
            <summary>
            Converts radians to decimal degrees.
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Convert.ToEastingNorthing(Waymex.Gis.Ellipsoids.Ellipsoid,Waymex.Gis.Projections.Projection,Waymex.Gis.Coordinates.CartesianCoordinates)">
            <summary>
            Converts cartesian coordinates to grid eastings and northings for any Transverse Mercator map projection, including the Ordnance Survey National Grid.
            Ellipsoid height is ignored.
            </summary>
            <remarks>
            When converting OSGB36 coordinates between (easting, northing) and (latitude, longitude),
            use the Airy 1830 ellipsoid. When converting ETRS89 coordinates between (easting, northing) and
            (latitude, longitude), use the GRS80 ellipsoid. Use the same National Grid projection
            constants for both ETRS89 and OSGB36 coordinates.
            </remarks>
        </member>
        <member name="M:Waymex.Gis.Convert.ToEastingNorthing(Waymex.Gis.Ellipsoids.Ellipsoid,Waymex.Gis.Projections.Projection,Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates)">
            <summary>
            Converts latitude and longitude to grid eastings and northings for any Transverse Mercator map projection, including the Ordnance Survey National Grid.
            Ellipsoid height is ignored.
            </summary>
            <remarks>
            When converting OSGB36 coordinates between (easting, northing) and (latitude, longitude),
            use the Airy 1830 ellipsoid. When converting ETRS89 coordinates between (easting, northing) and
            (latitude, longitude), use the GRS80 ellipsoid. Use the same National Grid projection
            constants for both ETRS89 and OSGB36 coordinates.
            </remarks>
            <param name="ellipsoid"></param>
            <param name="projection"></param>
            <param name="coordinates"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Convert.ToCartesian(Waymex.Gis.Ellipsoids.Ellipsoid,Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates)">
            <summary>
            Converts latitude, longitude and elipsoidal height coordinates to cartesian coordinates using the same ellipsoid.
            Please note this is not a transformation between ellipsoids. 
            </summary>
            <param name="ellipsoid"></param>
            <param name="coordinates"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Convert.ToLatitudeLongitude(Waymex.Gis.Ellipsoids.Ellipsoid,Waymex.Gis.Coordinates.CartesianCoordinates)">
            <summary>
            Converts cartesian coordinates to latitude, longitude and elipsoidal height using the same ellipsoid.
            Please note this is not a transformation between ellipsoids. 
            </summary>
            <param name="ellipsoid"></param>
            <param name="coordinates"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Convert.ToDecimelDegrees(System.Int32,System.Int32,System.Double)">
            <summary>
            Converts degrees minutes and seconds to decimal degrees.
            </summary>
            <param name="degrees"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Convert.ToDecimelDegrees(System.Int32,System.Double)">
            <summary>
            Converts degrees and decimel minutes to decimal degrees.
            </summary>
            <param name="degrees"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Convert.Negate(System.Double)">
            <summary>
            Helper funtion to reverse the sign of a value. Helps code to be more readable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gis.Coordinates.CartesianCoordinates">
            <summary>
            This immutable class represents a set of cartesian coordinates.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Coordinates.CartesianCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:Waymex.Gis.Coordinates.CartesianCoordinates.X">
            <summary>
            Returns the X axis parameter.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Coordinates.CartesianCoordinates.Y">
            <summary>
            Returns the Y axis parameter.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Coordinates.CartesianCoordinates.Z">
            <summary>
            Returns the Z axis parameter.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Coordinates.EastingNorthingCoordinates">
            <summary>
            this immutable class represents a set of easting/northing parameters. For convenience the class also
            includes a parameter for height.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Coordinates.EastingNorthingCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="easting"></param>
            <param name="northing"></param>
        </member>
        <member name="M:Waymex.Gis.Coordinates.EastingNorthingCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="easting"></param>
            <param name="northing"></param>
            <param name="height"></param>
        </member>
        <member name="P:Waymex.Gis.Coordinates.EastingNorthingCoordinates.Easting">
            <summary>
            Retruns the easting parameter.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Coordinates.EastingNorthingCoordinates.Northing">
            <summary>
            returns the northing parameter.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Coordinates.EastingNorthingCoordinates.Height">
            <summary>
            Returns the height parameter.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Coordinates.Osgb36GeoidDatum">
            <summary>
            Enumerator for the Geoid datums in use with OSGB 36/OSTN02.
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.OutsideModelBoundary">
            <summary>
            Outside Model Boundary
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.NewlynUkMainland">
            <summary>
            Newlyn, Uk Mainland
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.StMarysScillyIsles">
            <summary>
            StMarys, Scilly Isles
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.Douglas02IsleofMan">
            <summary>
            Douglas02, Isle of Man
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.StornowayOuterHebrides">
            <summary>
            Stornoway, Outer Hebrides
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.StKildaStKilda">
            <summary>
            St. Kilda, St. Kilda
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.LerwickShetlandIsles">
            <summary>
            Lerwick, Shetland Isles
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.NewlynOrkneyIsles">
            <summary>
            Newlyn, Orkney Isles
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.FairIsleFairIsle">
            <summary>
            Fair Isle, Fair Isle
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.FlannanIslesFlannanIsles">
            <summary>
            Flannan Isles, Flannan Isles
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.NorthRonaNorthRona">
            <summary>
            North Rona, North Rona
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.SuleSkerrySuleSkerry">
            <summary>
            Sule Skerry, Sule Skerry
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.FoulaFoula">
            <summary>
            Foula, Foula.
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.MalinHeadRepublicofIreland">
            <summary>
            Malin Head, Republic of Ireland
            </summary>
        </member>
        <member name="F:Waymex.Gis.Coordinates.Osgb36GeoidDatum.BelfastNorthernIreland">
            <summary>
            Belfast, Northern Ireland
            </summary>
        </member>
        <member name="T:Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates">
            <summary>
            This immutable class represents a set of latitude/longitude/ellipsoidal height coordinates.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="degreesLatitude"></param>
            <param name="degreesLongitude"></param>
        </member>
        <member name="M:Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="degreesLatitude"></param>
            <param name="degreesLongitude"></param>
            <param name="elipsoidalHeight"></param>
        </member>
        <member name="P:Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates.Latitude">
            <summary>
            Returns latitude in degrees.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates.Longitude">
            <summary>
            Returns longitude in degrees.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates.ElipsoidalHeight">
            <summary>
            returns elipsoidal height in meters.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Coordinates.Osgb36Cordinates">
            <summary>
            This immutable class, derived from EastingNorthingCoordinates, provides a convenient means 
            to represent OSGB36 eastings and northings.
            </summary>
            <remarks>
            Eastings and northings are represented in British National Grid and Height is specifgied
            in meters based on the geoid datum returned by the RegionGeoidDatum property.
            </remarks>
        </member>
        <member name="M:Waymex.Gis.Coordinates.Osgb36Cordinates.#ctor(System.Double,System.Double,System.Double,Waymex.Gis.Coordinates.Osgb36GeoidDatum)">
            <summary>
            Constructor.
            </summary>
            <param name="easting"></param>
            <param name="northing"></param>
            <param name="height"></param>
            <param name="datum"></param>
        </member>
        <member name="P:Waymex.Gis.Coordinates.Osgb36Cordinates.RegionGeoidDatum">
            <summary>
            Returns the Local Geoid datum in use. other property values should be 
            considered in valid if this property is set to OutsideModelBoundary.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Ellipsoids.Airy1830Ellipsoid">
            <summary>
            This immutable class, derived from coordinates, represents an Airy1930 ellipsoid and is provided for convienience.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Ellipsoids.Airy1830Ellipsoid.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Ellipsoids.Ellipsoid">
            <summary>
            This immutable class represents a generic ellipsoid and is used as a base type for other specific ellipsoids.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Ellipsoids.Ellipsoid.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="semiMajorAxis"></param>
            <param name="semiMinorAxis"></param>
        </member>
        <member name="M:Waymex.Gis.Ellipsoids.Ellipsoid.GetRadiusOfCurvatureInPV(System.Double)">
            <summary>
            Calculates the Radius of curvature for a given latitude.
            </summary>
            <param name="degreesLatitude"></param>
            <returns></returns>
        </member>
        <member name="P:Waymex.Gis.Ellipsoids.Ellipsoid.SemiMajorAxis">
            <summary>
            Returns the semi-major axis of the ellipsoid.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Ellipsoids.Ellipsoid.SemiMinorAxis">
            <summary>
            Returns the semi-major axis of the ellipsoid.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Ellipsoids.Ellipsoid.Eccentricity">
            <summary>
            returns the eccentricity of the ellipsoid.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Ellipsoids.Ellipsoid.EccentricitySquared">
            <summary>
            returns the eccentricity squared of the ellipsoid.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Ellipsoids.Ellipsoid.SecondEccentricitySquared">
            <summary>
            returns the second eccentricity squared of the ellipsoid.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Ellipsoids.Ellipsoid.DegreesToRadians(System.Double)">
            <summary>
            Returns radians for a given value of degrees.
            </summary>
            <param name="degrees"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Ellipsoids.Ellipsoid.RadiansToDegrees(System.Double)">
            <summary>
            Returns degrees for a given value of radians.
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gis.Ellipsoids.Grs80Ellipsoid">
            <summary>
            This immutable class, derived from coordinates, represents an GRS80 ellipsoid and is provided for convienience.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Ellipsoids.Grs80Ellipsoid.#ctor">
            <summary>
            Consructor.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Ellipsoids.Wgs84Ellipsoid">
            <summary>
            This immutable class, derived from coordinates, represents an WGS84 ellipsoid and is provided for convienience.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Ellipsoids.Wgs84Ellipsoid.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gis.OSTN02Record">
            <summary>
            Represents a single record of OSTN02/OSTM02 data.
            </summary>
        </member>
        <member name="P:Waymex.Gis.OSTN02Record.Height">
            <summary>
            ODNT02 Height. Check
            </summary>
        </member>
        <member name="P:Waymex.Gis.OSTN02Record.Se">
            <summary>
            Returns the easting shift of the ETRS89 coordinate.
            </summary>
        </member>
        <member name="P:Waymex.Gis.OSTN02Record.Sn">
            <summary>
            Returns the northing shift of the ETRS89 coordinate.
            </summary>
        </member>
        <member name="P:Waymex.Gis.OSTN02Record.Sg">
            <summary>
            Returns geiod height of the cell selected by easting and northing passed in to the constructor.
            </summary>
        </member>
        <member name="P:Waymex.Gis.OSTN02Record.RegionGeoidDatum">
            <summary>
            Returns the regional height Datum in use.
            </summary>
        </member>
        <member name="M:Waymex.Gis.OSTN02Record.#ctor(Waymex.Gis.Coordinates.EastingNorthingCoordinates,System.Double,System.String)">
            <summary>
            Constructor. Requires the ETRS89 coordinates to transform and the filename (including the path) 
            to the OSTN02/OSTM02 GB data file.
            </summary>
            <param name="coordinates"></param>
            <param name="height"></param>
            <param name="dataFileName">Filename (including the path) to the OSTN02/OSTM02 GB data file.
            </param>
        </member>
        <member name="M:Waymex.Gis.OSTN02Record.CalculateRecordNumber(System.Int32,System.Int32)">
            <summary>
            Calculates a data file record number.
            </summary>
            <param name="eastIndex"></param>
            <param name="northIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gis.Projections.BngProjection">
            <summary>
            This immutable class, derived from Projection, represents the British National Grid projection and is provided for convienience.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Projections.BngProjection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Projections.Projection">
            <summary>
            This immutable class represents a generic projection and is used as a base type for other specific projections.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Projections.Projection.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Projections.Projection.ScaleFactor">
            <summary>
            Returns the scale factor.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Projections.Projection.TrueOriginEasting">
            <summary>
            Returns the Easting coordinate of the true origin.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Projections.Projection.TrueOriginNorthing">
            <summary>
            Returns the Northing coordinate of the true origin.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Projections.Projection.TrueOriginLatitude">
            <summary>
            Returns the Latitude coordinate of the true origin for the southern hemisphere.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Projections.Projection.TrueOriginLongitude">
            <summary>
            Returns the Longitude coordinate of the true origin for the southern hemisphere.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Projections.Projection.Div(System.Double,System.Double)">
            <summary>
            Returns the integer portion of a division operation.
            </summary>
            <param name="value"></param>
            <param name="divisor"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gis.Projections.UtmProjection">
            <summary>
            This immutable class, derived from Projection, represents the Universal Transverse Mercator projection. 
            The class handles all medidian calculations internally.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Projections.UtmProjection.#ctor(System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="degreesLatitude"></param>
            <param name="degreesLongitude"></param>
        </member>
        <member name="T:Waymex.Gis.Shape.Projection">
            <summary>
            Transform enumeraton, this is used to specify the coordinate system to be used
            when saving GPS objects to Shape files.
            </summary>
        </member>
        <member name="F:Waymex.Gis.Shape.Projection.Geographic">
            <summary>
            Standard WGS84 Latitude and Longtitude.
            </summary>
        </member>
        <member name="F:Waymex.Gis.Shape.Projection.Utm">
            <summary>
            Universal Transverse Mercator based on the WGS84 Ellipsoid. 
            </summary>
        </member>
        <member name="M:Waymex.Gis.Shape.Attributes.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.MultiPoint">
            <summary>
            Summary description for Multipoint.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.MultiPointM">
            <summary>
            Summary description for MultipointM.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.MultiPointZ">
            <summary>
            Summary description for MultiPointZ.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.NullShape">
            <summary>
            Summary description for NullShape.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.Parts">
            <summary>
            </summary>
        </member>
        <member name="M:Waymex.Gis.Shape.Parts.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Shape.PartsM.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Shape.PartsZ.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.Point">
            <summary>
            Summary description for GISAttribute.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.PointM">
            <summary>
            Summary description for PointM.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Shape.Points.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Shape.PointsM.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Shape.PointsZ.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.PointZ">
            <summary>
            Summary description for PointZ.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.Polygon">
            <summary>
            Summary description for Polygon.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.PolygonM">
            <summary>
            Summary description for PolygonM.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.PolygonZ">
            <summary>
            Summary description for PolygonZ.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.PolyLine">
            <summary>
            Summary description for GISPolyLine.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.PolyLineM">
            <summary>
            Summary description for PolyLineM.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.PolyLineZ">
            <summary>
            Summary description for PolyLineZ.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Shape.ShapeFile">
            <summary>
            Summary description for ShapeFile.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Transform">
            <summary>
            This class performs transformations between datums.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Transform.Etrs89ToOsgb36(Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates,System.String)">
            <summary>
            Performs an ETRS89 to OSGB36/ODN datum transformation. Accuracy is approximately 10 centimeters. 
            The datafile passed in is the OSTN02 data transformation file provided by Ordanance survey. Whilst very accurate
            this method is much slower than the Helmert transformation in the overloaded method.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Transform.Etrs89ToOsgb36(Waymex.Gis.Coordinates.CartesianCoordinates,System.String)">
            <summary>
            Performs an ETRS89 to OSGB36/ODN datum transformation. Accuracy is approximately 10 centimeters. 
            The datafile passed in is the OSTN02 data transformation file provided by Ordanance survey. Whilst very accurate
            this method is much slower than the Helmert transformation in the overloaded method.
            </summary>
        </member>
        <member name="M:Waymex.Gis.Transform.Etrs89ToOsgb36(Waymex.Gis.Coordinates.LatitudeLongitudeCoordinates)">
            <summary>
            Performs an ETRS89 to OSGB36/ODN datum transformation. Accuracy is approximately 5 meters in all directions.
            For this method, ERTS89, ITRS2000 and WGS84 datums can be considered the same.
            </summary>
            <remarks>
            This method uses a Helmert transformation to determine the OSGB36 coordinates. 
            Whilst only accurate to 5 meters in all directions, it is extremely fast.
            </remarks>
        </member>
        <member name="M:Waymex.Gis.Transform.Etrs89ToOsgb36(Waymex.Gis.Coordinates.CartesianCoordinates)">
            <summary>
            Performs an ETRS89 to OSGB36/ODN datum transformation. Accuracy is approximately 5 meters in all directions.
            For this method, ERTS89, ITRS2000 and WGS84 datums can be considered the same.
            </summary>
            <param name="coordinates">Cartesian Coordinates to be transformed.</param>
            <remarks>
            This method uses a Helmert transformation to determine the OSGB36 coordinates. 
            Whilst only accurate to 5 meters in all directions, it is extremely fast.
            </remarks>
        </member>
        <member name="M:Waymex.Gis.Transform.Etrs89ToAiry1830(Waymex.Gis.Coordinates.CartesianCoordinates)">
            <summary>
            Performs an ETRS89 to Airy1830 datum transformation.
            </summary>
            <param name="coordinates">Cartesian Coordinates to be transformed.</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Transform.Airy1830ToEtrs89(Waymex.Gis.Coordinates.CartesianCoordinates)">
            <summary>
            Performs an Airy1830 to ETRS89 datum transformation.
            </summary>
            <param name="coordinates">Cartesian Coordinates to be transformed.</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Transform.Etrs89ToItrs2000(Waymex.Gis.Coordinates.CartesianCoordinates,System.Int32)">
            <summary>
            Performs an ETRS89 to ITRS2000 datum transformation.
            </summary>
            <param name="coordinates">Cartesian Coordinates to be transformed.</param>
            <param name="epochYear">Refers to the year the data specified in coordinates was gathered.</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Transform.Itrs2000ToEtrs89(Waymex.Gis.Coordinates.CartesianCoordinates,System.Int32)">
            <summary>
            Performs an ITRS2000 to ETRS89 datum transformation.
            </summary>
            <param name="coordinates">Cartesian Coordinates to be transformed.</param>
            <param name="epochYear">Refers to the year the data specified in coordinates was gathered.</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Transform.Itrs97ToEtrs89(Waymex.Gis.Coordinates.CartesianCoordinates,System.Int32)">
            <summary>
            Performs an ITRS94/96/97 to ETRS89 datum transformation.
            </summary>
            <param name="coordinates">Cartesian Coordinates to be transformed.</param>
            <param name="epochYear">Refers to the year the data specified in coordinates was gathered.</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Transform.Etrs89ToItrs97(Waymex.Gis.Coordinates.CartesianCoordinates,System.Int32)">
            <summary>
            Performs an ETRS89 to ITRS94/96/97 datum transformation.
            </summary>
            <param name="coordinates">Cartesian Coordinates to be transformed.</param>
            <param name="epochYear">Refers to the year the data specified in coordinates was gathered.</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Transform.HelmertTransformation(Waymex.Gis.Coordinates.CartesianCoordinates,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This seven parameter method can be used to transform coordinates between datums.
            </summary>
            <remarks>
            This method assumes that the rotation
            parameters are ‘small’. Rotation parameters between geodetic cartesian systems are usually less than 5
            seconds of arc, because the axes are conventionally aligned to the Greenwich Meridian and the Pole.
            Do not use this formula for larger angles.
            </remarks>
            <param name="coordinates"></param>
            <param name="translationX"></param>
            <param name="translationY"></param>
            <param name="translationZ"></param>
            <param name="rotationX"></param>
            <param name="rotationY"></param>
            <param name="rotationZ"></param>
            <param name="scaleFactorPpm"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gis.Transform.Negate(System.Double)">
            <summary>
            Helper funtion to reverse the sign of a value. Helps code to be more readable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gis.ExceptionBase">
            <summary>
            Base Exception Class.
            </summary>
        </member>
        <member name="M:Waymex.Gis.ExceptionBase.#ctor(System.String,System.Exception)">
            <summary>
            Base Exception Class Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gis.ExceptionBase.#ctor(System.String)">
            <summary>
            Base Exception Class Constructor.
            </summary>
        </member>
        <member name="P:Waymex.Gis.ExceptionBase.AppSource">
            <summary>
            Exposed in order that derived classe can overide.
            </summary>
        </member>
        <member name="T:Waymex.Gis.AttrributeException">
            <summary>
            Attrribute Exception Class.
            </summary>
        </member>
        <member name="M:Waymex.Gis.AttrributeException.#ctor(System.String)">
            <summary>
            Attrribute Exception Class Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gis.AttrributeException.#ctor(System.String,System.Exception)">
            <summary>
            Attrribute Exception Class Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gis.ShapeException">
            <summary>
            Shape Exception Class.
            </summary>
        </member>
        <member name="M:Waymex.Gis.ShapeException.#ctor(System.String)">
            <summary>
            Shape Exception Class Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gis.ShapeException.#ctor(System.String,System.Exception)">
            <summary>
            Shape Exception Class Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gis.ShapeTypeException">
            <summary>
            Shape Type Exception Class.
            </summary>
        </member>
        <member name="M:Waymex.Gis.ShapeTypeException.#ctor(System.String)">
            <summary>
            Shape Type Exception Class Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gis.ShapeTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Shape Type Exception Class Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gis.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.AccessToSerialPortDenied">
            <summary>
              Looks up a localized string similar to Access to serial port denied..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.ArgumentLengthNotGreaterThanZero">
            <summary>
              Looks up a localized string similar to The argument length must be greater than zero..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.ArgumentNotGreaterThanZero">
            <summary>
              Looks up a localized string similar to The argument must be greater than zero..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.ArrayCreationError">
            <summary>
              Looks up a localized string similar to Error occurred during array creation..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.BadByteSize">
            <summary>
              Looks up a localized string similar to Bad Size byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.BadCheckSum">
            <summary>
              Looks up a localized string similar to Bad Checksum byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.BadDle">
            <summary>
              Looks up a localized string similar to Bad DLE byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.FailedToOpenSerialPort">
            <summary>
              Looks up a localized string similar to Failed to open serial port..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.GpsNotDetectedOnUsb">
            <summary>
              Looks up a localized string similar to GPS Device not detected on Universal Serial Bus..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.InterruptInReadError">
            <summary>
              Looks up a localized string similar to Unable to read USB Interrupt In..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.Invalid8CharacterFilename">
            <summary>
              Looks up a localized string similar to Invalid Filename. Filenames must consist of 8 characters or less, and file extensions should not be specified..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.InvalidAttributeCollection">
            <summary>
              Looks up a localized string similar to Invalid Attribute Collection. Attribute collections added to a ShapeFile object must contain the same list of attribute names and data types..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.InvalidQueueSettings">
            <summary>
              Looks up a localized string similar to Invalid queue settings..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.InvalidReadDataDeviceID">
            <summary>
              Looks up a localized string similar to Invalid Device ID used to Read Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.InvalidSerialPortSettings">
            <summary>
              Looks up a localized string similar to Invalid serial port settings..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.InvalidShapeType">
            <summary>
              Looks up a localized string similar to Invalid Shape Type..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.InvalidTimeOutSettings">
            <summary>
              Looks up a localized string similar to Invalid timeout settings..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.IoErrorUnexpected">
            <summary>
              Looks up a localized string similar to An unexpected IO Error has occurred..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.MethodUnavailable">
            <summary>
              Looks up a localized string similar to This method is not available in this version of the GPS Library..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.NoDeviceName">
            <summary>
              Looks up a localized string similar to Unable to get the name of the Device..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.NoFolderName">
            <summary>
              Looks up a localized string similar to The folder name must be specified..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.NoGpsAcknowledgement">
            <summary>
              Looks up a localized string similar to No Acknowledgement received from the GPS device..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.NoPacketStart">
            <summary>
              Looks up a localized string similar to Packet Start not found in buffer..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.NoUsbDeviceDriver">
            <summary>
              Looks up a localized string similar to Unable to find USB Device Driver..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.NoUsbDeviceHandle">
            <summary>
              Looks up a localized string similar to Unable to obtain handle to USB Device..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.NoUsbSessionStart">
            <summary>
              Looks up a localized string similar to Unable to start a session with the USB Device..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.PacketLength">
            <summary>
              Looks up a localized string similar to Packet length received exceeds maximum length permissible..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.ProtocolNotSupported">
            <summary>
              Looks up a localized string similar to Protocol Not Supported..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.ReadOperationTimeOut">
            <summary>
              Looks up a localized string similar to Timed out during a Read Operation..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.ReceiveThreadException">
            <summary>
              Looks up a localized string similar to An exception has occurred on the receive thread..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.ReceiveTimeout">
            <summary>
              Looks up a localized string similar to Receive Timeout..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.SendTimeout">
            <summary>
              Looks up a localized string similar to Send Timeout..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.SerialPortNotOpen">
            <summary>
              Looks up a localized string similar to The serial port is not open..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorAlmanac">
            <summary>
              Looks up a localized string similar to Error Transferring Almanac Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorDateTime">
            <summary>
              Looks up a localized string similar to Error Transferring Date and Time Information..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorFlightBook">
            <summary>
              Looks up a localized string similar to Error Transferring Flight Book Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorGpsData">
            <summary>
              Looks up a localized string similar to Error Transferring GPS Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorPosition">
            <summary>
              Looks up a localized string similar to Error Transferring Position Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorProductData">
            <summary>
              Looks up a localized string similar to Error Transferring Product Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorProtocol">
            <summary>
              Looks up a localized string similar to Error Transferring Protocol Table..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorProximity">
            <summary>
              Looks up a localized string similar to Error Transferring Proximity Waypoint Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorRoute">
            <summary>
              Looks up a localized string similar to Error Transferring Routes..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorTracklog">
            <summary>
              Looks up a localized string similar to Error Transferring Tracklog Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransferErrorWaypoint">
            <summary>
              Looks up a localized string similar to Error Transferring Waypoint Data..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.TransmissionFailure">
            <summary>
              Looks up a localized string similar to Transmission Failure..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.UnexpectedFailure">
            <summary>
              Looks up a localized string similar to Unexpected Failure..
            </summary>
        </member>
        <member name="P:Waymex.Gis.Strings.WriteOperationTimeOut">
            <summary>
              Looks up a localized string similar to Timed out during a Write Operation..
            </summary>
        </member>
        <member name="T:Waymex.Gis.Projection">
            <summary>
            Transform enumeraton, this is used to specify the coordinate system to be used
            when saving GPS objects to Shape files.
            </summary>
        </member>
        <member name="F:Waymex.Gis.Projection.Geographic">
            <summary>
            Standard WGS84 Latitude and Longtitude.
            </summary>
        </member>
        <member name="F:Waymex.Gis.Projection.Utm">
            <summary>
            Universal Transverse Mercator based on the WGS84 Ellipsoid. 
            </summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.PvtDataEventArgs">
            <summary>
            PvtDataEventArgs is the class containing event data. 
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.PvtDataEventArgs.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Garmin.PvtDataEventArgs.PvtData">
            <summary>
            Returns the PVTData as a semi-colon delimited string.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.Usb.LinkBase.linkPacketIds">
            <summary>
            The packet ids used for communicating with the device.
            </summary>
            <remarks>
            Until we learn what link protocol the device wants to use, start with the basic link protocol.
            </remarks>
        </member>
        <member name="T:Waymex.Gps.Garmin.Usb.LinkPacketIds">
            <summary>
            Packet ids for a given link protocol.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.Usb.NativeBuffer">
            <summary>
            A data buffer that can be used by native code.
            </summary>
            <remarks>
            The memory is allocated from the unmanaged memory of the process using GlobalAlloc.
            </remarks>
        </member>
        <member name="T:Waymex.Gps.Garmin.Usb.NativeWin32Methods">
            <summary>
            Methods to access unmanaged DLL functions.
            </summary>
            <remarks>
            For prototypes for many Win32 APIs, use .NET Reflector to examine the Microsoft.Win32.Win32Native class in mscorlib.
            In general, classes are preferred over structs because passing null pointers becomes easy and natural.
            To allow null to be passed to [out] pointer parameters, an override must be created.
            </remarks>
        </member>
        <member name="M:Waymex.Gps.Garmin.Usb.UsbLink.PortOpen">
            <summary>
            This method was added for backward compatibility. It uses the first usb device detected.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Usb.UsbLink.PortOpen(System.String)">
            <summary>
            This method was added for backward compatibility. It uses the first usb device detected.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Usb.UsbLink.PortClose">
            <summary>
            This method was added for backward compatibility.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Usb.UsbLink.TransmitData(Waymex.Gps.Garmin.GpsPidData)">
            <summary>
            This method has been added for backward compatibility.
            </summary>
            <param name="pidData"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.Garmin.Usb.UsbLinkWorkerThread">
            <summary>
            The USB link worker thread.
            </summary>
            <remarks>
            This class contains both the worker thread code itself, along with methods that can be executed from the UI thread to manage
            and communicate with the worker thread. All communication and marshaling between threads is handled automatically.
            </remarks>
        </member>
        <member name="M:Waymex.Gps.Garmin.Usb.UsbLinkWorkerThread.MakeSureThreadIsResponsive">
            <summary>
            Ensure that the worker thread is ready to accept commands.
            </summary>
            <remarks>
            It is possible for the worker thread to get "locked up" on an I/O API call when the conversation with the device
            doesn't proceed as it should. This method detects this situation and attempts to rectify it when found by
            aborting and restarting the thread.
            </remarks>
        </member>
        <member name="T:Waymex.Gps.Garmin.CommandID">
            <summary>
            Device Command ID Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.AbortTransfer">
            <summary>0</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferAlm">
            <summary>1</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferPos">
            <summary>2</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferPrx">
            <summary>3</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferRte">
            <summary>4</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferTime">
            <summary>5</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferTrk">
            <summary>6</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferWpt">
            <summary>7</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TurnOffPower">
            <summary>8</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.StartPVTData">
            <summary>9</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.StopPVTData">
            <summary>10</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.FlightBookTransfer">
            <summary>11</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferLaps">
            <summary>12</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferWptCat">
            <summary>13</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.ReceiverMeasurementOn">
            <summary>14</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.ReceiverMeasurementOff">
            <summary>15</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.CommandID.TransferUnitId">
            <summary>26</summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.DCProtocol">
            <summary>
            Device Command Protocol Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.DCProtocol.A010">
            <summary>0</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.DCProtocol.A011">
            <summary>1</summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.Link">
            <summary>
            This object contains the link layer functionality. 
            It is responsible for the assembly and disassembly of packets, 
            checksum calculations, DLE stuffing and ACK/NAK control. 
            Normally the Link object would only be accessed through 
            the Link property of the Interface object. 
            The methods and properties shown below are exposed to provide 
            direct access to GPS devices in order that additional protocols 
            can be added by client software if required.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Link.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Link.Dispose">
            <summary>
            Releases all resources and destroys the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Link.Dispose(System.Boolean)">
            <summary>
            Releases all resources and destroys the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Link.ReceiveData">
            <summary>
            This method receives an application layer packet as a GpsPidData data type. 
            When the GPS device is accessed via the interface object, this method will be 
            invoked automatically as required. It is exposed to allow direct access to 
            the connected GPS device so that additional application protocols can be 
            implemented by client applications. See the Garmin GPS Specification for 
            further explanation of Process ID’s etc.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Link.TransmitData(Waymex.Gps.Garmin.GpsPidData)">
            <summary>
            This method transmits an application layer packet as a GpsPidData data type. 
            When the GPS device is accessed via the interface object, this method will be 
            invoked automatically as required. It is exposed to allow direct access to 
            the connected GPS device so that additional application protocols can be 
            implemented by client applications. See the Garmin GPS Specification for 
            further explanation of Process ID’s etc.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Link.TransmitData(Waymex.Gps.Garmin.GpsPidData,System.Boolean)">
            <summary>
            This method transmits an application layer packet as a GpsPidData data type. 
            When the GPS device is accessed via the interface object, this method will be 
            invoked automatically as required. It is exposed to allow direct access to 
            the connected GPS device so that additional application protocols can be 
            implemented by client applications. See the Garmin GPS Specification for 
            further explanation of Process ID’s etc.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Garmin.Link.PortTimeout">
            <summary>
            This property sets the port timeout. The value is in seconds and refers to the time
            that the com port waits for a response before an exception is raised.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Link.PortClose">
            <summary>
            This method closes the currently open serial port. If the serial prot is already
            closed then a call to this method will have no effect.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.Link.PortOpen(System.Int32,System.Int32)">
            <summary>
            This method opens the specified serial port in order to establish 
            a connection with the connected GPS device.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.LinkProtocol">
            <summary>
            Link Protocol Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.LinkProtocol.L000">
            <summary>0</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.LinkProtocol.L001">
            <summary>1</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.LinkProtocol.L002">
            <summary>2</summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.GpsPidData">
            <summary>
            GpsPidData Structure.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.GpsPidData.Pid">
            <summary>Process ID</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.GpsPidData.ByteData">
            <summary>
            Byte Data for the Command, see the Garmin Interface Specification for more details.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.ProcessId">
            <summary>
            Link Protocol Process ID Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.AckByte">
            <summary>0</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.NakByte">
            <summary>1</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.ProtocolArray">
            <summary>2</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.ProductRequest">
            <summary>3</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.ProductData">
            <summary>4</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.CommandData">
            <summary>5</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.TransferComplete">
            <summary>6</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.DateTimeData">
            <summary>7</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.PositionData">
            <summary>8</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.ProximityWaypointData">
            <summary>9</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.Records">
            <summary>10</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.RouteHeader">
            <summary>11</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.RouteWaypointData">
            <summary>12</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.AlmanacData">
            <summary>13</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.TrackData">
            <summary>14</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.WaypointData">
            <summary>15</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.PvtData">
            <summary>16</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.RouteLinkData">
            <summary>17</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.TrackHeader">
            <summary>18</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.FlightBookRecord">
            <summary>19</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.LapData">
            <summary>20</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.WaypointCategory">
            <summary>21</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.ReceiverMeasurement">
            <summary>22</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.SatelliteData">
            <summary>23</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.BaudRequestData">
            <summary>24</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.BaudAcceptData">
            <summary>25</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.UnitId">
            <summary>25</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.ProcessId.Null">
            <summary>255</summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.RTProtocol">
            <summary>
            Route Protocol Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.RTProtocol.A200">
            <summary>0</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.RTProtocol.A201">
            <summary>1</summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.SerialLink">
            <summary>
            Summary description for SerialPort.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Garmin.SerialLink.StringToByte(System.String,System.Boolean)">
            <summary>
            Converts a string to a byte array.
            </summary>
            <param name="Data"></param>
            <param name="NullTerminate"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.Garmin.TLProtocol">
            <summary>
            Tracklog Protocol Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.TLProtocol.A300">
            <summary>0</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.TLProtocol.A301">
            <summary>1</summary>
        </member>
        <member name="T:Waymex.Gps.Garmin.WaypointType">
            <summary>
            Waypoint type Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.WaypointType.Waypoint">
            <summary>0</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.WaypointType.Proximity">
            <summary>1</summary>
        </member>
        <member name="F:Waymex.Gps.Garmin.WaypointType.Route">
            <summary>2</summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.PmgnRteRoutePoint">
            <summary>
            This object is a Route Point object that forms part of the
            PmgnRte sentence.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.PmgnRteRoutePoint.Name">
            <summary>
            Gets/Sets the Route point Name.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.PmgnRteRoutePointCollection">
            <summary>
            A collection of Route Points.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.PmgnRteRoutePointCollection.#ctor">
            <summary>
            Contructor for the PmgnRteRoutePointCollection class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.PmgnRteRoutePointCollection.GetEnumerator">
            <summary>
            This method is the enumerator for the collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.PmgnRteRoutePointCollection.Add(Waymex.Gps.Nmea.PmgnRteRoutePoint)">
            <summary>
            This method adds a RoutePoint object to the collection. 
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.PmgnRteRoutePointCollection.Count">
            <summary>
            Returns the number of RoutePoint objects in the GsvSatelliteCollection. 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Waymex.Gps.Nmea.PmgnRteRoutePointCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the PmgnRteRoutePointCollection by ordinal reference.
            This Property is the default indexer in C#.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.GsaSatellite">
            <summary>
            GSV Nmea sentence class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.GsaSatellite.SatellitePrn">
            <summary>
            Returns the satellite PRN number.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.GsaSatelliteCollection">
            <summary>
            GsaSatelliteCollection class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.GsaSatelliteCollection.#ctor">
            <summary>
            Constructor for the GsaSatelliteCollection class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.GsaSatelliteCollection.GetEnumerator">
            <summary>
            This method is the enumerator for the GsaSatelliteCollection collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.GsaSatelliteCollection.Count">
            <summary>
            Returns the number of GsaSatellite objects in the GsaSatelliteCollection collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.GsaSatelliteCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the GsaSatelliteCollection collection by ordinal reference.
            This Property is the default indexer in C#.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.GsvSatellite">
            <summary>
            GSV satellite class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.GsvSatellite.#ctor">
            <summary>
            Constructor for the GsvSatellite class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.GsvSatellite.SatellitePrn">
            <summary>
            Returns the satellite PRN number.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.GsvSatellite.SatelliteElevation">
            <summary>
            Returns the satellite elevation (0-90 Degrees). 
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.GsvSatellite.SatelliteAzimuth">
            <summary>
            Returns the satellite azimuth (0-359 Degrees True). 
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.GsvSatellite.SignalToNoiseRatio">
            <summary>
            Returns the signal to noise ratio (0-99 dB). 
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.GsvSatelliteCollection">
            <summary>
            GsvSatelliteCollection collection class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.GsvSatelliteCollection.#ctor">
            <summary>
            Contructor for the GsvSatelliteCollection class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.GsvSatelliteCollection.GetEnumerator">
            <summary>
            This method is the enumerator for the GsvSatelliteCollection collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.GsvSatelliteCollection.Count">
            <summary>
            Returns the number of GsvSatellite objects in the GsvSatelliteCollection collection. 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Waymex.Gps.Nmea.GsvSatelliteCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the GsaSatelliteCollection collection by ordinal reference.
            This Property is the default indexer in C#.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.Sentence">
            <summary>
            Base classs for all NMEA sentence classes.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.Sentence.m_astrSentence">
            <summary>
            This member array is populated by the base class and contains each element of the NMEA Sentence
            stored as a string.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.#ctor">
             <summary>
            Constructor for the Sentence base class. This class is the base class for all other Sentence classes.
             </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.#ctor(System.String)">
             <summary>
            Constructor for the Sentence base class. This class is the base class for all other Sentence classes.
             </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.FormatNumber(System.String)">
             <summary>
            This base class method is used to convert a string representation of a number in to a double. 
            This function handles locale differences e.g. those that use a comma as a decimel point.
            Note that NMEA always uses a full stop.
             </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.IsNumeric(System.String)">
            <summary>
            Returns True if the NMEA string value passed, is numeric.
            </summary>
            <param name="Number"></param>
            <returns></returns>
        </member>
        <member name="P:Waymex.Gps.Nmea.Sentence.IsProprietary">
            <summary>
            Indicates whether the the NMEA Sentence is a standard NMEA Sentence or a Proprietary Sentence.
            Propriety Sentences are used by some manufacturers to provide additional data.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.FormatPosition(System.Double,System.Double)">
            <summary>
            This method  converts the latitude and longitude values (expressed as signed degrees) into a
            string suitable to be inserted into an NMEA sentence. The NMEA format is used i.e. 3815.5,N 
            means 38 degrees 15 minutes and 30 seconds, 11805.25 meants 118 degrees, 5 minutes, 15 seconds.
            See NMEA documentation for WPL sentence.
            </summary>
            <param name="Latitude">Latitude part of the position.</param>
            <param name="Longitude">Longitude part of the position.</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.FormatLatitude(System.Double)">
            <summary>
            This function formats a latitude (expressed as signed degrees) as per the NMEA 
            format suitable to be inserted into an NMEA sentence. The NMEA format is used i.e. 3815.5,N 
            means 38 degrees 15 minutes and 30 seconds, 11805.25 meants 118 degrees, 5 minutes, 15 seconds.
            See NMEA documentation for WPL sentence.
            </summary>
            <param name="Position"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.FormatLongitude(System.Double)">
            <summary>
            This function formats a longitude (expressed as signed degrees) as per the NMEA 
            format suitable to be inserted into an NMEA sentence. The NMEA format is used i.e. 3815.5,N 
            means 38 degrees 15 minutes and 30 seconds, 11805.25 meants 118 degrees, 5 minutes, 15 seconds.
            See NMEA documentation for WPL sentence.
            </summary>
            <param name="Position"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.FormatPosition(System.String)">
            <summary>
            This method returns a double based on an NMEA positional values. Values can include the N, E, W, S modifiers
            e.g. 4917.24N. The modifiers S and E will cause the return value to be negative.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.Sentence.Checksum">
            <summary>
            Returns the checksum value of the NMEA Sentence. Not all NMEA Sentences include a checksum
            in these cases the value of this property will be 0. If the checksum in the contained within
            the NMEA Sentence is invalid for the Sentence then the value will be set to -1.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.ToString">
            <summary>
            Returns the NMEA Sentence as a string in its original format with validated checksum.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.FormatDate(System.String)">
            <summary>
            This method, available to derived classes to format NMEA date stings into strings
            suitable for use in Date/Time functions.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.FormatTime(System.String)">
            <summary>
            This method, available to derived classes to format NMEA time stings into strings
            suitable for use in Date/Time functions.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.Sentence.TalkerId">
            <summary>
            Returns the Talker ID of the NMEA Sentence. This indicates the type of NMEA device
            that has created the Sentence. For example a GPS device would typically have a
            Talker ID of 'GP'.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.Sentence.ManufacturerId">
            <summary>
            Returns the Manufacturer ID for Proprietary sentences e.g. 'GRM' would be returned for
            Garmins Proprietary sentences. The property throws an NMEANotSupported Exception with
            non Proprietary-sentences.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.Sentence.ManufacturerDescription">
            <summary>
            Returns the Manufacturer Description for Proprietary Sentences e.g. 'Garmin International Inc.'.
            The property throws an NMEANotSupported Exception with with non-Proprietary Sentences.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.Sentence.TypeId">
            <summary>
            Returns the Type ID of the NMEA Sentence. This property indicates the NMEA Sentence type.
            For example 'RMC', 'GLL' etc. Proprietary sentence objects return the full type/manufacurer ID
            e.g. PSLIB, PGRMA etc.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.Sentence.TypeDescription">
            <summary>
            Returns the Type Description of the NMEA Sentence. For example if the NMEA Sentence had a
            Type ID of 'GLL' then this property would return 'Geographic Position - Latitude/Longitude'
            (See the NMEA Specifications for further details).
            Proprietary sentence objects return the NMEANotSupported Exception.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.Sentence.TalkerDescription">
            <summary>
            Returns the Talker Description of the NMEA Sentence. For example a GPS device that had
            a Talker ID of 'GP' would have a Talker Description of 'Global Positioning System (GPS)'.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.Sentence.GetDatum(System.Int32)">
            <summary>
            Returns the Datum as a string based on the passed Datum ID.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceBod">
            <summary>
            BOD NMEA sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentenceBod.#ctor(System.String)">
            <summary>
            Constructer for the SentenceBod class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceBod.BearingDegreesTrue">
            <summary>
            Returns the bearing in degrees True.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceBod.BearingDegreesMagnetic">
            <summary>
            Returns the bearing in Degrees Magnetic.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceBod.ToWaypoint">
            <summary>
            Returns the name of the destination Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceBod.FromWaypoint">
            <summary>
            Returns the name of the originating Waypoint.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceGga">
            <summary>
            GGA NMEA sentence class.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceGga.GgaQuality">
            <summary>
            Enumeration used to describe the GGA quality options.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGga.GgaQuality.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGga.GgaQuality.NoFix">
            <summary>
            No fix.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGga.GgaQuality.NonDgpsFix">
            <summary>
            Not a DGPS fix.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGga.GgaQuality.DgpsFix">
            <summary>
            DGPS fix.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGga.GgaQuality.Estimated">
            <summary>
            Estimated.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentenceGga.#ctor(System.String)">
            <summary>
            Constructor for the SentenceGga class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.Utc">
            <summary>
            Returns the the time (UTC).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.Latitude">
            <summary>
            Returns the Latitude in Degrees. Negative values indicate positions West.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.Longitude">
            <summary>
            Returns the Longitude in Degrees. Negative values indicate positions South.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.GpsQuality">
            <summary>
            Returns the quality of the fix data.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.SatellitesInView">
            <summary>
            Returns the number of satellites in view.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.HorizontalDilution">
            <summary>
            Returns the Horizontal Dilution of Precision.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.AntennaAltitude">
            <summary>
            Returns the Antenna Altitude above/below mean-sea-level (Geoid) in meters.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.GeoidalHeight">
            <summary>
            Returns the difference between the WGS-84 Earth ellipsoid and mean-sea-level (Geoid),
            a negative value indicates that the Geoid is below the ellipsoid.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.DgpsDataAge">
            <summary>
            Returns the age of differential GPS data. Time in seconds since last SC104 type 1 or update.
            This property will be 0 when DGPS is not used.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGga.DRStationId">
            <summary>
            Returns the Differential Reference Station ID.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceGll">
            <summary>
            GLL NMEA sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentenceGll.#ctor(System.String)">
            <summary>
            Constructor for the SentenceGll class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGll.Latitude">
            <summary>
            Returns the Latitude in Degrees. Negative values indicate positions West.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGll.Longitude">
            <summary>
            Returns the Longitude in Degrees. Negative values indicate positions South.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGll.Utc">
            <summary>
            Returns the the time (UTC).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGll.DataValid">
            <summary>
            Returns the status of the data.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceGsa">
            <summary>
            GSA NMEA sentence class.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceGsa.GsaMode">
            <summary>
            Enumeration used to describe the GSA mode.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGsa.GsaMode.ModeUnknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGsa.GsaMode.ModeAutomatic">
            <summary>
            Automatic.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGsa.GsaMode.ModeManual">
            <summary>
            Manual.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceGsa.GsaFixType">
            <summary>
            Enumeration used to describe the GSA fix type.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGsa.GsaFixType.FixTypeUnknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGsa.GsaFixType.FixTypeNotAvailable">
            <summary>
            Not Available
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGsa.GsaFixType.FixType2D">
            <summary>
            2D fix.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceGsa.GsaFixType.FixType3D">
            <summary>
            3D fix.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentenceGsa.#ctor(System.String)">
            <summary>
            Constructor for the SentenceGsa class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsa.Mode">
            <summary>
            Returns the Selection Mode.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsa.FixType">
            <summary>
            Returns the Satellite Fix Type.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsa.Satellites">
            <summary>
            Returns a GsaSatelliteCollection collection of GsaSatellite objects, each GsaSatellite
            object represents a satellite used in the solution.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsa.PositionDilution">
            <summary>
            Returns the Position Dilution of Precision.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsa.HorizontalDilution">
            <summary>
            Returns the Horizontal Dilution of Precision.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsa.VerticalDilution">
            <summary>
            Returns the Vertical Dilution of Precision.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceGsv">
            <summary>
            GSV NMEA sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentenceGsv.#ctor(System.String)">
            <summary>
            Constructor for the SentenceGsv class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsv.TotalGsvSentences">
            <summary>
            Returns the total number of GSV sentences to be transmitted.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsv.CurrentGsvSentence">
            <summary>
            Returns the number of the current GSV sentence.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsv.SatellitesInView">
            <summary>
            Returns the total number of satellites in view.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceGsv.Satellites">
            <summary>
            Returns a GsvSatelliteCollection collection of GsvSatellite objects, each GsaSatellite object represents a satellite in view.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRmc">
            <summary>
            PGRMC NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFixMode">
            <summary>
            Enumeration describing the PGRMC fix mode.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFixMode.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFixMode.Automatic">
            <summary>
            Automatic.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFixMode.Exclusivley2D">
            <summary>
            2D exclusive fix.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFixMode.Exclusivley3D">
            <summary>
            3D exclusive fix.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRmc.PgRmcDifferentialMode">
            <summary>
            Enumeration describing the differential mode.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcDifferentialMode.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcDifferentialMode.Automatic">
            <summary>
            Automatic.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcDifferentialMode.Differential">
            <summary>
            Differential.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFilterMode">
            <summary>
            Enumeration describing the PGRMC filter mode.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFilterMode.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFilterMode.NoFilter">
            <summary>
            No filter.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFilterMode.Automatic">
            <summary>
            Automatic.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcFilterMode.TimeConstant">
            <summary>
            Time constant.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRmc.PgRmcPulseMode">
            <summary>
            Enumeration describing the pulse mode.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcPulseMode.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcPulseMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmc.PgRmcPulseMode.OneHertz">
            <summary>
            Once per second.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePgRmc.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.FixMode">
            <summary>
            Returns the Fix Mode.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.Altitude">
            <summary>
            Returns the altitude in meters above/below mean-sea-level.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.EarthDatum">
            <summary>
            Retruns the current Datum in use.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.UedSemiMajorAxis">
            <summary>
            Returns the user earth datum Semi-Major Axis.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.UedInverseFlatteningFactor">
            <summary>
            Returns the user earth datum Inverse Flattening Factor.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.UedDeltaX">
            <summary>
            Returns the user earth datum Delta X.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.UedDeltaY">
            <summary>
            Returns the user earth datum Delta Y.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.UedDeltaZ">
            <summary>
            Returns the user earth datum Delta Z.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.DifferentialMode">
            <summary>
            Returns the Differential Mode.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.BaudRate">
            <summary>
            Returns the Baud Rate.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.FilterMode">
            <summary>
            Returns the Filter Mode.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.FilterTimeConstant">
            <summary>
            Returns the Fileter Mode. This property is set when the PgRmcFilterMode is set
            to TimeConstant.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.PpsMode">
            <summary>
            Returns the Pulses Per Second mode.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.PulseLength">
            <summary>
            Returns the pulse length in milliseconds.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmc.DeadReckoningValidTime">
            <summary>
            Returns the Dead Reckoning Valid Time in seconds.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRme">
            <summary>
            PGRME NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePgRme.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRme.EstimatedHpe">
            <summary>
            Returns the estimated Horizontal position error (HPE) in meters.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRme.EstimatedVpe">
            <summary>
            Returns the estimated vertical position error (VPE) in meters.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRme.OverallSphericalEpe">
            <summary>
            Returns the estimated overall position error (EPE) in meters.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRmm">
            <summary>
            PGRMM NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePgRmm.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmm.ActiveDatum">
            <summary>
            Returns the currently active Datum.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRmz">
            <summary>
            PGRMZ NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePgRmz.PgRmzPositionFix">
            <summary>
            Enumerator describing the PGRMZ position fix.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmz.PgRmzPositionFix.DimensionsUnknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmz.PgRmzPositionFix.UserAltitude">
            <summary>
            User altitude.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePgRmz.PgRmzPositionFix.GpsAltitude">
            <summary>
            GPS altitude.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePgRmz.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmz.Altitude">
            <summary>
            Returns the Altitude in feet.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePgRmz.PositionFix">
            <summary>
            Returns the Position Fix.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePmgnAlm">
            <summary>
            PMGNALM NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnAlm.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.TotalMessages">
            <summary>
            Gets the total number of messages.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.MessageNumber">
            <summary>
            Gets the Message Number.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.SatelliteId">
            <summary>
            Gets the Satellite PRN Number.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.WeekNumber">
            <summary>
            Gets the GPS Week Number. Date and time in GPS is computed
            as number of weeks from 6 January 1980 plus the number of 
            Seconds into the week.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.Health">
            <summary>
            Gets the satellite vehicles Health.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.Eccentricity">
            <summary>
            Gets the Eccentricity.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.ReferenceTime">
            <summary>
            Gets the Almanac Reference Time.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.InclinationAngle">
            <summary>
            Gets the Inclination Angle.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.RightAscensionRate">
            <summary>
            Gets the Rate of Right Ascension.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.RootOfSemiMajorAxis">
            <summary>
            Gets the Root of Semi-Major Axis.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.Perigee">
            <summary>
            Gets the Argument of Perigee.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.LongitudeOfAscensionNode">
            <summary>
            Gets the  Longitude of Ascension Node.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.MeanAnomaly">
            <summary>
            Gets the Mean Anomaly
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.ClockCorrectionF0">
            <summary>
            Gets the F0 Clock Parameter.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnAlm.ClockCorrectionF1">
            <summary>
            Gets the F1 Clock Parameter.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePmgnCmd">
            <summary>
            PMGNCMD NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnCmd.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnCmd.Command">
            <summary>
            Gets the Magellan Command.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnCmd.Parameter1">
            <summary>
            Gets the first parameter for the command.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnCmd.Parameter2">
            <summary>
            Gets the second parameter for the command.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnCmd.Parameter3">
            <summary>
            Gets the third parameter for the command.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePmgnRte">
            <summary>
            PMGNRTE NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePmgnRte.IconStatus">
            <summary>
            Enumerator to identify the Icon Status.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePmgnRte.IconStatus.Unknown">
            <summary>
            Icon status unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePmgnRte.IconStatus.IconsUsed">
            <summary>
            Icons used in this sentence.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePmgnRte.IconStatus.IconsNotUsed">
            <summary>
            Icons not used in this sentence.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnRte.#ctor">
            <summary>
            Constructor for the class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnRte.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnRte.NumberOfMessages">
            <summary>
            Gets/Sets the number of messages.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnRte.MessageNumber">
            <summary>
            Gets/Sets the current message number.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnRte.MessageType">
            <summary>
            Gets/Sets the current message type
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnRte.RouteNumber">
            <summary>
            Gets/Sets the Route Number.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnRte.RouteName">
            <summary>
            Gets/Sets the Route Name.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnRte.RouteMessage">
            <summary>
            Gets/Sets the Route Message.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnRte.RoutePoints">
            <summary>
            Gets/Sets the Rout Points.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnRte.Icons">
            <summary>
            Gets/Sets the Icon Status.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnRte.ToString">
            <summary>
            Returns the sentence as a correctlt formatted NMEA sentence with checksum.
            </summary>
            <returns>NMEA sentence.</returns>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnRte.FixRouteNameAndIcons(Waymex.Gps.Nmea.SentencePmgnRte[]@)">
            <summary>
            Some devices that do not support route names place a Waypoint name
            where the route name should be. This method corrects this for a route
            and returns the route name. In addition the method attempts to identify
            icons within the Waypoint names.
            </summary>
            <remarks>
            If there is only one sentence in the array, it cannot be determined easily
            whether the route uses a route name.
            However several approaches are adopted together and in almost all cases the correct
            values are returned.
            Problems can occur with Waypoint names of 1 character long or with routename that are
            the same as a waypoint name.
            </remarks>
            <param name="sentences">An array of SentencePmgnRte setntence objects.</param>
            <returns>Routename</returns>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnRte.UsesIcons(Waymex.Gps.Nmea.SentencePmgnRte,System.Boolean)">
            <summary>
            Rreturns true if icons are used and false otherwise.
            </summary>
            <param name="sentence">An array of SentencePmgnRte sentence objects.</param>
            <param name="noRouteNameExists"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePmgnTrk">
            <summary>
            PMGNTRK NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnTrk.#ctor">
            <summary>
            Constructor for the class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnTrk.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnTrk.Name">
            <summary>
            Gets/Sets the Track  Name.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnTrk.Latitude">
            <summary>
            Gets/Sets the Latitude of the track point.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnTrk.Longitude">
            <summary>
            Gets/Sets the Longitude of the track point.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnTrk.Altitude">
            <summary>
            Gets/Sets the Altitude of the track point.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnTrk.AltitudeUnits">
            <summary>
            Gets/Sets the units of measurement for the Altitude of the track point.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnTrk.UtcDate">
            <summary>
            Gets/Sets the Date (UTC) of the track point.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnTrk.UtcTime">
            <summary>
            Gets/Sets the Time (UTC) of the track point.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnTrk.Fix">
            <summary>
            Gets/Sets the Fix value for the track point.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnTrk.ToString">
            <summary>
            Returns the sentence as a correctlt formatted NMEA sentence with checksum.
            </summary>
            <returns>NMEA sentence.</returns>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePmgnVer">
            <summary>
            PMGNVER NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnVer.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnVer.ProductId">
            <summary>
            Gets the Product ID of the connected device.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnVer.SoftwareVersion">
            <summary>
            Gets the Software version in use.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnVer.ProductDescription">
            <summary>
            Gets the Product Description of the connected device.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePmgnWpl">
            <summary>
            PMGNWPL NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnWpl.#ctor">
            <summary>
            Constructor for the class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnWpl.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnWpl.Latitude">
            <summary>
            Gets/Sets the Latitude of the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnWpl.Longitude">
            <summary>
            Gets/Sets the Longitude of the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnWpl.Altitude">
            <summary>
            Gets/Sets the Altitude of the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnWpl.AltitudeUnits">
            <summary>
            Gets/Sets the units of measure for the Altitude.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnWpl.Name">
            <summary>
            Gets/Sets the name of the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnWpl.Comment">
            <summary>
            Gets/Sets the Comment associated with the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnWpl.Icon">
            <summary>
            Gets/Sets the Icon value for the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePmgnWpl.Type">
            <summary>
            Gets/Sets the Waypoint type.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePmgnWpl.ToString">
            <summary>
            Returns the sentence as a correctlt formatted NMEA sentence with checksum.
            </summary>
            <returns>NMEA sentence.</returns>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePsLib">
            <summary>
            PSLIB NMEA propriertry sentence class.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentencePsLib.PsLibRequestType">
            <summary>
            Enumeration describing the PSLIB request type.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePsLib.PsLibRequestType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePsLib.PsLibRequestType.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePsLib.PsLibRequestType.Configuration">
            <summary>
            Configuration.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentencePsLib.PsLibRequestType.TuningMessage">
            <summary>
            Tuning message.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentencePsLib.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePsLib.Frequency">
            <summary>
            Returns the frequency in Kilohertz (KHz).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePsLib.BitRate">
            <summary>
            Returns bit rate in bits per second (Bps).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentencePsLib.RequestType">
            <summary>
            Indicates the request type. See RequestType.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceRmb">
            <summary>
            RMB NMEA sentence class.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceRmb.RmbDirection">
            <summary>
            Enumeration describing the RMB direction.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceRmb.RmbDirection.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceRmb.RmbDirection.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Nmea.SentenceRmb.RmbDirection.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentenceRmb.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.CrossTrackError">
            <summary>
            Returns the Cross Track Error in Nautical Miles.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.DirectionToSteer">
            <summary>
            Returns the Direction to Steer.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.ReceiverWarning">
            <summary>
            Returns the Navigation Receiver Warning.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.ToWaypoint">
            <summary>
            Returns the name of the destination Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.FromWaypoint">
            <summary>
            Returns the name of the originating Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.DestinationLatitude">
            <summary>
            Returns the Latitude in Degrees of destination Waypoint. Negative values indicate positions West.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.DestinationLongitude">
            <summary>
            Returns the Longitude in Degrees of destination Waypoint. Negative values indicate positions South.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.RangeToDestination">
            <summary>
            Returns the range to destination in Nautical Miles.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.BearingToDestination">
            <summary>
            Returns the Bearing to destination in Degrees True.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.DestinationClosingVelocity">
            <summary>
            Returns the Destination Closing Velocity in Knots.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmb.ArrivalCircleEntered">
            <summary>
            Indicates whether the Arival Circle has been entered.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceRmc">
            <summary>
            RMC NMEA sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentenceRmc.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmc.Latitude">
            <summary>
            Returns the Latitude in Degrees. Negative values indicate positions West.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmc.Longitude">
            <summary>
            Returns the Longitude in Degrees. Negative values indicate positions South.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmc.Speed">
            <summary>
            Returns the speed over ground in Knots.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmc.TrackMadeGood">
            <summary>
            Returns the Track Made Good in degrees true.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmc.MagneticVariation">
            <summary>
            Returns the Magnetic Variation in Degrees.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmc.NavigationWarning">
            <summary>
            Returns true if a Receiver Navigation Warning is present.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceRmc.DateTime">
            <summary>
            Returns the date and time (UTC).
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SentenceWpl">
            <summary>
            WPL NMEA sentence class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.SentenceWpl.#ctor(System.String)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="sentence">NMEA sentence.</param>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceWpl.Latitude">
            <summary>
            Returns the Latitude in Degrees. Negative values indicate positions West.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceWpl.Longitude">
            <summary>
            Returns the Longitude in Degrees. Negative values indicate positions South.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.SentenceWpl.WaypointName">
            <summary>
            Returns the Waypoint name.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.SerialLink.OnRxSentenceEventHandler">
            <summary>
            Delegate for the OnRxSentence event.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Nmea.OnRxSentenceEventArgs">
            <summary>
            This class contains the Event Arguments for the OnRxSentence event.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Nmea.OnRxSentenceEventArgs.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Nmea.OnRxSentenceEventArgs.RxSentence">
            <summary>
            Returns the received Sentence as a string.
            </summary>
        </member>
        <member name="T:Waymex.Gps.ReceiveSentenceEventArgs">
            <summary>
            This class is the event arguments class used to poassargument values in the ReceiveSentence event.
            </summary>
        </member>
        <member name="M:Waymex.Gps.ReceiveSentenceEventArgs.#ctor(Waymex.Gps.Nmea.Sentence)">
            <summary>
            Constructor for the class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.ReceiveSentenceEventArgs.Sentence">
            <summary>
            Returns the NMEA sentence as a typed object (Sentence.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Subclass">
            <summary>
            Subclass data class. This class is used to store data for map dartabase Waypoints.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Subclass.#ctor">
            <summary>
            Default constructor for the Subclass.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Subclass.#ctor(System.Byte[])">
            <summary>
            Internal constructor that accepts a byte array.
            </summary>
            <param name="dataArray"></param>
        </member>
        <member name="M:Waymex.Gps.Subclass.Add(System.Byte)">
            <summary>
            This method adds a byte to the end of the Subclass. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.Subclass.Length">
            <summary>
            Returns the number of Subclass bytes. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.Subclass.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the Subclass by ordinal reference.
            This Property is the default indexer in C#.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Subclass.ToString">
            <summary>
            Returns the string as a hexadecimel, space delimited string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.Subclass.ToByteArray">
            <summary>
            Returns the SubClass as an array of bytes.
            </summary>
            <returns>Array of bytes.</returns>
        </member>
        <member name="T:Waymex.Gps.SymbolId">
            <summary>
            Enumerator for Symbols (Icons) includes all Garmin and Magellan Symbol Sets.
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Anchor">
            <summary>
            white anchor symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Bell">
            <summary>
            white bell symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DiamondGreen">
            <summary>
            green diamond symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DiamondRed">
            <summary>
            red diamond symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DiverDown1">
            <summary>
            diver down flag 1
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DiverDown2">
            <summary>
            diver down flag 2
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Dollar">
            <summary>
            white dollar symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Fish">
            <summary>
            white fish symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Fuel">
            <summary>
            white fuel symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Horn">
            <summary>
            white horn symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.House">
            <summary>
            white house symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Knife">
            <summary>
            white knife and fork symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Light">
            <summary>
            white light symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Mug">
            <summary>
            white mug symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Skull">
            <summary>
            white skull and crossbones symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SquareGreen">
            <summary>
            green square symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SquareRed">
            <summary>
            red square symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.WhiteBuoy">
            <summary>
            white buoy waypoint symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.WaypointDot">
            <summary>
            waypoint dot
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Wreck">
            <summary>
            white wreck symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NullTransparent">
            <summary>
            null symbol (transparent)
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Mob">
            <summary>
            man overboard symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyAmber">
            <summary>
            amber map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyBlack">
            <summary>
            black map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyBlue">
            <summary>
            blue map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyGreen">
            <summary>
            green map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyGreenRed">
            <summary>
            green/red map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyGreenWhite">
            <summary>
            green/white map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyOrange">
            <summary>
            orange map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyRed">
            <summary>
            red map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyRedGreen">
            <summary>
            red/green map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyRedWhite">
            <summary>
            red/white map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyViolet">
            <summary>
            violet map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyWhite">
            <summary>
            white map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyWhiteGreen">
            <summary>
            white/green map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BuoyWhiteRed">
            <summary>
            white/red map buoy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Dot">
            <summary>
            white dot symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.RadioBeacon">
            <summary>
            radio beacon symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BoatRamp">
            <summary>
            boat ramp symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Camp">
            <summary>
            campground symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Restrooms">
            <summary>
            restrooms symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Showers">
            <summary>
            shower symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DrinkingWater">
            <summary>
            drinking water symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Phone">
            <summary>
            telephone symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FirstAid">
            <summary>
            first aid symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Information">
            <summary>
            information symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Parking">
            <summary>
            parking symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Park">
            <summary>
            park symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Picnic">
            <summary>
            picnic symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Scenic">
            <summary>
            scenic area symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Skiing">
            <summary>
            skiing symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Swimming">
            <summary>
            swimming symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Dam">
            <summary>
            dam symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Controlled">
            <summary>
            controlled area symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Danger">
            <summary>
            danger symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Restricted">
            <summary>
            restricted area symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Null">
            <summary>
            null symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Ball">
            <summary>
            ball symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Car">
            <summary>
            car symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Deer">
            <summary>
            deer symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ShoppingCart">
            <summary>
            shopping cart symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Lodging">
            <summary>
            lodging symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Mine">
            <summary>
            mine symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TrailHead">
            <summary>
            trail head symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TruckStop">
            <summary>
            truck stop symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.UserExit">
            <summary>
            user exit symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Flag">
            <summary>
            flag symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CircleX">
            <summary>
            circle with x in the center
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Open24hr">
            <summary>
            open 24 hours symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FishingHotSpotFacility">
            <summary>
            U fishing hot spots facility
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BottomConditions">
            <summary>
            bottom conditions
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TidePredictionStation">
            <summary>
            tide/current prediction station
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.AnchorProhibited">
            <summary>
            U anchor prohibited symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Beacon">
            <summary>
            U beacon symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CoastGuard">
            <summary>
            U coast guard symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Reef">
            <summary>
            U reef symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.WeedBed">
            <summary>
            U weedbed symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DropOff">
            <summary>
            U dropoff symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Dock">
            <summary>
            U dock symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Marina">
            <summary>
            U marina symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BaitTackle">
            <summary>
            U bait and tackle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Stump">
            <summary>
            U stump symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.InterstateHighway">
            <summary>
            interstate hwy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.UsHignway">
            <summary>
            us highway symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.StateHighway">
            <summary>
            state highway symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.MileMarker">
            <summary>
            mile marker symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TrackBack">
            <summary>
            tracback (feet) symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Golf">
            <summary>
            golf symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SmallCity">
            <summary>
            small city symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.MediumCity">
            <summary>
            medium city symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LargeCity">
            <summary>
            large city symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Freeway">
            <summary>
            intl freeway highway symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NationalHighway">
            <summary>
            intl national highway symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CapitalCity">
            <summary>
            capital city symbol (star)
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.AmusementPark">
            <summary>
            amusement park symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Bowling">
            <summary>
            bowling symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CarRental">
            <summary>
            car rental symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CarRepair">
            <summary>
            car repair symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FastFood">
            <summary>
            fast food symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Fitness">
            <summary>
            fitness symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Movie">
            <summary>
            movie symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Museum">
            <summary>
            museum symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Pharmacy">
            <summary>
            pharmacy symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Pizza">
            <summary>
            pizza symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.PostOffice">
            <summary>
            post office symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.RvPark">
            <summary>
            RV park symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.School">
            <summary>
            school symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Stadium">
            <summary>
            stadium symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Store">
            <summary>
            dept. store symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Zoo">
            <summary>
            zoo symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.GasPlus">
            <summary>
            convenience store symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Faces">
            <summary>
            live theater symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.RampIntersection">
            <summary>
            ramp intersection symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.StreetIntersection">
            <summary>
            street intersection symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.WeighStation">
            <summary>
            inspection/weigh station symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TollBooth">
            <summary>
            toll booth symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ElevationPoint">
            <summary>
            elevation point symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ExitNoService">
            <summary>
            exit without services symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.GeographicPlaceManMade">
            <summary>
            geographic place name, man-made
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.GeographicPlaceWater">
            <summary>
            geographic place name, water
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.GeographicPlaceLand">
            <summary>
            geographic place name, land
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Bridge">
            <summary>
            bridge symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Building">
            <summary>
            building symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Cemetery">
            <summary>
            cemetery symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Church">
            <summary>
            church symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Civil">
            <summary>
            civil location symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Crossing">
            <summary>
            crossing symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.HistoricTown">
            <summary>
            historical town symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Levee">
            <summary>
            levee symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Military">
            <summary>
            military location symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.OilField">
            <summary>
            oil field symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Tunnel">
            <summary>
            tunnel symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Beach">
            <summary>
            beach symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Forest">
            <summary>
            forest symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Summit">
            <summary>
            summit symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LargeRampIntersection">
            <summary>
            large ramp intersection symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LargeExitNoService">
            <summary>
            large exit without services smbl
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Badge">
            <summary>
            police/official badge symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Cards">
            <summary>
            gambling/casino symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SnowSkiingSymbol">
            <summary>
            snow skiing symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.IceSkating">
            <summary>
            ice skating symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Wrecker">
            <summary>
            tow truck (wrecker) symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Border">
            <summary>
            border crossing (port of entry)
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Geocache">
            <summary>
            geocache location
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.GeocacheFind">
            <summary>
            found geocache
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactSmiley">
            <summary>
            Rino contact symbol, "smiley" 
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactBallCap">
            <summary>
            Rino contact symbol, "ball cap"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactBigEars">
            <summary>
            Rino contact symbol, "big ear"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactSpike">
            <summary>
            Rino contact symbol, "spike"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactGoatee">
            <summary>
            Rino contact symbol, "goatee"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactAfro">
            <summary>
            Rino contact symbol, "afro"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactDreads">
            <summary>
            Rino contact symbol, "dreads"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactFemale1">
            <summary>
            Rino contact symbol, "female 1"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactFemale2">
            <summary>
            Rino contact symbol, "female 2"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactFemale3">
            <summary>
            Rino contact symbol, "female 3"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactRanger">
            <summary>
            Rino contact symbol, "ranger"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactKungFu">
            <summary>
            Rino contact symbol, "kung fu"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactSumo">
            <summary>
            Rino contact symbol, "sumo"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactPirate">
            <summary>
            Rino contact symbol, "pirate"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactBiker">
            <summary>
            Rino contact symbol, "biker"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactAlien">
            <summary>
            Rino contact symbol, "alien"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactBug">
            <summary>
            Rino contact symbol, "bug"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactCat">
            <summary>
            Rino contact symbol, "cat"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactDog">
            <summary>
            Rino contact symbol, "dog"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ContactPig">
            <summary>
            Rino contact symbol, "pig"
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Hydrant">
            <summary>
            water hydrant symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FlagBlue">
            <summary>
            blue flag symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FlagGreen">
            <summary>
            green flag symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FlagRed">
            <summary>
            red flag symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.PinBlue">
            <summary>
            blue pin symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.PinGreen">
            <summary>
            green pin symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.PinRed">
            <summary>
            red pin symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BlockBlue">
            <summary>
            blue block symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BlockGreen">
            <summary>
            green block symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BlockRed">
            <summary>
            red block symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BikeTrail">
            <summary>
            bike trail symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CircleRed">
            <summary>
            red circle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CircleGreen">
            <summary>
            green circle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CircleBlue">
            <summary>
            blue circle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DiamondBlue">
            <summary>
            blue diamond symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.OvalRed">
            <summary>
            red oval symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.OvalGreen">
            <summary>
            green oval symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.OvalBlue">
            <summary>
            blue oval symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.RectRed">
            <summary>
            red rectangle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.RectGreen">
            <summary>
            green rectangle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.RectBlue">
            <summary>
            blue rectangle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SquareBlue">
            <summary>
            blue square symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterRed_A">
            <summary>
            red letter 'A' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterRed_B">
            <summary>
            red letter 'B' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterRed_C">
            <summary>
            red letter 'C' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterRed_D">
            <summary>
            red letter 'D' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterGreen_A">
            <summary>
            green letter 'A' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterGreen_B">
            <summary>
            green letter 'C' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterGreen_C">
            <summary>
            green letter 'B' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterGreen_D">
            <summary>
            green letter 'D' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterBlue_A">
            <summary>
            blue letter 'A' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterBlue_B">
            <summary>
            blue letter 'B' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterBlue_C">
            <summary>
            blue letter 'C' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.LetterBlue_D">
            <summary>
            blue letter 'D' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_0_">
            <summary>
            red number '0' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_1_">
            <summary>
            red number '1' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_2">
            <summary>
            red number '2' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_3">
            <summary>
            red number '3' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_4">
            <summary>
            red number '4' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_5">
            <summary>
            red number '5' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_6">
            <summary>
            red number '6' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_7">
            <summary>
            red number '7' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_8">
            <summary>
            red number '8' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberRed_9">
            <summary>
            red number '9' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_0">
            <summary>
            green number '0' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_1">
            <summary>
            green number '1' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_2">
            <summary>
            green number '2' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_3">
            <summary>
            green number '3' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_4">
            <summary>
            green number '4' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_5">
            <summary>
            green number '5' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_6">
            <summary>
            green number '6' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_7">
            <summary>
            green number '7' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_8">
            <summary>
            green number '8' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberGreen_9">
            <summary>
            green number '9' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_0">
            <summary>
            blue number '0' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_1">
            <summary>
            blue number '1' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_2">
            <summary>
            blue number '2' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_3">
            <summary>
            blue number '3' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_4">
            <summary>
            blue number '4' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_5">
            <summary>
            blue number '5' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_6">
            <summary>
            blue number '6' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_7">
            <summary>
            blue number '7' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_8">
            <summary>
            blue number '8' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NumberBlue_9">
            <summary>
            blue number '9' symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TriangleBlue">
            <summary>
            blue triangle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TriangleGreen">
            <summary>
            green triangle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TriangleRed">
            <summary>
            red triangle symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FoodAsian">
            <summary>
            asian food symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FoodDeli">
            <summary>
            deli symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FoodItalian">
            <summary>
            italian food symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FoodSeafood">
            <summary>
            seafood symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FoodSteak">
            <summary>
            steak symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Airport">
            <summary>
            airport symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Intersection">
            <summary>
            intersection symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Ndb">
            <summary>
            non-directional beacon symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Vor">
            <summary>
            VHF omni-range symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Heliport">
            <summary>
            heliport symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.PrivateField">
            <summary>
            private field symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SoftField">
            <summary>
            soft field symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TallTower">
            <summary>
            tall tower symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ShortTower">
            <summary>
            short tower symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Glider">
            <summary>
            glider symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Ultralight">
            <summary>
            ultralight symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Parachute">
            <summary>
            parachute symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.VorTac">
            <summary>
            VOR/TACAN symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.VorDme">
            <summary>
            VOR-DME symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Faf">
            <summary>
            first approach fix
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Lom">
            <summary>
            localizer outer marker
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Map">
            <summary>
            missed approach point
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Tacan">
            <summary>
            TACAN symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Seaplane">
            <summary>
            seaplane base
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Gas">
            <summary>
            gas symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Boat">
            <summary>
            boat symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Exit">
            <summary>
            exit symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.BackTrack">
            <summary>
            back track symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.CircleFilled">
            <summary>
            filled circle
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Box">
            <summary>
            box
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Rocks">
            <summary>
            rocks
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DaymarkGreen">
            <summary>
            green daymark
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DaymarkRed">
            <summary>
            red daymark
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DiverDown">
            <summary>
            diver down
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Mark">
            <summary>
            mark
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Tent">
            <summary>
            tent
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Food">
            <summary>
            food
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Tree">
            <summary>
            tree
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Buoy">
            <summary>
            buoy
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.W">
            <summary>
            w symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.L">
            <summary>
            l symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.R">
            <summary>
            r symbol
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FlagRight">
            <summary>
            flag right
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.FlagLeft">
            <summary>
            flag left
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Diamond">
            <summary>
            diamond
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Square">
            <summary>
            square
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SquareFilled">
            <summary>
            filled square
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Banner">
            <summary>
            banner
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Crosshair">
            <summary>
            crosshair
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.WineGlass">
            <summary>
            wine glass
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Mountain">
            <summary>
            mountain
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Sign">
            <summary>
            sign
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Water">
            <summary>
            water
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Airplane">
            <summary>
            airplane
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.DeersHead">
            <summary>
            deers head
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SquareCrossed">
            <summary>
            crossed square
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Aerial">
            <summary>
            aerial
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Atm">
            <summary>
            ATM
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.AutoRepair">
            <summary>
            auto repair
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Boating">
            <summary>
            boating
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Camping">
            <summary>
            camping
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.ExitRamp">
            <summary>
            exit ramp
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.NavAid">
            <summary>
            navigation aid
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Garden">
            <summary>
            garden
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Hotel">
            <summary>
            hotel
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.HuntingFishing">
            <summary>
            hunting and fishing
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Lighthouse">
            <summary>
            light house
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.MajorCity">
            <summary>
            major city
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Obstruction">
            <summary>
            obstruction
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Resort">
            <summary>
            resort
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Restaurant">
            <summary>
            restaurant
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Rock">
            <summary>
            rock
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Scuba">
            <summary>
            scuba diving
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.RvService">
            <summary>
            RV service
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Shooting">
            <summary>
            shooting
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SightSeeing">
            <summary>
            sight seeing
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Sounding">
            <summary>
            sounding
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.SportsArena">
            <summary>
            
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TouristInfo">
            <summary>
            tourist information
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.TruckService">
            <summary>
            truck service
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Winery">
            <summary>
            winery
            </summary>
        </member>
        <member name="F:Waymex.Gps.SymbolId.Unknown">
            <summary>
            unknown
            </summary>
        </member>
        <member name="T:Waymex.Gps.Almanac">
            <summary>
            This object forms part of the AlmanacCollection object which is returned by 
            the GetAlmanacs method of the Device object. One object exists for each 
            Satellite that exists in the connected GPS devices Almanac.
            </summary>
            <remarks>
            <para><b>Magellan Devices</b></para>
            <para>The following Properties are used by bthe Magellan devices.</para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>SatelliteId</term><description>Int32</description></item>
            <item><term>WeekNumber</term><description>Int32</description></item>
            <item><term>Eccentricity</term><description>Single</description></item>
            <item><term>Health</term><description>Int32</description></item>
            <item><term>ReferenceTime</term><description>Single</description></item>
            <item><term>Inclination</term><description>Single</description></item>
            <item><term>RightAscensionRate</term><description>Single</description></item>
            <item><term>SqrRootSemiMajorAxis</term><description>Single</description></item>
            <item><term>Perigee</term><description>Single</description></item>
            <item><term>MeanAnomaly</term><description>Single</description></item>
            <item><term>ClockCorrectionAF0</term><description>Single</description></item>
            <item><term>ClockCorrectionAF1</term><description>Single</description></item>
            </list>
            <br/><br/>
            <para><b>Garmin Devices</b></para>
            <para>
            In most cases not all of the Properties of the Almanac object are used. The Properties
            actually used are determined by the protocol employed by the connected GPS Device.
            Below is a list of which Properties are supported by Protocol. Please note that even though a
            Property is identified as being supported does not mean that it will actually be used/populated.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D500</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>WeekNumber</term><description>Int32</description></item>
            <item><term>ReferenceTime</term><description>Single</description></item>
            <item><term>ClockCorrectionAF0</term><description>Single</description></item>
            <item><term>ClockCorrectionAF1</term><description>Single</description></item>
            <item><term>Eccentricity</term><description>Single</description></item>
            <item><term>SqrRootSemiMajorAxis</term><description>Single</description></item>
            <item><term>MeanAnomaly</term><description>Single</description></item>
            <item><term>Perigee</term><description>Single</description></item>
            <item><term>RightAscension</term><description>Single</description></item>
            <item><term>RightAscensionRate</term><description>Single</description></item>
            <item><term>Inclination</term><description>Single</description></item>
            </list>
            <br/><br/>
            <para>
            <b>Protocol D501</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>WeekNumber</term><description>Int32</description></item>
            <item><term>ReferenceTime</term><description>Single</description></item>
            <item><term>ClockCorrectionAF0</term><description>Single</description></item>
            <item><term>ClockCorrectionAF1</term><description>Single</description></item>
            <item><term>Eccentricity</term><description>Single</description></item>
            <item><term>SqrRootSemiMajorAxis</term><description>Single</description></item>
            <item><term>MeanAnomaly</term><description>Single</description></item>
            <item><term>Perigee</term><description>Single</description></item>
            <item><term>RightAscension</term><description>Single</description></item>
            <item><term>RightAscensionRate</term><description>Single</description></item>
            <item><term>Inclination</term><description>Single</description></item>
            <item><term>Health</term><description>Int32</description></item>
            </list>
            <br/><br/>
            <para>
            <b>Protocol D550</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>WeekNumber</term><description>Int32</description></item>
            <item><term>ReferenceTime</term><description>Single</description></item>
            <item><term>ClockCorrectionAF0</term><description>Single</description></item>
            <item><term>ClockCorrectionAF1</term><description>Single</description></item>
            <item><term>Eccentricity</term><description>Single</description></item>
            <item><term>SqrRootSemiMajorAxis</term><description>Single</description></item>
            <item><term>MeanAnomaly</term><description>Single</description></item>
            <item><term>Perigee</term><description>Single</description></item>
            <item><term>RightAscension</term><description>Single</description></item>
            <item><term>RightAscensionRate</term><description>Single</description></item>
            <item><term>Inclination</term><description>Single</description></item>
            <item><term>SatelliteId</term><description>Int32</description></item>
            </list>	
            <para>
            The 'SatelliteId' Property identifies a satellite in the GPS constellation. 
            PRN-01 through PRN-32 are indicated by values of to 0 to 31 respectively 
            e.g. 0 = PRN-01, 1 = PRN-02 etc.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D551</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>WeekNumber</term><description>Int32</description></item>
            <item><term>ReferenceTime</term><description>Single</description></item>
            <item><term>ClockCorrectionAF0</term><description>Single</description></item>
            <item><term>ClockCorrectionAF1</term><description>Single</description></item>
            <item><term>Eccentricity</term><description>Single</description></item>
            <item><term>SqrRootSemiMajorAxis</term><description>Single</description></item>
            <item><term>MeanAnomaly</term><description>Single</description></item>
            <item><term>Perigee</term><description>Single</description></item>
            <item><term>RightAscension</term><description>Single</description></item>
            <item><term>RightAscensionRate</term><description>Single</description></item>
            <item><term>Inclination</term><description>Single</description></item>
            <item><term>Health</term><description>Int32</description></item>
            <item><term>SatelliteId</term><description>Int32</description></item>
            </list>	
            <para>
            The 'SatelliteId' Property identifies a satellite in the GPS constellation. 
            PRN-01 through PRN-32 are indicated by values of to 0 to 31 respectively 
            e.g. 0 = PRN-01, 1 = PRN-02 etc.
            </para>	/// </remarks>
        </member>
        <member name="P:Waymex.Gps.Almanac.WeekNumber">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.ReferenceTime">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.ClockCorrectionAF0">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.ClockCorrectionAF1">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.Eccentricity">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.SqrRootSemiMajorAxis">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.MeanAnomaly">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.Perigee">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.RightAscension">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.RightAscensionRate">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.Inclination">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.Health">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Almanac.SatelliteId">
            <summary>
            See the Waymex GPS Library Developer Notes for further details.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Almanac.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Almanac.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Almanac.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Almanac.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.AlmanacCollection">
            <summary>
            A collection of Almanac objects.
            </summary>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.Add(Waymex.Gps.Almanac)">
            <summary>
            This method adds a Almanac object to the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.AlmanacCollection.Count">
            <summary>
            Returns the number of Almanac objects in the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.AlmanacCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the collection by ordinal reference.
            This Property is the default indexer in C#.
            </summary>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.GetEnumerator">
            <summary>
            This method is the enumerator for the collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.#ctor">
            <summary>
            Constructor for the Almanacs collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.ToXml(System.String)">
            <summary>
            Returns an XML representation of the object.
            This overloaded method accepts an xslt filename which can be used to ransform the xml.
            </summary>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.ToDataSet">
             <summary>
             This method returns a System.Data.Dataset populated with the contents of the AlmanacCollection object.
             The dataset includes one table called 'Almanacs'.
            </summary>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.AlmanacCollection.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.DataObjectBase">
            <summary>
            This is the Base Class for the GPS Data Objects e.g. Waypoint, Route etc.
            </summary>
        </member>
        <member name="T:Waymex.Gps.DeviceBase">
             <summary>
             This is the Base Class that all GPS device classes derive from.
             </summary>
             <example>C#
             <code>
             private void GetWaypoints(bool garmin)
             {
                 DeviceBase gps;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Retrieve the Waypoints
                 WaypointCollection wpts = gps.GetWaypoints();
             
                 //Now we have a collection of Waypoints
                 foreach (Waypoint wpt in wpts)
                 {
                     Console.WriteLine(wpt.Latitude);
                     Console.WriteLine(wpt.Longitude);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = wpts.ToDataSet();
                 dataGridView1.DataMember = "Waypoints";
            
             }
             </code>
             </example>
        </member>
        <member name="E:Waymex.Gps.DeviceBase.Progress">
            <summary>
            The progress event fires during the data transfers to and from the GPS. 
            A long value of between 0 and 100 is passed to the event. 
            It is provided to allow a client application to display a progress 
            indicator during transfers.
            </summary>
            <example>C#
            <code><![CDATA[
            // Register the event, typically in Form_Load
            gps.Progress +=new EventHandler<ProgressEventArgs>(gps_Progress);
            
            private void gps_Progress(object sender, ProgressEventArgs e)
            {
            	// Update a progress bar. This is OK as this event
            	// is raised on the thread that created the Device object.
            	pbProgress.Value = e.Progress;
            }
            ]]></code>
            </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.#ctor">
            <summary>
            Constructor for DeviceBase.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.GetWaypoints">
             <summary>
             Returns a WaypointCollection object from the GPS device.
             </summary>
             <example>C#
             <code>
             private void GetWaypoints(bool garmin)
             {
                 DeviceBase gps;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Retrieve the Waypoints
                 WaypointCollection wpts = gps.GetWaypoints();
             
                 //Now we have a collection of Waypoints
                 foreach (Waypoint wpt in wpts)
                 {
                     Console.WriteLine(wpt.Latitude);
                     Console.WriteLine(wpt.Longitude);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = wpts.ToDataSet();
                 dataGridView1.DataMember = "Waypoints";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.GetRoutes">
             <summary>
             Returns a RouteCollection of Route objects from the GPS Device. 
             </summary>
             <example>C#
             <code>
             private void GetRoutes(bool garmin)
             {
                 DeviceBase gps;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Retrieve the Routes
                 RouteCollection rtes = gps.GetRoutes();
            
                 //Now we have a collection of Routes
                 foreach (Route rte in rtes)
                 {
                     Console.WriteLine(rte.Identifier);
                     Console.WriteLine(rte.Comment);
            
                     //Each Route has a collection of Waypoints
                     foreach (Waypoint wpt in rte.Waypoints)
                     {
                         Console.WriteLine(wpt.Latitude);
                         Console.WriteLine(wpt.Longitude);
                     }
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = rtes.ToDataSet();
                 dataGridView1.DataMember = "Routes";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.GetTracklogs">
             <summary>
             Returns a TrackLogCollection of TrackLog objects from the GPS Device.
             </summary>
             <example>C#
             <code>
             private void GetTracklogs(bool garmin)
             {
                 DeviceBase gps;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Retrieve the Tracklogs
                 TracklogCollection trks = gps.GetTracklogs();
            
                 //Now we have a collection of Tracklogs
                 foreach (Tracklog trk in trks)
                 {
                     Console.WriteLine(trk.Identifier);
            
                     //Each Tracklog has a collection of Trackpoints
                     foreach (Trackpoint tpt in trk.Trackpoints)
                     {
                         Console.WriteLine(tpt.Latitude);
                         Console.WriteLine(tpt.Longitude);
                     }
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = trks.ToDataSet();
                 dataGridView1.DataMember = "Tracks";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.GetTracklogs(System.Boolean)">
             <summary>
             The SplitTracklog parameter when set to true returns multi-segment tracks
             as separate Tracklog objects. When set to false a multi-segment track is 
             returned as a single Tracklog object.
             </summary>
             <example>C#
             <code>
             private void GetTracklogs(bool garmin)
             {
                 DeviceBase gps;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Retrieve the Tracklogs
                 TracklogCollection trks = gps.GetTracklogs();
            
                 //Now we have a collection of Tracklogs
                 foreach (Tracklog trk in trks)
                 {
                     Console.WriteLine(trk.Identifier);
            
                     //Each Tracklog has a collection of Trackpoints
                     foreach (Trackpoint tpt in trk.Trackpoints)
                     {
                         Console.WriteLine(tpt.Latitude);
                         Console.WriteLine(tpt.Longitude);
                     }
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = trks.ToDataSet();
                 dataGridView1.DataMember = "Tracks";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.GetProductInfo">
            <summary>
            This method returns a Product info object containing information about the connected device.
            </summary>
            <returns>ProductInfo object</returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.GetAlmanacs">
             <summary>
             Returns a AlmanacCollection object from the GPS Device.
             </summary>
             <example>C#
             <code>
             private void GetAlmanacs(bool garmin)
             {
                DeviceBase gps;
            
                //Create a new device object depending on the type of GPS device
                if (garmin)
                    gps = new GarminDevice();
                else
                    gps = new MagellanDevice();
            
                //Retrieve the Almanacs
                AlmanacCollection almacs = gps.GetAlmanacs();
            
                //Now we have a collection of Almanacs
                foreach (Almanac almc in almacs)
                {
                    Console.WriteLine(almc.SatelliteId);
                    Console.WriteLine(almc.Health);
                }
            
                //Alternatively display the results in a DataGridView
                dataGridView1.DataSource = almacs.ToDataSet();
                dataGridView1.DataMember = "Almanacs";
            
             }
             </code>
             </example>
        </member>
        <member name="P:Waymex.Gps.DeviceBase.CommunicationsPort">
            <summary>
            Gets/Sets the communications port to use.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.OpenPort(System.Int32)">
            <summary>
            Specifies and opens the serial communication port to use.
            </summary>
            <param name="port">The serial port to use. Values in the range 1 to 256 are accepted.</param>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.OpenPort(System.Int32,System.Int32)">
            <summary>
            Specifies and opens the serial communication port to use at the specified speed.
            </summary>
            <param name="port">Specifies the serial port to use. Values in the range 1 to 256 are accepted.</param>
            <param name="speed">Specifies the baud rate to use.</param>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.OpenPort">
            <summary>
            Opens the default port for the specific device. For example the default port for Garmin devices is the USB
            port, the default port for Magellan devices is COM 1.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ClosePort">
            <summary>
            Closes the currently open port. This can safely be called at any time.
            </summary>
        </member>
        <member name="P:Waymex.Gps.DeviceBase.BaudRate">
            <summary>
            Sets/Gets the Baud rate of the serial connection.
            Not applicable for USB connected devices.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SetWaypoint(Waymex.Gps.Waypoint)">
             <summary>
             Accepts a Waypoint object and transfers it to the connected GPS device.
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             private void SetWaypoint(bool garmin)
             {
            
                 DeviceBase gps;
                 Waypoint newWpt = null;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Create a Waypoint
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test01";
                 newWpt.Latitude = 53.9608166666667;
                 newWpt.Longitude = -2.02225;
                 newWpt.Comment = "Test 1";
            
                 //Transfer the Waypoint to the GPS device
                 gps.SetWaypoint(newWpt);
            
             }
            </code>
            </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SetWaypoints(Waymex.Gps.WaypointCollection)">
             <summary>
             Accepts a WaypointCollection object and transfers them to the connected GPS device. 
             A value of True is returned if the transfer was successful.
             </summary>
            <example>C#
             <code>
             private void SetWaypoints(bool garmin)
             {
                 DeviceBase gps;
                 WaypointCollection newWpts = new WaypointCollection();
                 Waypoint newWpt = null;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Create some Waypoints
            
                 //Waypoint 1
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test01";
                 newWpt.Latitude = 53.9608166666667;
                 newWpt.Longitude = -2.02225;
                 newWpt.Comment = "Test 1";
            
                 //Add the new waypoint to a Waypoint collection
                 newWpts.Add(newWpt);
            
                 //Waypoint 2
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test02";
                 newWpt.Latitude = 190.0;
                 newWpt.Longitude = 1180.0;
                 newWpt.Comment = "Test 2";
            
                 //Add the new Waypoint to a Waypoint collection
                 newWpts.Add(newWpt);
            
                 //Transfer the Waypoints to the GPS device
                 gps.SetWaypoints(newWpts);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SetRoute(Waymex.Gps.Route)">
             <summary>
             Accepts a Route object and transfers it to the connected GPS device.
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             private void SetRoute(bool garmin)
             {
                 DeviceBase gps;
                 Waypoint wpt;
                 Route rte;
                 WaypointCollection wpts;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Create the collection of Waypoints for the Route
                 wpts = new WaypointCollection();
            
                 //Waypoint 1
                 wpt = new Waypoint();
                 wpt.Identifier = "RT01";
                 wpt.Latitude = 1.54;
                 wpt.Longitude = 0.2;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Waypoint 2
                 wpt = new Waypoint();
                 wpt.Identifier = "RT02";
                 wpt.Latitude = 1.53;
                 wpt.Longitude = 0.22;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Create and populate the Route
                 rte = new Route();
                 rte.Number = 2;
                 rte.Comment = "Hello Route";
                 rte.Waypoints = wpts;
            
                 //Transfer the Route to the GPS device
                 gps.SetRoute(rte);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SetRoutes(Waymex.Gps.RouteCollection)">
             <summary>
             Accepts a RouteCollection object and transfers it to the connected GPS device. 
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             private void SetRoutes(bool garmin)
             {
                 DeviceBase gps;
                 Waypoint wpt;
                 Route rte;
                 RouteCollection rtes;
                 WaypointCollection wpts;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Create the collection of Waypoints for the Route
                 wpts = new WaypointCollection();
            
                 //Waypoint 1
                 wpt = new Waypoint();
                 wpt.Identifier = "RT01";
                 wpt.Latitude = 1.54;
                 wpt.Longitude = 0.2;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Waypoint 2
                 wpt = new Waypoint();
                 wpt.Identifier = "RT02";
                 wpt.Latitude = 1.53;
                 wpt.Longitude = 0.22;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Create and populate the Route
                 rte = new Route();
                 rte.Number = 2;
                 rte.Comment = "Hello Route";
                 rte.Waypoints = wpts;
            
                 //Create a routes collection 
                 //Typically a single Route would be transferred using SetRoute
                 rtes = new RouteCollection();
                 rtes.Add(rte);
            
                 //Transfer the Routes to the GPS device
                 gps.SetRoutes(rtes);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SetTrackLog(Waymex.Gps.Tracklog)">
             <summary>
             Accepts a Tracklog object and transfers it to the connected GPS device.
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             public void SetTracklog(bool garmin)
             {
                 DeviceBase gps;
                 Tracklog trk;
                 Trackpoint tpt;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Create a new Tracklog object
                 trk = new Tracklog();
                 trk.Identifier = "Upload";
            
                 //Create the first Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.42;
                 tpt.Latitude = -36.47;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create a second Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.43;
                 tpt.Latitude = -36.48;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the third Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.44;
                 tpt.Latitude = -36.49;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the fourth Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.45;
                 tpt.Latitude = -36.5;
                 trk.Trackpoints.Add(tpt);
            
                 //Send the Tracklog to the GPS device
                 gps.SetTrackLog(trk);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SetTrackLog(Waymex.Gps.Tracklog,System.Boolean)">
             <summary>
             The SplitTracklog parameter, when set to true allows a multi-segment
             Tracklog object to be transferred to the GPS as multiple tracklogs.
             A setting of false ensures a multi-segment Tracklog object is transferred
             to the GPS device as a single track.
             </summary>
             <example>C#
             <code>
             public void SetTracklog(bool garmin)
             {
                 DeviceBase gps;
                 Tracklog trk;
                 Trackpoint tpt;
            
                 //Create a new device object depending on the type of GPS device
                 if (garmin)
                     gps = new GarminDevice();
                 else
                     gps = new MagellanDevice();
            
                 //Create a new Tracklog object
                 trk = new Tracklog();
                 trk.Identifier = "Upload";
            
                 //Create the first Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.42;
                 tpt.Latitude = -36.47;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create a second Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.43;
                 tpt.Latitude = -36.48;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the third Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.44;
                 tpt.Latitude = -36.49;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the fourth Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.45;
                 tpt.Latitude = -36.5;
                 trk.Trackpoints.Add(tpt);
            
                 //Send the Tracklog to the GPS device
                 gps.SetTrackLog(trk);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToShape(Waymex.Gps.RouteCollection,System.String,System.String,Waymex.Gis.Projection)">
            <summary>
            This method is obsolete please use the following method instead: <code>public void SaveToShape(RouteCollection routes, string folder, string fileName, Waymex.Gis.Shape.Projection projection)</code>
            </summary>
            <param name="routes"></param>
            <param name="folder"></param>
            <param name="fileName"></param>
            <param name="projection"></param>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToShape(Waymex.Gps.RouteCollection,System.String,System.String,Waymex.Gis.Shape.Projection)">
            <summary>
            This method allows GPS data to be saved as an ESRI Shape
            file. The method creates the Main, Index and Attribute files
            in the specified directory.
            The directory specified will be created if it does not already exist. 
            Shape files can be saved using either Geographic coordinates, (i.e. where 
            the Latitude and Longitude are the X, Y values), or Utm coordinates.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToShape(Waymex.Gps.TracklogCollection,System.String,System.String,Waymex.Gis.Projection)">
            <summary>
            This method is obsolete please use the following method instead: <code>public void SaveToShape(TracklogCollection tracklogs, string folder, string fileName, Waymex.Gis.Shape.Projection projection)</code>
            </summary>
            <param name="tracklogs"></param>
            <param name="folder"></param>
            <param name="fileName"></param>
            <param name="projection"></param>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToShape(Waymex.Gps.TracklogCollection,System.String,System.String,Waymex.Gis.Shape.Projection)">
            <summary>
            This method allows GPS data to be saved as an ESRI Shape
            file. The method creates the Main, Index and Attribute files
            in the specified directory.
            The directory specified will be created if it does not already exist. 
            Shape files can be saved using either Geographic coordinates, (i.e. where 
            the Latitude and Longitude are the X, Y values), or Utm coordinates.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToShape(Waymex.Gps.WaypointCollection,System.String,System.String,Waymex.Gis.Projection)">
            <summary>
            This method is obsolete please use the following method instead: <code>public void SaveToShape(WaypointCollection waypoints, string folder, string fileName, Waymex.Gis.Shape.Projection projection)</code>
            </summary>
            <param name="waypoints"></param>
            <param name="folder"></param>
            <param name="fileName"></param>
            <param name="projection"></param>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToShape(Waymex.Gps.WaypointCollection,System.String,System.String,Waymex.Gis.Shape.Projection)">
            <summary>
            This method allows GPS data to be saved as an ESRI Shape
            file. The method creates the Main, Index and Attribute files
            in the specified directory.
            The directory specified will be created if it does not already exist. 
            Shape files can be saved using either Geographic coordinates, (i.e. where 
            the Latitude and Longitude are the X, Y values), or Utm coordinates.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToKml(Waymex.Gps.WaypointCollection,System.String,System.String,System.Drawing.Color)">
            <summary>
            This method allows GPS data to be saved as a Google Earth Kml
            file. The method creates the file in the specified folder.
            The folder specified will be created if it does not already exist
            and if the file already exisits it will be overwritten.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToKml(Waymex.Gps.RouteCollection,System.String,System.String,System.Drawing.Color,System.Int32)">
            <summary>
            This method allows GPS data to be saved as a Google Earth Kml
            file. The method creates the file in the specified folder.
            The folder specified will be created if it does not already exist
            and if the file already exisits it will be overwritten.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SaveToKml(Waymex.Gps.TracklogCollection,System.String,System.String,System.Drawing.Color,System.Int32)">
            <summary>
            This method allows GPS data to be saved as a Google Earth Kml
            file. The method creates the file in the specified folder.
            The folder specified will be created if it does not already exist
            and if the file already exisits it will be overwritten.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.CreateValidFilename(System.String,System.String)">
            <summary>
            Tidies up the filename and ensures that the specified 
            folder is created if it doesn't exist
            </summary>
            <param name="folder"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.RaiseToPower(System.Double,System.Double)">
            <summary>
            Raises the value specified in Value to the power specified in Power.
            </summary>
            <param name="Value"></param>
            <param name="Power"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SemicircleToDegrees(System.Int32)">
            <summary>
            Converts the often preferred semi-circular data type to degrees.
            </summary>
            <param name="Semicircle">Contains the semi-circular value used by some GPS devices.</param>
            <returns>Double containing the degrees to convert.</returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.DegreesToSemicircles(System.Double)">
            <summary>
            Converts degrees to the often preferred semi-circular data type.
            </summary>
            <param name="Degrees">Double containing the degrees to convert.</param>
            <returns>Contains the semi-circular value used by some GPS devices.</returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.DegreesToRadians(System.Double)">
            <summary>
            Converts Degrees to Radians.
            </summary>
            <param name="Degrees"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.RadiansToDegrees(System.Double)">
            <summary>
            Converts Radians to Degrees.
            </summary>
            <param name="Radians"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.Limit(System.Int32)">
            <summary>
            Limits an integer value to between 0 and 100.
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.Limit(System.Int32,System.Int32)">
            <summary>
            Limits an integer value to between the specified lower limit
            and 100.
            </summary>
            <param name="Value"></param>
            <param name="LowerLimit"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.Limit(System.Int32,System.Int32,System.Int32)">
            <summary>
            Limits an integer value to between the specified lower limit
            and the specified upper limit.
            </summary>
            <param name="Value"></param>
            <param name="LowerLimit"></param>
            <param name="UpperLimit"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.Pad(System.String,System.Int32)">
            <summary>
            Pads a string to the number of characters passed.
            </summary>
            <param name="String">The string to pad.</param>
            <param name="Chars">The number of charaters wide that the string should be padded to.
            If the string is longer than Chars then it is truncated.</param>
            <returns>String containing the padded result.</returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.PadByte(System.Byte[],System.Int32)">
            <summary>
            Pads/Limits a byte array to the number of characters passed.
            </summary>
            <param name="ByteArray">Byte Array to pad.</param>
            <param name="Bytes">
            Number of charaters wide that the array should
            be padded to. If the array is longer than Bytes then
            it is truncated.</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.PadString(System.String,System.String)">
            <summary>
            Puts a leading character on a single character string.
            </summary>
            <param name="Data"></param>
            <param name="Pad"></param>
            <returns></returns>
            <remarks>
            Typically used to put a "0" in front of a single digit e.g. "1" becomes "01".
            </remarks>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteConcat(System.Byte[],System.Byte[])">
            <summary>
            This function concatenates two byte arrays into one.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ReDimPreserve(System.Byte[],System.Int32)">
            <summary>
            Re-dimensions an array without losing its contents.
            </summary>
            <param name="Array">Array to be re-dimensioned.</param>
            <param name="NewDimension">New dimension, representing the number of elements
            e.g. a number of 4 would redimension the array to have 4 elements (0-3).</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ReDimPreserveS(System.String[],System.Int32)">
            <summary>
            Re-dimensions an array without losing its contents.
            </summary>
            <param name="Array">Array to be re-dimensioned.</param>
            <param name="NewDimension">New dimension, representing the number of elements
            e.g. a number of 4 would redimension the array to have 4 elements (0-3).</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.FeetToMeters(System.Single)">
            <summary>
            Converts Feet to Meters.
            </summary>
            <param name="Feet"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.FeetToMeters(System.Single,System.Single)">
            <summary>
            Converts Feet and Inches to Meters.
            </summary>
            <param name="Feet"></param>
            <param name="Inches"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.Timer">
            <summary>
            Emulates the Visual Basic Timer() function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToByte(System.Byte)">
            <summary>
            Converts a byte to a byte array. Not used in final release.
            </summary>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ShortToByte(System.Int16)">
            <summary>
            Converts a short to a byte array.
            </summary>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ShortToByte(System.Int16,System.Boolean)">
            <summary>
            Converts a short to a byte array.
            </summary>
            <param name="Data"></param>
            <param name="SingleByte"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.TrimNull(System.String)">
            <summary>
            This function returns a string up to the first null.
            </summary>
            <param name="String"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.IntToByte(System.Int32)">
            <summary>
            Converts and integer to a byte array containin one byte.
            </summary>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.IntToByte(System.Int32,System.Boolean)">
            <summary>
            Converts and integer to a byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte array to a string.
            </summary>
            <param name="Data"></param>
            <param name="Position"></param>
            <param name="Length"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToString(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Converts a byte array to a string.
            </summary>
            <param name="Data"></param>
            <param name="Position"></param>
            <param name="Length"></param>
            <param name="ReplaceNull"></param>
            <param name="Trim"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToString(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Converts a byte array to a string.
            </summary>
            <param name="Data">Byte array to process</param>
            <param name="Position">Position of start of string</param>
            <param name="Length">Length of string</param>
            <param name="ReplaceNull">Boolean indicating whether any nulls chr(0) are to be replaced</param>
            <param name="Trim">Boolean to indicate wether leading and trailing spaces</param>
            <param name="UniCode">Boolean to convert to unicode characters.</param>
            <remarks>
            If the bReplaceNull is false the left most part of the string to the first NULL will be returned.
            The bUnicode Flag should be set to false if the byte array is already a unicode sequence of characters
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToDouble(System.Byte[],System.Int32)">
            <summary>
            Converts a byte array to a double.
            </summary>
            <param name="Data"></param>
            <param name="Position"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToShort(System.Byte[],System.Int32)">
            <summary>
            Converts a byte to a short.
            </summary>
            <param name="Data"></param>
            <param name="Position"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToUInt(System.Byte[],System.Int32)">
            <summary>
            Converts a byte array to an integer.
            </summary>
            <param name="Data"></param>
            <param name="Position"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToInt(System.Byte[],System.Int32)">
            <summary>
            Converts a byte array to an integer.
            </summary>
            <param name="Data"></param>
            <param name="Position"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.ByteToSingle(System.Byte[],System.Int32)">
            <summary>
            Converts a byte array to a single.
            </summary>
            <param name="Data"></param>
            <param name="Position"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.StringToByte(System.String)">
            <summary>
            Converts a string to a byte array.
            </summary>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.StringToByte(System.String,System.Boolean)">
            <summary>
            Converts a string to a byte array.
            </summary>
            <param name="Data"></param>
            <param name="NullTerminate"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.SingleToByte(System.Single)">
            <summary>
            Converts a Singe to a byte array.
            </summary>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.DoubleToByte(System.Double)">
            <summary>
            Converts a double to a byte array.
            </summary>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.DeviceBase.CopyByteArray(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies a byte array from one array to another. Starting from the 
            specified position in the source array (zero based).
            </summary>
            <param name="Source"></param>
            <param name="StartPosition"></param>
            <param name="NoOfBytes"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.ExceptionBase">
            <summary>
            Base Exception Class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.ExceptionBase.#ctor(System.String,System.Exception)">
            <summary>
            Base Exception Class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.ExceptionBase.#ctor(System.String)">
            <summary>
            Base Exception Class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.ExceptionBase.AppSource">
            <summary>
            Exposed in order that derived classe can overide.
            </summary>
        </member>
        <member name="T:Waymex.Gps.InvalidDataException">
            <summary>
            DataException.
            </summary>
        </member>
        <member name="M:Waymex.Gps.InvalidDataException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.InvalidDataException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.HttpTransferException">
            <summary>
            HttpTransferException.
            </summary>
        </member>
        <member name="M:Waymex.Gps.HttpTransferException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.HttpTransferException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.DataTransferException">
            <summary>
            GPS Waypoint Transfer Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DataTransferException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DataTransferException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.DleException">
            <summary>
            GPS DLE Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DleException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.DleException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.ChecksumException">
            <summary>
            GPS Checksum Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.ChecksumException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.ChecksumException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.PacketSizeException">
            <summary>
            GPS Packet Size Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.PacketSizeException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.PacketSizeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.PortException">
            <summary>
            GPS Port Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.PortException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.PortException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.LinkTimeOutException">
            <summary>
            GPS Link Time Out Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LinkTimeOutException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LinkTimeOutException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.USBTransportException">
            <summary>
            GPS USB Transport Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.USBTransportException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Waymex.Gps.USBTransportException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Waymex.Gps.USBTransportException.#ctor(System.Exception)">
            <summary>
            Constructor for re-raising exceptions from receive thread
            </summary>
            <param name="e">Inner exception raised on receive thread</param>
        </member>
        <member name="T:Waymex.Gps.InvalidSentence">
            <summary>
            NMEA Invalid Sentence Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.InvalidSentence.#ctor(System.String)">
            <summary>
            NMEA Invalid Sentence Exception contructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.InvalidSentence.#ctor(System.String,System.Exception)">
            <summary>
            NMEA Invalid Sentence Exception contructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.CreateWaypointException">
            <summary>
            CreateWaypointException Class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.CreateWaypointException.#ctor(System.String)">
            <summary>
            CreateWaypointException Class Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.CreateWaypointException.#ctor(System.String,System.Exception)">
            <summary>
            CreateWaypointException Class Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.InvalidFileName">
            <summary>
            InvalidFileName Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.InvalidFileName.#ctor(System.String)">
            <summary>
            InvalidFileName Exception Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.InvalidFileName.#ctor(System.String,System.Exception)">
            <summary>
            InvalidFileName Exception Constructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.CreateSentenceException">
            <summary>
            CreateSentenceException Conversion Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.CreateSentenceException.#ctor(System.String)">
            <summary>
            CreateSentenceException Exception contructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.CreateSentenceException.#ctor(System.String,System.Exception)">
            <summary>
            CreateSentenceException Exception contructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.CaptureFileException">
            <summary>
            CaptureFileException Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.CaptureFileException.#ctor(System.String)">
            <summary>
            CaptureFileException Exception contructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.CaptureFileException.#ctor(System.String,System.Exception)">
            <summary>
            CaptureFileException Exception contructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.UsbLinkException">
            <summary>
            UsbLinkException Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.UsbLinkException.#ctor(System.String)">
            <summary>
            UsbLinkException Exception contructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.UsbLinkException.#ctor(System.String,System.Exception)">
            <summary>
            UsbLinkException Exception contructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.UsbLinkTimeoutException">
            <summary>
            UsbLinkTimeoutException Exception.
            </summary>
        </member>
        <member name="M:Waymex.Gps.UsbLinkTimeoutException.#ctor(System.String)">
            <summary>
            UsbLinkTimeoutException Exception contructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.UsbLinkTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            UsbLinkTimeoutException Exception contructor.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Exceptions.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.AccessToSerialPortDenied">
            <summary>
              Looks up a localized string similar to Access to serial port denied..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.ArgumentLengthNotGreaterThanZero">
            <summary>
              Looks up a localized string similar to The argument length must be greater than zero..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.ArgumentNotGreaterThanZero">
            <summary>
              Looks up a localized string similar to The argument must be greater than zero..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.ArrayCreationError">
            <summary>
              Looks up a localized string similar to Error occurred during array creation..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.BadByteSize">
            <summary>
              Looks up a localized string similar to Bad Size byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.BadCheckSum">
            <summary>
              Looks up a localized string similar to Bad Checksum byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.BadDle">
            <summary>
              Looks up a localized string similar to Bad DLE byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.FailedToOpenSerialPort">
            <summary>
              Looks up a localized string similar to Failed to open serial port..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.GpsNotDetectedOnUsb">
            <summary>
              Looks up a localized string similar to GPS Device not detected on Universal Serial Bus..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.InterruptInReadError">
            <summary>
              Looks up a localized string similar to Unable to read USB Interrupt In..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.Invalid8CharacterFilename">
            <summary>
              Looks up a localized string similar to Invalid Filename. Filenames must consist of 8 characters or less, and file extensions should not be specified..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.InvalidAttributeCollection">
            <summary>
              Looks up a localized string similar to Invalid Attribute Collection. Attribute collections added to a ShapeFile object must contain the same list of attribute names and data types..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.InvalidQueueSettings">
            <summary>
              Looks up a localized string similar to Invalid queue settings..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.InvalidReadDataDeviceID">
            <summary>
              Looks up a localized string similar to Invalid Device ID used to Read Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.InvalidSerialPortSettings">
            <summary>
              Looks up a localized string similar to Invalid serial port settings..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.InvalidShapeType">
            <summary>
              Looks up a localized string similar to Invalid Shape Type..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.InvalidTimeOutSettings">
            <summary>
              Looks up a localized string similar to Invalid timeout settings..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.IoErrorUnexpected">
            <summary>
              Looks up a localized string similar to An unexpected IO Error has occurred..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.MethodUnavailable">
            <summary>
              Looks up a localized string similar to This method is not available in this version of the GPS Library..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.NoDeviceName">
            <summary>
              Looks up a localized string similar to Unable to get the name of the Device..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.NoFolderName">
            <summary>
              Looks up a localized string similar to The folder name must be specified..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.NoGpsAcknowledgement">
            <summary>
              Looks up a localized string similar to No Acknowledgement received from the GPS device..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.NoPacketStart">
            <summary>
              Looks up a localized string similar to Packet Start not found in buffer..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.NoUsbDeviceDriver">
            <summary>
              Looks up a localized string similar to Unable to find USB Device Driver..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.NoUsbDeviceHandle">
            <summary>
              Looks up a localized string similar to Unable to obtain handle to USB Device..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.NoUsbSessionStart">
            <summary>
              Looks up a localized string similar to Unable to start a session with the USB Device..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.PacketLength">
            <summary>
              Looks up a localized string similar to Packet length received exceeds maximum length permissible..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.ProtocolNotSupported">
            <summary>
              Looks up a localized string similar to Protocol Not Supported..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.ReadOperationTimeOut">
            <summary>
              Looks up a localized string similar to Timed out during a Read Operation..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.ReceiveThreadException">
            <summary>
              Looks up a localized string similar to An exception has occurred on the receive thread..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.ReceiveTimeout">
            <summary>
              Looks up a localized string similar to Receive Timeout..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.SendTimeout">
            <summary>
              Looks up a localized string similar to Send Timeout..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.SerialPortNotOpen">
            <summary>
              Looks up a localized string similar to The serial port is not open..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorAlmanac">
            <summary>
              Looks up a localized string similar to Error Transferring Almanac Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorDateTime">
            <summary>
              Looks up a localized string similar to Error Transferring Date and Time Information..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorFlightBook">
            <summary>
              Looks up a localized string similar to Error Transferring Flight Book Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorGpsData">
            <summary>
              Looks up a localized string similar to Error Transferring GPS Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorPosition">
            <summary>
              Looks up a localized string similar to Error Transferring Position Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorProductData">
            <summary>
              Looks up a localized string similar to Error Transferring Product Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorProtocol">
            <summary>
              Looks up a localized string similar to Error Transferring Protocol Table..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorProximity">
            <summary>
              Looks up a localized string similar to Error Transferring Proximity Waypoint Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorRoute">
            <summary>
              Looks up a localized string similar to Error Transferring Routes..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorTracklog">
            <summary>
              Looks up a localized string similar to Error Transferring Tracklog Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransferErrorWaypoint">
            <summary>
              Looks up a localized string similar to Error Transferring Waypoint Data..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.TransmissionFailure">
            <summary>
              Looks up a localized string similar to Transmission Failure..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.UnexpectedFailure">
            <summary>
              Looks up a localized string similar to Unexpected Failure..
            </summary>
        </member>
        <member name="P:Waymex.Gps.Exceptions.Strings.WriteOperationTimeOut">
            <summary>
              Looks up a localized string similar to Timed out during a Write Operation..
            </summary>
        </member>
        <member name="T:Waymex.Gps.FlightBook">
            <summary>
            This object forms part of the FlightBookCollection which is returned by 
            the GetFlightBooks method of the GarminDevice object.
            </summary>
            <remarks>
            <para>Garmin Devices Only.</para>
            <para>
            In some cases not all of the Properties of the FlightBook object are used. The Properties
            actually used are determined by the protocol employed by the connected GPS Device.
            Below is a list of which Properties are supported by Protocol. Please note that even though a
            Property is identified as being supported does not mean that it will actually be used/populated.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D500</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>WeekNumber</term><description>Int32</description></item>
            <item><term>ReferenceTime</term><description>Single</description></item>
            <item><term>ClockCorrectionAF0</term><description>Single</description></item>
            <item><term>ClockCorrectionAF1</term><description>Single</description></item>
            <item><term>Eccentricity</term><description>Single</description></item>
            <item><term>SqrRootSemiMajorAxis</term><description>Single</description></item>
            <item><term>MeanAnomaly</term><description>Single</description></item>
            <item><term>Perigee</term><description>Single</description></item>
            <item><term>RightAscension</term><description>Single</description></item>
            <item><term>RightAscensionRate</term><description>Single</description></item>
            <item><term>Inclination</term><description>Single</description></item>
            </list>
            <para>
            The TakeoffTime and LandingTime properties are expressed as the
            number of seconds elapsed since UTC 24:00 December 31, 1989.
            </para>
            </remarks>
        </member>
        <member name="P:Waymex.Gps.FlightBook.TakeoffTime">
            <summary>
            Returns/Sets the TakeoffTime property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.LandingTime">
            <summary>
            Returns/Sets the LandingTime property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.TakeoffLatitude">
            <summary>
            Returns/Sets the TakeoffLatitude property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.TakeoffLongitude">
            <summary>
            Returns/Sets the TakeoffLongitude property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.LandingLatitude">
            <summary>
            Returns/Sets the LandingLatitude property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.LandingLongitude">
            <summary>
            Returns/Sets the LandingLongitude property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.NightTime">
            <summary>
            Returns/Sets the NightTime property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.NumberOfLandings">
            <summary>
            Returns/Sets the NumberOfLandings property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.MaximumSpeed">
            <summary>
            Returns/Sets the MaximumSpeed property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.MaximumAltitude">
            <summary>
            Returns/Sets the MaximumAltitude property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.Distance">
            <summary>
            Returns/Sets the Distance property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.CrossCountry">
            <summary>
            Returns/Sets the CrossCountry property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.DepartureName">
            <summary>
            Returns/Sets the DepartureName property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.DepartureIdentity">
            <summary>
            Returns/Sets the DepartureIdentity property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.ArrivalName">
            <summary>
            Returns/Sets the ArrivalName property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.ArrivalIdentity">
            <summary>
            Returns/Sets the ArrivalIdentity property of the Flight Book.
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBook.AircraftId">
            <summary>
            Returns/Sets the AircraftId property of the Flight Book.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBook.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBook.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBook.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.FlightBook.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.FlightBookCollection">
            <summary>
            A collection of FlightBook objects.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.Add(Waymex.Gps.FlightBook)">
            <summary>
            This method adds a FlightBook object to the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBookCollection.Count">
            <summary>
            Returns the number of FlightBook objects in the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.FlightBookCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the collection by ordinal reference.
            This Property is the default indexer in C#.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.GetEnumerator">
            <summary>
            This method is the enumerator for the collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.#ctor">
            <summary>
            Constructor for the FlightBookCollection object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.ToXml(System.String)">
            <summary>
            Returns an XML representation of the object.
            This overloaded method accepts an xslt filename which can be used to ransform the xml.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.ToDataSet">
             <summary>
             This method returns a System.Data.Dataset populated with the contents of the FlightBookCollection object.
             The dataset includes one table called 'Flight Books'.
            </summary>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.FlightBookCollection.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.GarminDevice">
             <summary>
             This object is the Garmin device object though which all data objects and collections 
             are accessd.
             </summary>
             <example>C#
             <code>
             private void GetWaypoints()
             {
                 GarminDevice gps = new GarminDevice();
            
                 //Retrieve the Waypoints
                 WaypointCollection wpts = gps.GetWaypoints();
             
                 //Now we have a collection of Waypoints
                 foreach (Waypoint wpt in wpts)
                 {
                     Console.WriteLine(wpt.Latitude);
                     Console.WriteLine(wpt.Longitude);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = wpts.ToDataSet();
                 dataGridView1.DataMember = "Waypoints";
            
             }
             </code>
             </example>
             <remarks>
             <para>Example code for individual methods is shown with the help for that method.</para>
             <br/><br/>
             <para><b>Overwriting of Identically-named Data</b></para>
             <para><b>Waypoints</b></para>
             <para>
             When receiving data from the Host, most GPS devices will overwrite any existing 
             waypoints with the same name stored in the GPS device. For example, if the Host 
             sends a waypoint named CBELLS, most GPS devices will overwrite a waypoint named
             CBELLS that may be stored in GPS memory.
             </para>
             <para>
             However some GPS devices compare the position of the new waypoint with the position
             of the stored waypoint (altitude is ignored). If the positions match, the GPS
             will erase the identically named waypoint and replace it with the new one.
             If the positions differ, the unit will create a new, unique name for the
             incoming waypoint and preserve the existing waypoint under its original name.
             </para>
             <para>
             When the Host requests the GPS to send waypoints, the GPS will send every
             waypoint stored in its database. When the Host sends waypoints to the GPS,
             the Host may selectively transfer any number of waypoints.
             </para>
             <para><b>RouteCollection</b></para>
             <para>
             When the Host requests the GPS to send routes, the GPS will send every route stored in its
             database. When the Host sends routes to the GPS, the Host may selectively transfer any
             number of routes.
             </para>
             <para>
             Some GPS devices contain an internal database of waypoint information; for example, most
             aviation products have an internal database of aviation waypoints, and others may have an
             internal database of land waypoints. When routes are being transferred from the Host to one
             of these units, the GPS will attempt to match the incoming route waypoints with waypoints in
             its internal database. The GPS inspects the 'Class' member of the incoming route waypoint
             and if it indicates a non-user waypoint, the GPS searches its internal database using either
             the 'Identifier' and 'Country' members or the 'Sub Class' member. If a match is found, the
             waypoint from the internal database is used for the route; otherwise, a new user waypoint is
             created and used.
             </para>
             <para><b>Tracklogs</b></para>
             <para>
             Most GPS products store only one track log (called the 'active' track log), however, some
             newer GPS products can store multiple track logs (in addition to the active track log). When
             the Host requests the GPS to send track logs, the GPS will send every Tracklog stored in its
             database. However only the Active Tracklog will contain Date/Time data.	
             </para>
             <para><b>Proximity Waypoints</b></para>
             <para>
             When the Host requests the GPS to send proximity waypoints, the GPS will send all proximity
             waypoints stored in its database.
             </para>
             <br/><br/>
             <para><b>Character Sets</b></para>
             <para>
             The following table shows the supported character sets;
             </para>
             <list type="table">
             <item><term>User Waypoint Identifier</term><description>upper-case letters, numbers</description></item>
             <item><term>Waypoint Comment</term><description>upper-case letters, numbers, space, hyphen</description></item>
             <item><term>Route Comment</term><description>upper-case letters, numbers, space, hyphen</description></item>
             <item><term>City</term><description>ignored by GPS</description></item>
             <item><term>State</term><description>ignored by GPS</description></item>
             <item><term>Facility Name</term><description>ignored by GPS</description></item>
             <item><term>Country Code</term><description>upper-case letters, numbers, space</description></item>
             <item><term>Route Identifier</term><description>upper-case letters, numbers, space, hyphen</description></item>
             <item><term>Route Waypoint Identifier</term><description>any ASCII character</description></item>
             <item><term>Link Identifier</term><description>any ASCII character</description></item>
             <item><term>Track Identifier</term><description>upper-case letters, numbers, space, hyphen</description></item>
             </list>
             <para>
             Some products may allow additional characters to be used. 
             The Host should be prepared to receive any ASCII character from the GPS, 
             but only transmit the characters shown above, back to the GPS.
             </para>
             <br/><br/>
             </remarks>
        </member>
        <member name="T:Waymex.Gps.GarminDevice.StatusFlags">
            <summary>
            This private class is used as a thread safe class to hold status flags. 
            </summary>
        </member>
        <member name="E:Waymex.Gps.GarminDevice.PvtData">
             <summary>
             The PVTData event fires when PVT data is present. 
             The data is passed to the event as a semi-colon delimited string in 
             the following format;
             Altitude=141.2004;EPE=36.83858;EPH=22.13921;EPV=31.80552;Fix=3;TOW=139789.999959085;Latitude=52.4758133440362;Longitude=-1.43118810277763;East=-4.838048E-03;North=-1.488053E-02;Up=2.100724E-02;MSLHeight=-48.64653;LeapSeconds=13;WNDays=4914 
             </summary>
             <remarks>
             <para>
             The event will not fire unless the PVTStart method has been invoked. 
             Many GPS devices will cancel PVT data when other functions are used in 
             this case the event will not fire however the library will continue 
             to monitor the GPS device for PVTData until an explicit call to the 
             CancelTransfer method is made.
             </para>
             <para>
             The parameters of the PVT Data are as follows:
             </para>
             <list type="bullet">
             <item><description>Altitude</description></item>
             <item><description>EPE</description></item>
             <item><description>EPH</description></item>
             <item><description>EPV</description></item>
             <item><description>Fix</description></item>
             <item><description>TOW</description></item>
             <item><description>Latitude</description></item>
             <item><description>Longtitude</description></item>
             <item><description>East</description></item>
             <item><description>North</description></item>
             <item><description>Up</description></item>
             <item><description>MSLHeight</description></item>
             <item><description>LeapSeconds</description></item>
             <item><description>WNDays</description></item>
             </list>
             <para>
             The 'MSLHeight' parameter gives the height of the WGS 84 ellipsoid 
             above mean sea level at the current position.
             </para>
             <para>
             The 'Altitude' parameter provides the altitude above the WGS 84 ellipsoid. 
             To find the altitude above mean sea level, add 'MSLHeight' to 'Altitude'.
             </para>
             <para>
             The 'TOW' parameter provides the number of seconds (excluding leap seconds) 
             since the beginning of the current week, which begins on 
             Sunday at 24:00 (i.e., midnight Saturday night-Sunday morning). 
             The parameter is based on Universal Coordinated Time (UTC), except 
             UTC is periodically corrected for leap seconds while 'TOW' is not corrected 
             for leap seconds. To find UTC, subtract the value of the 'Leap Seconds' 
             parameter from 'TOW'. Since this may cause a negative result for the first 
             few seconds of the week (i.e., when 'TOW' is less than 'Leap Seconds'), care 
             must be taken to properly translate this negative result to a positive time 
             value in the previous day. Also, since 'TOW' is a floating point number and may 
             contain fractional seconds, care must be taken to properly round off when using 'TOW' 
             in integer conversions and calculations. The 'WNDays' parameter provides the 
             number of days that have occurred from UTC December 31st, 1989 to the beginning 
             of the current week (thus, 'WNDays' always represents a Sunday). To find the 
             total number of days that have occurred from UTC December 31st, 1989 to the 
             current day, add 'WNDays' to the number of days that have occurred in the 
             current week (as calculated from the 'TOW' parameter).
             </para>
             <para>
             The values for the 'Fix' parameter are shown below. It is important for 
             the Host to inspect this value to ensure that other parameters are valid. 
             No indication is given as to whether the GPS is in simulator mode versus 
             having an actual position fix.
             </para>
             <list type="table">
             <listheader><term>Value</term><description>Description</description></listheader>
             <item><term>0</term><description>Failed Integrity Check</description></item>
             <item><term>1</term><description>Invalid or Unavailable</description></item>
             <item><term>2</term><description>Two Dimensional</description></item>
             <item><term>3</term><description>Three Dimensional</description></item>
             <item><term>4</term><description>Two Dimensional Differential</description></item>
             <item><term>5</term><description>Three Dimensional Differential</description></item>
             </list>
             <para>
             Some GPS Devices using eary internal software versions use different values for Fix.
             The list of devices and software versions are as follows;
             </para>
             <list type="table">
             <listheader><term>GPS Device</term><description>Software Versions</description></listheader>
             <item><term>eMap</term><description>2.64</description></item>
             <item><term>GPSMap 162</term><description>2.62</description></item>
             <item><term>GPSMap 295</term><description>2.19</description></item>
             <item><term>eTrex</term><description>2.10</description></item>
             <item><term>eTrex Summit</term><description>2.07</description></item>
             <item><term>StreetPilot III</term><description>2.10</description></item>
             <item><term>eTrex Japanese</term><description>2.10</description></item>
             <item><term>eTrex Venture/Mariner</term><description>2.20</description></item>
             <item><term>eTrex Europe</term><description>2.03</description></item>
             <item><term>GPS 152</term><description>2.01</description></item>
             <item><term>eTrex Chinese</term><description>2.01</description></item>
             <item><term>eTrex Vista</term><description>2.12</description></item>
             <item><term>eTrex Summit Japanese</term><description>2.01</description></item>
             <item><term>eTrex Summit</term><description>2.24</description></item>
             <item><term>eTrex GolfLogix</term><description>2.49</description></item>
             </list>
             <list type="table">
             <listheader><term>Value</term><description>Description</description></listheader>
             <item><term>1</term><description>Failed Integrity Check</description></item>
             <item><term>2</term><description>Invalid or Unavailable</description></item>
             <item><term>3</term><description>Two Dimensional</description></item>
             <item><term>4</term><description>Three Dimensional</description></item>
             <item><term>5</term><description>Two Dimensional Differential</description></item>
             <item><term>6</term><description>Three Dimensional Differential</description></item>
             </list>
             </remarks>
             <example>C#
             <code><![CDATA[
             
             // Register the event, typically in Form_Load
             
             gps.PvtData += new EventHandler<PvtDataEventArgs>(gps_PVTData);
             // If neccessary cast the gps object as follows
             //((GarminDevice)gps).PvtData += new EventHandler<PvtDataEventArgs>(gps_PVTData);
             
             // Use a delegate as Windows Forms Controls are not thread safe
             private delegate void DisplayPvtDataDelegate(string pvtData);
            
             // The Event is then raised by the assembly when data is received from the NMEA device.
             private void gps_PVTData(object sender, Waymex.Gps.Garmin.PvtDataEventArgs e)
             {
            	// Call the Display function
            	DisplayPvtData(e.PvtData);
             }
             
             private void DisplayPvtData(string pvtData)
             {
            
                // Populate a label called lblSentence
            
                // Do NOT do this, as we may not be on the UI thread.
                // lblPVTDateTime.Text = DateTime.Now.ToString();
            
                // Check if we need to call Invoke.
                if (this.InvokeRequired)
                {
            		// Pass the this function to Invoke,
            		// then the call will come in on the correct
            		// thread and InvokeRequired will be false.
            		this.BeginInvoke(new DisplayPvtDataDelegate(DisplayPvtData), new object[] { pvtData });
             		return;
            	}
            
            	// now we are on the UI thread so we can populate the labels etc
            	lblPVTDateTime.Text = DateTime.Now.ToString("dd-mmm-yyyy hh:mm");
            
            	if (pvtData.StartsWith("Type=Satellite"))
            		lblSatellite.Text = pvtData;
            
            	if (pvtData.StartsWith("Type=PVTData"))
            		lblPVTData.Text = pvtData;
            
            	if (pvtData.StartsWith("Type=ReceiverMeasurement"))
            		lblRecMeas.Text = pvtData;
            	}
             ]]></code>
             </example>
        </member>
        <member name="E:Waymex.Gps.GarminDevice.Progress">
             <summary>
             The progress event fires during the data transfers to and from the GPS. 
             A long value of between 0 and 100 is passed to the event. 
             It is provided to allow a client application to display a progress 
             indicator during transfers.
             </summary>
             <example>C#
             <code><![CDATA[
            	// Register the event, typically in Form_Load
            	gps.Progress +=new EventHandler<ProgressEventArgs>(gps_Progress);
            
            	private void gps_Progress(object sender, ProgressEventArgs e)
            	{
            		// Update a progress bar. This is OK as this event
            		// is raised on the thread that created the Device object.
            		pbProgress.Value = e.Progress;
            	}
             ]]></code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.#ctor">
            <summary>
            Device Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.Dispose">
            <summary>
            Closes all resources and disposes of the object. 
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.Dispose(System.Boolean)">
            <summary>
            Closes all resources and disposes of the object. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.GarminDevice.CharacterSetRules">
            <summary>
            This property determines whether the Garmin character set rules are imposed.
            The property is set to true by default which prevents spaces and other characters
            being used in Identifiers. Care should be taken, when setting this property
            to false, to ensure only valid characters are sent to the GPS device.
            </summary>
            <remarks>
            <para><b>Character Sets</b></para>
            <para>
            The following table shows the supported character sets;
            </para>
            <list type="table">
            <item><term>User Waypoint Identifier</term><description>upper-case letters, numbers</description></item>
            <item><term>Waypoint Comment</term><description>upper-case letters, numbers, space, hyphen</description></item>
            <item><term>Route Comment</term><description>upper-case letters, numbers, space, hyphen</description></item>
            <item><term>City</term><description>ignored by GPS</description></item>
            <item><term>State</term><description>ignored by GPS</description></item>
            <item><term>Facility Name</term><description>ignored by GPS</description></item>
            <item><term>Country Code</term><description>upper-case letters, numbers, space</description></item>
            <item><term>Route Identifier</term><description>upper-case letters, numbers, space, hyphen</description></item>
            <item><term>Route Waypoint Identifier</term><description>any ASCII character</description></item>
            <item><term>Link Identifier</term><description>any ASCII character</description></item>
            <item><term>Track Identifier</term><description>upper-case letters, numbers, space, hyphen</description></item>
            </list>
            <para>
            Some products may allow additional characters to be used. 
            </para>
            <br/><br/>
            </remarks>
        </member>
        <member name="P:Waymex.Gps.GarminDevice.CommunicationsPort">
            <summary>
            Gets/Sets the communications port to use.
            </summary>
        </member>
        <member name="P:Waymex.Gps.GarminDevice.BaudRate">
            <summary>
            Sets/Gets the Baud rate of the serial connection.
            Not applicable for USB connected devices.
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetConnectedDeviceNames">
            <summary>
            This method returns an array of USB port names for any connected USB GPS devices. The OpenPort() method
            can accept a USB port name as a parameter in order to specifiy a particular USB GPS device to open.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.OpenPort(System.Int32)">
            <summary>
            Specifies and opens the serial communication port to use.
            </summary>
            <param name="port">The serial port to use. Values in the range 1 to 256 are accepted.</param>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.OpenPort(System.Int32,System.Int32)">
            <summary>
            Specifies and opens the serial communication port to use at the specified speed.
            </summary>
            <param name="port">Specifies the serial port to use. Values in the range 1 to 256 are accepted.</param>
            <param name="speed">Specifies the baud rate to use.</param>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.OpenPort">
            <summary>
            Opens the USB port (where supported). The first detected USB GPS device will be used.
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.OpenPort(System.String)">
            <summary>
            Opens the USB port (where supported). A USB port name as returned by <see cref="M:Waymex.Gps.GarminDevice.GetConnectedDeviceNames"/> should be specified.
            </summary>
            <param name="port">Typically a USB port name as returned by <see cref="M:Waymex.Gps.GarminDevice.GetConnectedDeviceNames"/>.</param>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.ClosePort">
            <summary>
            Closes the currently open port. This can safely be called at any time.
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.CancelTransfer">
            <summary> 
            This method cancels any transfers either to or from the connected GPS device. PVT Data transfers are also cancelled.      
            </summary>      
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetDateTime">
            <summary>
            This method returns the current Data and Time as reported by the GPS device.
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetRoutes">
             <summary>
             Returns a RouteCollection object from the GPS Device. 
             </summary>
             <example>C#
             <code>
             private void GetRoutes()
             {
                 GarminDevice gps = new GarminDevice();
            
                 //Retrieve the Routes
                 RouteCollection rtes = gps.GetRoutes();
            
                 //Now we have a collection of Routes
                 foreach (Route rte in rtes)
                 {
                     Console.WriteLine(rte.Identifier);
                     Console.WriteLine(rte.Comment);
            
                     //Each Route has a collection of Waypoints
                     foreach (Waypoint wpt in rte.Waypoints)
                     {
                         Console.WriteLine(wpt.Latitude);
                         Console.WriteLine(wpt.Longitude);
                     }
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = rtes.ToDataSet();
                 dataGridView1.DataMember = "Routes";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetTracklogs">
             <summary>
             Returns a TrackLogCollection of TrackLog objects from the GPS Device.
             The SplitTracklog parameter when set to true returns multi-segment tracks
             as separate Tracklog objects. When set to false a multi-segment track is 
             returned as a single Tracklog object.
             </summary>
             <example>C#
             <code>
             private void GetTracklogs()
             {
                 GarminDevice gps = new GarminDevice();
            
                 //Retrieve the Tracklogs
                 TracklogCollection trks = gps.GetTracklogs();
            
                 //Now we have a collection of Tracklogs
                 foreach (Tracklog trk in trks)
                 {
                     Console.WriteLine(trk.Identifier);
            
                     //Each Tracklog has a collection of Trackpoints
                     foreach (Trackpoint tpt in trk.Trackpoints)
                     {
                         Console.WriteLine(tpt.Latitude);
                         Console.WriteLine(tpt.Longitude);
                     }
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = trks.ToDataSet();
                 dataGridView1.DataMember = "Tracks";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetTracklogs(System.Boolean)">
             <summary>
             Returns a TrackLogCollection of TrackLog objects from the GPS Device.
             The SplitTracklog parameter when set to true returns multi-segment tracks
             as separate Tracklog objects. When set to false a multi-segment track is 
             returned as a single Tracklog object.
             </summary>
             <example>C#
             <code>
             private void GetTracklogs()
             {
                 GarminDevice gps = new GarminDevice();
            
                 //Retrieve the Tracklogs
                 TracklogCollection trks = gps.GetTracklogs();
            
                 //Now we have a collection of Tracklogs
                 foreach (Tracklog trk in trks)
                 {
                     Console.WriteLine(trk.Identifier);
            
                     //Each Tracklog has a collection of Trackpoints
                     foreach (Trackpoint tpt in trk.Trackpoints)
                     {
                         Console.WriteLine(tpt.Latitude);
                         Console.WriteLine(tpt.Longitude);
                     }
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = trks.ToDataSet();
                 dataGridView1.DataMember = "Tracks";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetPosition">
            <summary>
            This method returns a Position object in containing the current Latitude and Longtidue in degrees as reported by the GPS device.
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetWaypoints">
             <summary>
             Returns a WaypointCollection object from the GPS device.
             </summary>
             <example>C#
             <code>
             private void GetWaypoints()
             {
                 GarminDevice gps = new GarminDevice();
            
                 //Retrieve the Waypoints
                 WaypointCollection wpts = gps.GetWaypoints();
             
                 //Now we have a collection of Waypoints
                 foreach (Waypoint wpt in wpts)
                 {
                     Console.WriteLine(wpt.Latitude);
                     Console.WriteLine(wpt.Longitude);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = wpts.ToDataSet();
                 dataGridView1.DataMember = "Waypoints";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.SetWaypoint(Waymex.Gps.Waypoint)">
             <summary>
             Accepts a Waypoint object and transfers it to the connected GPS device.
             </summary>
             <example>C#
             <code>
             private void SetWaypoint()
             {
            
                 GarminDevice gps = new GarminDevice();
             
                 Waypoint newWpt = null;
            
                 //Create a Waypoint
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test01";
                 newWpt.Latitude = 53.9608166666667;
                 newWpt.Longitude = -2.02225;
                 newWpt.Comment = "Test 1";
            
                 //Transfer the Waypoint to the GPS device
                 gps.SetWaypoint(newWpt);
            
             }
            </code>
            </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.SetWaypoints(Waymex.Gps.WaypointCollection)">
             <summary>
             Accepts a WaypointCollection object and transfers it to the connected GPS device. 
             </summary>
            <example>C#
             <code>
             private void SetWaypoints()
             {
                 GarminDevice gps = new GarminDevice();
             
                 WaypointCollection newWpts = new WaypointCollection();
                 Waypoint newWpt = null;
            
                 //Create some Waypoints
            
                 //Waypoint 1
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test01";
                 newWpt.Latitude = 53.9608166666667;
                 newWpt.Longitude = -2.02225;
                 newWpt.Comment = "Test 1";
            
                 //Add the new waypoint to a Waypoint collection
                 newWpts.Add(newWpt);
            
                 //Waypoint 2
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test02";
                 newWpt.Latitude = 190.0;
                 newWpt.Longitude = 1180.0;
                 newWpt.Comment = "Test 2";
            
                 //Add the new Waypoint to a Waypoint collection
                 newWpts.Add(newWpt);
            
                 //Transfer the Waypoints to the GPS device
                 gps.SetWaypoints(newWpts);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.SetRoute(Waymex.Gps.Route)">
             <summary>
             Accepts a Route object and transfers it to the connected GPS device.
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             private void SetRoute()
             {
                 GarminDevice gps = new GarminDevice();
             
                 Waypoint wpt;
                 Route rte;
                 WaypointCollection wpts;
            
                 //Create the collection of Waypoints for the Route
                 wpts = new WaypointCollection();
            
                 //Waypoint 1
                 wpt = new Waypoint();
                 wpt.Identifier = "RT01";
                 wpt.Latitude = 1.54;
                 wpt.Longitude = 0.2;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Waypoint 2
                 wpt = new Waypoint();
                 wpt.Identifier = "RT02";
                 wpt.Latitude = 1.53;
                 wpt.Longitude = 0.22;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Create and populate the Route
                 rte = new Route();
                 rte.Number = 2;
                 rte.Comment = "Hello Route";
                 rte.Waypoints = wpts;
            
                 //Transfer the Route to the GPS device
                 gps.SetRoute(rte);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.SetRoutes(Waymex.Gps.RouteCollection)">
             <summary>
             Accepts a RouteCollection object and transfers it to the connected GPS device. 
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             private void SetRoutes()
             {
                 GarminDevice gps = new GarminDevice();
             
                 Waypoint wpt;
                 Route rte;
                 RouteCollection rtes;
                 WaypointCollection wpts;
            
                 //Create the collection of Waypoints for the Route
                 wpts = new WaypointCollection();
            
                 //Waypoint 1
                 wpt = new Waypoint();
                 wpt.Identifier = "RT01";
                 wpt.Latitude = 1.54;
                 wpt.Longitude = 0.2;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Waypoint 2
                 wpt = new Waypoint();
                 wpt.Identifier = "RT02";
                 wpt.Latitude = 1.53;
                 wpt.Longitude = 0.22;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Create and populate the Route
                 rte = new Route();
                 rte.Number = 2;
                 rte.Comment = "Hello Route";
                 rte.Waypoints = wpts;
            
                 //Create a routes collection 
                 //Typically a single Route would be transferred using SetRoute
                 rtes = new RouteCollection();
                 rtes.Add(rte);
            
                 //Transfer the Routes to the GPS device
                 gps.SetRoutes(rtes);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.PortClose">
            <summary>
            Closes the communications port in use.
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.PowerOff">
            <summary>
            This method powers down the connected GPS device.
            </summary>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetProximityWaypoints">
             <summary>
             Returns a WaypointCollection object representing the 
             Proximity Waypoints retrieved from the GPS device. 
             </summary>
             <example>C#
             <code>
             private void GetProximityWaypoints()
             {
                 //Create a new device
                 GarminDevice gps = new GarminDevice();
            
                 //Retrieve the Waypoints
                 WaypointCollection wpts = gps.GetProximityWaypoints();
            
                 //Now we have a collection of Proximity Waypoints
                 foreach (Waypoint wpt in wpts)
                 {
                     Console.WriteLine(wpt.Latitude);
                     Console.WriteLine(wpt.Longitude);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = wpts.ToDataSet();
                 dataGridView1.DataMember = "Waypoints";
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.PvtDataStart">
            <summary>
            This method causes the GPS device to transmit Position, Velocity and 
            Time data once per second. GPSLibrary fires the PVTData event and 
            presents the data as a string. This mode of operation is provided 
            as a convienient alternative to the NMEA data protocol.
            </summary>
            <remarks>
            See Device.PVTData Event for full details.
            </remarks>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetAlmanacs">
             <summary>
             Returns a AlmanacCollection object from the GPS Device.
             </summary>
             <example>C#
             <code>
             private void GetAlmanacs()
             {
                 GarminDevice gps = new GarminDevice();
            
                //Retrieve the Almanacs
                AlmanacCollection almacs = gps.GetAlmanacs();
            
                //Now we have a collection of Almanacs
                foreach (Almanac almc in almacs)
                {
                    Console.WriteLine(almc.SatelliteId);
                    Console.WriteLine(almc.Health);
                }
            
                //Alternatively display the results in a DataGridView
                dataGridView1.DataSource = almacs.ToDataSet();
                dataGridView1.DataMember = "Almanacs";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetFlightBooks">
             <summary>
             Returns a FlightBookCollection object from the GPS Device.
             </summary>
             <example>C#
             <code>
             private void GetFlightBooks()
             {
                 //Create a new device
                 GarminDevice gps = new GarminDevice();
            
                 //Retrieve the FilghtBooks
                 FlightBookCollection fbks = gps.GetFlightBooks();
            
                 //Now we have a collection of FilghtBooks
                 foreach (FlightBook fbk in fbks)
                 {
                     Console.WriteLine(fbk.AircraftId);
                     Console.WriteLine(fbk.Distance);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = fbks.ToDataSet();
                 dataGridView1.DataMember = "FlightBooks";
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetLaps">
             <summary>
             Returns a LapCollection object from the GPS Device.
             </summary>
             <example>C#
             <code>
             private void GetLaps()
             {
                 //Create a new device
                 GarminDevice gps = new GarminDevice();
            
                 //Retrieve the Laps
                 LapCollection laps = gps.GetLaps();
            
                 //Now we have a collection of Laps
                 foreach (Lap lap in laps)
                 {
                     Console.WriteLine(lap.Calories);
                     Console.WriteLine(lap.TotalTime);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = laps.ToDataSet();
                 dataGridView1.DataMember = "Laps";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.SetTrackLog(Waymex.Gps.Tracklog)">
             <summary>
             Accepts a Tracklog object and transfers it to the connected GPS device.
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             public void SetTracklog()
             {
                 GarminDevice gps = new GarminDevice();
             
                 Tracklog trk;
                 Trackpoint tpt;
            
                 //Create a new Tracklog object
                 trk = new Tracklog();
                 trk.Identifier = "Upload";
            
                 //Create the first Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.42;
                 tpt.Latitude = -36.47;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create a second Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.43;
                 tpt.Latitude = -36.48;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the third Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.44;
                 tpt.Latitude = -36.49;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the fourth Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.45;
                 tpt.Latitude = -36.5;
                 trk.Trackpoints.Add(tpt);
            
                 //Send the Tracklog to the GPS device
                 gps.SetTrackLog(trk);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.SetTrackLog(Waymex.Gps.Tracklog,System.Boolean)">
             <summary>
             The SplitTracklog parameter, when set to true allows a multi-segment
             Tracklog object to be transferred to the GPS as multiple tracklogs.
             A setting of false ensures a multi-segment Tracklog object is transferred
             to the GPS device as a single track.
             </summary>
             <example>C#
             <code>
             public void SetTracklog()
             {
                 GarminDevice gps = new GarminDevice();
             
                 Tracklog trk;
                 Trackpoint tpt;
            
                 //Create a new Tracklog object
                 trk = new Tracklog();
                 trk.Identifier = "Upload";
            
                 //Create the first Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.42;
                 tpt.Latitude = -36.47;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create a second Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.43;
                 tpt.Latitude = -36.48;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the third Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.44;
                 tpt.Latitude = -36.49;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the fourth Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.45;
                 tpt.Latitude = -36.5;
                 trk.Trackpoints.Add(tpt);
            
                 //Send the Tracklog to the GPS device
                 gps.SetTrackLog(trk);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetUnitId">
            <summary>
            This method returns the Unit ID of the connected device. Please note that
            this method is not supported by all devices. A DataTransferException 
            exception will be thrown if the method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetProductInfo">
            <summary>
            This method returns a Product info object containing information about the connected device.
            </summary>
            <returns>ProductInfo object</returns>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetSymbolId(System.Int32)">
            <summary>
            Returns a SymbolId for a given symbol value. This function takes account of the various
            symbol sets in use by devices.
            </summary>
            <param name="symbolValue"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.GarminDevice.GetSymbolValue(Waymex.Gps.SymbolId)">
            <summary>
            Returns a given symbol value for a given SymbolId this function takes account of the 
            various symbol sets etc in use.
            </summary>
            <param name="symbolId"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.Lap">
            <summary>
            This object forms part of the LapCollection object which is returned by 
            the GetLaps method of the GarminDevice object.
            </summary>
            <remarks>
            <para>Garmin Devices Only.</para>
            <para>
            In most cases not all of the Properties of the Lap object are used. The Properties
            actually used are determined by the protocol employed by the connected GPS Device.
            Below is a list of which Properties are supported by Protocol. Please note that even though a
            Property is identified as being supported does not mean that it will actually be used/populated.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D906</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>StartTime</term><description>Int32</description></item>
            <item><term>TotalTime</term><description>Int32</description></item>
            <item><term>TotalDistance</term><description>Single</description></item>
            <item><term>BeginLatitude</term><description>Double</description></item>
            <item><term>EndLatitude</term><description>Double</description></item>
            <item><term>BeginLongitude</term><description>Double</description></item>
            <item><term>EndLongitude</term><description>Double</description></item>
            <item><term>Calories</term><description>Int16</description></item>
            <item><term>TrackIndex</term><description>byte</description></item>
            </list>
            <para>
            The 'TrackIndex' Property values are as follows;
            </para>
            <list type="table">
            <listheader><term>Value</term><description>Description</description></listheader>
            <item><term>0 – 252</term><description>The lap is the last in its run. The track index is valid and can be used to lookup the track and associate it with the run.</description></item>
            <item><term>253 – 254</term><description>The lap is the last in its run; however, the run has no associated track.</description></item>
            <item><term>255</term><description>The lap may or may not be the last in its run. The track for the run is any track not already associated with a run.</description></item>
            </list>
            <para>
            <b>Protocol D1001</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>Index</term><description>Int32</description></item>
            <item><term>StartTime</term><description>Int32</description></item>
            <item><term>TotalTime</term><description>Int32</description></item>
            <item><term>TotalDistance</term><description>Single</description></item>
            <item><term>MaxSpeed</term><description>Single</description></item>
            <item><term>BeginLatitude</term><description>Double</description></item>
            <item><term>EndLatitude</term><description>Double</description></item>
            <item><term>BeginLongitude</term><description>Double</description></item>
            <item><term>EndLongitude</term><description>Double</description></item>
            <item><term>Calories</term><description>Int16</description></item>
            <item><term>AverageHeartRate</term><description>byte</description></item>
            <item><term>MaxHeartRate</term><description>byte</description></item>
            <item><term>Intensity</term><description>byte</description></item>
            </list>
            <para>
            <b>Protocol D1011</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>Index</term><description>Int32</description></item>
            <item><term>StartTime</term><description>Int32</description></item>
            <item><term>TotalTime</term><description>Int32</description></item>
            <item><term>TotalDistance</term><description>Single</description></item>
            <item><term>MaxSpeed</term><description>Single</description></item>
            <item><term>BeginLatitude</term><description>Double</description></item>
            <item><term>EndLatitude</term><description>Double</description></item>
            <item><term>BeginLongitude</term><description>Double</description></item>
            <item><term>EndLongitude</term><description>Double</description></item>
            <item><term>Calories</term><description>Int16</description></item>
            <item><term>AverageHeartRate</term><description>byte</description></item>
            <item><term>MaxHeartRate</term><description>byte</description></item>
            <item><term>Intensity</term><description>byte</description></item>
            <item><term>AverageCadence</term><description>byte</description></item>
            <item><term>TriggerMethod</term><description>byte</description></item>
            </list>
            <para>
            <b>Protocol D1015</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>Index</term><description>Int32</description></item>
            <item><term>StartTime</term><description>Int32</description></item>
            <item><term>TotalTime</term><description>Int32</description></item>
            <item><term>TotalDistance</term><description>Single</description></item>
            <item><term>MaxSpeed</term><description>Single</description></item>
            <item><term>BeginLatitude</term><description>Double</description></item>
            <item><term>EndLatitude</term><description>Double</description></item>
            <item><term>BeginLongitude</term><description>Double</description></item>
            <item><term>EndLongitude</term><description>Double</description></item>
            <item><term>Calories</term><description>Int16</description></item>
            <item><term>AverageHeartRate</term><description>byte</description></item>
            <item><term>MaxHeartRate</term><description>byte</description></item>
            <item><term>Intensity</term><description>byte</description></item>
            <item><term>AverageCadence</term><description>byte</description></item>
            <item><term>TriggerMethod</term><description>byte</description></item>
            <item><term>FatCalories</term><description>Int16</description></item>
            </list>	
            </remarks>
        </member>
        <member name="P:Waymex.Gps.Lap.Index">
            <summary>
            Returds/Sets the unique lap index.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.MaxSpeed">
            <summary>
            Returds/Sets the maximum speed.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.AverageHeartRate">
            <summary>
            Returns/Sets the average heart rate.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.MaxHeartRate">
            <summary>
            Returns/Sets the maximum heart rate.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.Intensity">
            <summary>
            Returns/Sets the intensity.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.AverageCadence">
            <summary>
            Returns/Sets the average cadence.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.TriggerMethod">
            <summary>
            Returns/Sets the trigger method.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.StartTime">
            <summary>
            Returns/Sets the start tme of the lap.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.TotalTime">
            <summary>
            Returns/Sets the total time for the lap.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.TotalDistance">
            <summary>
            Returns/Sets the total distance of the lap.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.BeginLatitude">
            <summary>
            Returns/Sets the Latitude of the start of the lap.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.EndLatitude">
            <summary>
            Returns/Sets the Latitude of the end of the lap.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.BeginLongitude">
            <summary>
            Returns/Sets the Logitude of the start of the lap.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.EndLongitude">
            <summary>
            Returns/Sets the Logitude of the end of the lap.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.Calories">
            <summary>
            Returns/Sets the calories used.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.TrackIndex">
            <summary>
            Returns/Sets the track index.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.FatCalories">
            <summary>
            Fat Calories burned in this lap, 0xFFFF is returned if the value is invalid.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.Unused1">
            <summary>
            Unused.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.Unused2">
            <summary>
            Unused.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Lap.Unused3">
            <summary>
            Unused.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Lap.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Lap.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Lap.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Lap.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.LapCollection">
            <summary>
            Collection of Lap objects.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LapCollection.Add(Waymex.Gps.Lap)">
            <summary>
            This method adds a Lap object to the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.LapCollection.Count">
            <summary>
            Returns the number of Lap objects in the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.LapCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the collection by ordinal reference.
            This Property is the default indexer in C#.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LapCollection.GetEnumerator">
            <summary>
            This method is the enumerator for the collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LapCollection.#ctor">
            <summary>
            Constructor for the LapCollection object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LapCollection.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LapCollection.ToXml(System.String)">
            <summary>
            Returns an XML representation of the object.
            This overloaded method accepts an xslt filename which can be used to ransform the xml.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LapCollection.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LapCollection.ToDataSet">
            <summary>
            This method returns a System.Data.Dataset populated with the contents of the LapCollection object.
            The dataset includes one table called 'Laps'.
            </summary>
        </member>
        <member name="M:Waymex.Gps.LapCollection.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.LapCollection.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.MagellanDevice">
             <summary>
             This object is the Magellan device object though which all data objects and collections 
             are accessd.
             </summary>
             <example>C#
             <code>
             private void GetWaypoints()
             {
                 MagellanDevice gps = new MagellanDevice();
            
                 //Retrieve the Waypoints
                 WaypointCollection wpts = gps.GetWaypoints();
             
                 //Now we have a collection of Waypoints
                 foreach (Waypoint wpt in wpts)
                 {
                     Console.WriteLine(wpt.Latitude);
                     Console.WriteLine(wpt.Longitude);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = wpts.ToDataSet();
                 dataGridView1.DataMember = "Waypoints";
            
             }
             </code>
             </example>
        </member>
        <member name="E:Waymex.Gps.MagellanDevice.Progress">
             <summary>
             The progress event fires during the data transfers to and from the GPS. 
             A long value of between 0 and 100 is passed to the event. 
             It is provided to allow a client application to display a progress 
             indicator during transfers.
             </summary>
             <example>C#
             <code><![CDATA[
            	// Register the event, typically in Form_Load
            	gps.Progress +=new EventHandler<ProgressEventArgs>(gps_Progress);
            
            	private void gps_Progress(object sender, ProgressEventArgs e)
            	{
            		// Update a progress bar. This is OK as this event
            		// is raised on the thread that created the Device object.
            		pbProgress.Value = e.Progress;
            	}
             ]]></code>
             </example>
        </member>
        <member name="P:Waymex.Gps.MagellanDevice.CaptureFile">
            <summary>
            Set this property to a valid filenamame and Megellan data will be written to this file.
            </summary>
        </member>
        <member name="P:Waymex.Gps.MagellanDevice.CaptureFileFilter">
            <summary>
            This property can be used to limit the NMEA sentences that are written to the Capture file.
            For example setting the property to "RMC GLL" will ensure only the RMC and GLL sentence
            types are written to the file. Leaving the property empty will ensure that all sentence
            types are written to the file.
            </summary>
        </member>
        <member name="P:Waymex.Gps.MagellanDevice.CommunicationsPort">
            <summary>
            Gets/Sets the communications port to use.
            </summary>
        </member>
        <member name="P:Waymex.Gps.MagellanDevice.BaudRate">
            <summary>
            Sets/Gets the Baud rate of the serial connection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.OpenPort(System.Int32)">
            <summary>
            Specifies and opens the serial communication port to use.
            </summary>
            <param name="port">The serial port to use. Values in the range 1 to 256 are accepted.</param>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.OpenPort(System.Int32,System.Int32)">
            <summary>
            Specifies and opens the serial communication port to use at the specified speed.
            </summary>
            <param name="port">Specifies the serial port to use. Values in the range 1 to 256 are accepted.</param>
            <param name="speed">Specifies the baud rate to use.</param>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.OpenPort">
            <summary>
            Opens the default port, COM 1 at the default speed, 4800 baud..
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.ClosePort">
            <summary>
            Closes the currently open port. This can safely be called at any time.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.#ctor">
            <summary>
            Constructor for the Device class.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.GetWaypoints">
             <summary>
             Returns a WaypointCollection of Waypoint objects from the GPS device.
             </summary>
             <example>C#
             <code>
             private void GetWaypoints()
             {
                 MagellanDevice gps = new MagellanDevice();
            
                 //Retrieve the Waypoints
                 WaypointCollection wpts = gps.GetWaypoints();
             
                 //Now we have a collection of Waypoints
                 foreach (Waypoint wpt in wpts)
                 {
                     Console.WriteLine(wpt.Latitude);
                     Console.WriteLine(wpt.Longitude);
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = wpts.ToDataSet();
                 dataGridView1.DataMember = "Waypoints";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.GetWaypoints(System.Int32,System.Int32)">
            <param name="PercentageDivisor">
            Us used to modify the progress event.
            E.g. a value of 2 halves the progress value passed to the progress event
            this is used by the GetRoute method, which calls this method, to give
            a realistic progress value.
            </param>
            <param name="PercentageOffset"></param>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.GetAlmanacs">
             <summary>
             Returns a AlmanacCollection of Almanac objects from the GPS Device.
             </summary>
             <example>C#
             <code>
             private void GetAlmanacs()
             {
                 MagellanDevice gps = new MagellanDevice();
            
                //Retrieve the Almanacs
                AlmanacCollection almacs = gps.GetAlmanacs();
            
                //Now we have a collection of Almanacs
                foreach (Almanac almc in almacs)
                {
                    Console.WriteLine(almc.SatelliteId);
                    Console.WriteLine(almc.Health);
                }
            
                //Alternatively display the results in a DataGridView
                dataGridView1.DataSource = almacs.ToDataSet();
                dataGridView1.DataMember = "Almanacs";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.GetTracklogs">
             <summary>
             Returns a TrackLogCollection of TrackLog objects from the GPS Device.
             The SplitTracklog parameter when set to true returns multi-segment tracks
             as separate Tracklog objects. When set to false a multi-segment track is 
             returned as a single Tracklog object.
             </summary>
             <example>C#
             <code>
             private void GetTracklogs()
             {
                 MagellanDevice gps = new MagellanDevice();
            
                 //Retrieve the Tracklogs
                 TracklogCollection trks = gps.GetTracklogs();
            
                 //Now we have a collection of Tracklogs
                 foreach (Tracklog trk in trks)
                 {
                     Console.WriteLine(trk.Identifier);
            
                     //Each Tracklog has a collection of Trackpoints
                     foreach (Trackpoint tpt in trk.Trackpoints)
                     {
                         Console.WriteLine(tpt.Latitude);
                         Console.WriteLine(tpt.Longitude);
                     }
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = trks.ToDataSet();
                 dataGridView1.DataMember = "Tracks";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.GetRoutes">
             <summary>
             Returns a RouteCollection of Route objects from the GPS Device. 
             </summary>
             <example>C#
             <code>
             private void GetRoutes()
             {
                 MagellanDevice gps = new MagellanDevice();
            
                 //Retrieve the Routes
                 RouteCollection rtes = gps.GetRoutes();
            
                 //Now we have a collection of Routes
                 foreach (Route rte in rtes)
                 {
                     Console.WriteLine(rte.Identifier);
                     Console.WriteLine(rte.Comment);
            
                     //Each Route has a collection of Waypoints
                     foreach (Waypoint wpt in rte.Waypoints)
                     {
                         Console.WriteLine(wpt.Latitude);
                         Console.WriteLine(wpt.Longitude);
                     }
                 }
            
                 //Alternatively display the results in a DataGridView
                 dataGridView1.DataSource = rtes.ToDataSet();
                 dataGridView1.DataMember = "Routes";
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.GetProductInfo">
            <summary>
            This method returns a Product info object containing information about the connected device.
            </summary>
            <returns>ProductInfo object</returns>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.DeleteWaypoints">
            <summary>
            Deletes all the stored Waypoints.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.DeleteRoutes">
            <summary>
            Deletes all the stored Routes.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.DeleteTracks">
            <summary>
            Deletes all the stored Tracks.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.DeleteFixes">
            <summary>
            Deletes all the stored Fixes.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.DeleteAll">
            <summary>
            Deletes all the stored Waypoints, Routes, Tracks and Fixes.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.SetWaypoints(Waymex.Gps.WaypointCollection)">
             <summary>
             Accepts a WaypointCollection of Waypoint objects and transfers them to the connected GPS device. 
             </summary>
            <example>C#
             <code>
             private void SetWaypoints()
             {
                 MagellanDevice gps = new MagellanDevice();
             
                 WaypointCollection newWpts = new WaypointCollection();
                 Waypoint newWpt = null;
            
                 //Create some Waypoints
            
                 //Waypoint 1
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test01";
                 newWpt.Latitude = 53.9608166666667;
                 newWpt.Longitude = -2.02225;
                 newWpt.Comment = "Test 1";
            
                 //Add the new waypoint to a Waypoint collection
                 newWpts.Add(newWpt);
            
                 //Waypoint 2
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test02";
                 newWpt.Latitude = 190.0;
                 newWpt.Longitude = 1180.0;
                 newWpt.Comment = "Test 2";
            
                 //Add the new Waypoint to a Waypoint collection
                 newWpts.Add(newWpt);
            
                 //Transfer the Waypoints to the GPS device
                 gps.SetWaypoints(newWpts);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.SetWaypoint(Waymex.Gps.Waypoint)">
             <summary>
             Accepts a Waypoint object and transfers it to the connected GPS device.
             </summary>
             <example>C#
             <code>
             private void SetWaypoint()
             {
            
                 MagellanDevice gps = new MagellanDevice();
             
                 Waypoint newWpt = null;
            
                 //Create a Waypoint
                 newWpt = new Waypoint();
                 newWpt.Identifier = "Test01";
                 newWpt.Latitude = 53.9608166666667;
                 newWpt.Longitude = -2.02225;
                 newWpt.Comment = "Test 1";
            
                 //Transfer the Waypoint to the GPS device
                 gps.SetWaypoint(newWpt);
            
             }
            </code>
            </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.SetRoute(Waymex.Gps.Route)">
             <summary>
             Accepts a Route object and transfers it to the connected GPS device.
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             private void SetRoute()
             {
                 MagellanDevice gps = new MagellanDevice();
            
                 Waypoint wpt;
                 Route rte;
                 WaypointCollection wpts;
            
                 //Create the collection of Waypoints for the Route
                 wpts = new WaypointCollection();
            
                 //Waypoint 1
                 wpt = new Waypoint();
                 wpt.Identifier = "RT01";
                 wpt.Latitude = 1.54;
                 wpt.Longitude = 0.2;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Waypoint 2
                 wpt = new Waypoint();
                 wpt.Identifier = "RT02";
                 wpt.Latitude = 1.53;
                 wpt.Longitude = 0.22;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Create and populate the Route
                 rte = new Route();
                 rte.Number = 2;
                 rte.Comment = "Hello Route";
                 rte.Waypoints = wpts;
            
                 //Transfer the Route to the GPS device
                 gps.SetRoute(rte);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.SetRoutes(Waymex.Gps.RouteCollection)">
             <summary>
             Accepts a RouteCollection object and transfers it to the connected GPS device. 
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             private void SetRoutes()
             {
                 MagellanDevice gps = new MagellanDevice();
             
                 Waypoint wpt;
                 Route rte;
                 RouteCollection rtes;
                 WaypointCollection wpts;
            
                 //Create the collection of Waypoints for the Route
                 wpts = new WaypointCollection();
            
                 //Waypoint 1
                 wpt = new Waypoint();
                 wpt.Identifier = "RT01";
                 wpt.Latitude = 1.54;
                 wpt.Longitude = 0.2;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Waypoint 2
                 wpt = new Waypoint();
                 wpt.Identifier = "RT02";
                 wpt.Latitude = 1.53;
                 wpt.Longitude = 0.22;
            
                 //Add the new Waypoint to the Waypoint Collection
                 wpts.Add(wpt);
            
                 //Create and populate the Route
                 rte = new Route();
                 rte.Number = 2;
                 rte.Comment = "Hello Route";
                 rte.Waypoints = wpts;
            
                 //Create a routes collection 
                 //Typically a single Route would be transferred using SetRoute
                 rtes = new RouteCollection();
                 rtes.Add(rte);
            
                 //Transfer the Routes to the GPS device
                 gps.SetRoutes(rtes);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.SetTrackLog(Waymex.Gps.Tracklog)">
             <summary>
             Accepts a Tracklog object and transfers it to the connected GPS device.
             A value of True is returned if the transfer was successful.
             </summary>
             <example>C#
             <code>
             public void SetTracklog()
             {
                 MagellanDevice gps = new MagellanDevice();
             
                 Tracklog trk;
                 Trackpoint tpt;
            
                 //Create a new Tracklog object
                 trk = new Tracklog();
                 trk.Identifier = "Upload";
            
                 //Create the first Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.42;
                 tpt.Latitude = -36.47;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create a second Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.43;
                 tpt.Latitude = -36.48;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the third Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.44;
                 tpt.Latitude = -36.49;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the fourth Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.45;
                 tpt.Latitude = -36.5;
                 trk.Trackpoints.Add(tpt);
            
                 //Send the Tracklog to the GPS device
                 gps.SetTrackLog(trk);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.SetTrackLog(Waymex.Gps.Tracklog,System.Boolean)">
             <summary>
             The SplitTracklog parameter, when set to true allows a multi-segment
             Tracklog object to be transferred to the GPS as multiple Tracklogs.
             A setting of false ensures a multi-segment Tracklog object is transferred
             to the GPS device as a single track.
             </summary>
             <example>C#
             <code>
             public void SetTracklog()
             {
                 MagellanDevice gps = new MagellanDevice();
            
                 Tracklog trk;
                 Trackpoint tpt;
            
                 //Create a new Tracklog object
                 trk = new Tracklog();
                 trk.Identifier = "Upload";
            
                 //Create the first Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.42;
                 tpt.Latitude = -36.47;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create a second Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.43;
                 tpt.Latitude = -36.48;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the third Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.44;
                 tpt.Latitude = -36.49;
                 tpt.NewTrack = true;
                 trk.Trackpoints.Add(tpt);
            
                 //Create the fourth Trackpoint
                 tpt = new Trackpoint();
                 tpt.Longitude = 146.45;
                 tpt.Latitude = -36.5;
                 trk.Trackpoints.Add(tpt);
            
                 //Send the Tracklog to the GPS device
                 gps.SetTrackLog(trk);
            
             }
             </code>
             </example>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.ReDimPreservePMGNRTE(Waymex.Gps.Nmea.SentencePmgnRte[],System.Int32)">
            <summary>
            Re-dimensions an array without losing its contents.
            </summary>
            <param name="Array">Array to be re-dimensioned.</param>
            <param name="NewDimension">New dimension, representing the number of elements
            e.g. a number of 4 would redimension the array to have 4 elements (0-3).</param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.PortClose">
            <summary>
            Closes the currently active Serial Port.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.PortOpen">
            <summary>
            Opens the Serial Port (Comm Port) at the specified baud rate.
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.Dispose">
            <summary>
            Closes all resources and disposes of the object. 
            </summary>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.GetSymbolId(System.String)">
            <summary>
            Returns a SymbolId for a given symbol value. This function takes account of the various
            symbol sets in use by devices.
            </summary>
            <param name="symbolValue"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.MagellanDevice.GetSymbolValue(Waymex.Gps.SymbolId)">
            <summary>
            Returns a given symbol value for a given SymbolId this function takes account of the 
            various symbol sets etc in use.
            </summary>
            <param name="symbolId"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.NmeaDevice">
            <summary>
              This class allows acces to a connected NMEA device. The class exposes a single event
              that fires when a valid NMEA sentence is received from the NMEA device.
              The following Sentence types are supported with specific typed objects;
              BOD, GGA, GLL, GSA, GSV, RMB, RMC, WPL, PGRMC, PGRME, PGRMM, PGRMZ, PSLIB.
              Other sentence type are accessed via a generic sentence type.
            </summary>
            <example>
              C#
              <code><![CDATA[
             
             // Register the event, typically in Form_Load
             gps.ReceiveSentence += new EventHandler<ReceiveSentenceEventArgs>(gpsDevice_ReceiveSentence);
            
             // Use a delegate as Windows Forms Controls are not thread safe
             private delegate void DisplayNmeaDelegate(Sentence sentence);
            
             // The Event is then raised by the assembly when data is received from the NMEA device.
             private void gpsDevice_ReceiveSentence(object source, ReceiveSentenceEventArgs e)
             {
                 // Call the Display function
            	    DisplayNmea(e.Sentence);
             }
             
             private void DisplayNmea(Sentence sentence)
             {
            
                // Populate a label called lblSentence
            
                // Do NOT do this, as we may not be on the UI thread.
                // lblSentence.Text = sentence.ToString();
            
                // Check if we need to call Invoke.
                if (this.InvokeRequired)
                {
                    // Pass the this function to Invoke,
                    // then the call will come in on the correct
                    // thread and InvokeRequired will be false.
                    this.BeginInvoke(new DisplayNmeaDelegate(DisplayNmea), new object[] { sentence });
                    return;
                }
            
                //ok now as we are on the UI thread so this is OK
                lblSentence.Text = sentence.ToString();
            
                // All sentence objects are derived from Waymex.Gps.NMEA.Sentence, to get to the
                // specific properties of a derived type (e.g. SentenceRmc) simply
                // cast the Sentence object to the approriate type as follows;
                switch (sentence.TypeId)
                {
                    case "RMC":
            
                        // RMC Sentence received so cast to the SentenceRmc type
                        SentenceRmc sentenceRmc = (SentenceRmc)sentence;
            
                        // process the properties as required
                        lblLatitude.Text = sentenceRmc.Latitude.ToString();
                        lblLongitude.Text = sentenceRmc.Longitude.ToString();
            
                        break;
            
                    case "RMB":
            
                        // RMB Sentence received so cast to the SentenceRmb type
                       SentenceRmb sentenceRmb = (SentenceRmb)sentence;
            
                        // process the properties as required
                        lblDestLatitude.Text = sentenceRmb.DestinationLatitude.ToString();
            
                         break;
                 }
             }
             ]]></code>
            </example>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.#ctor">
            <summary>
              Constructor for the Device class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.NmeaDevice.CommunicationsPort">
            <summary>
              Gets/Sets the communications port to use.
            </summary>
        </member>
        <member name="P:Waymex.Gps.NmeaDevice.BaudRate">
            <summary>
              Sets/Gets the Baud rate of the serial connection.
            </summary>
        </member>
        <member name="P:Waymex.Gps.NmeaDevice.CaptureFile">
            <summary>
              Set this property to a valid filenamame and NMEA Sentences will be written to this file.
            </summary>
        </member>
        <member name="P:Waymex.Gps.NmeaDevice.CaptureFileFilter">
            <summary>
              This property can be used to limit the NMEA sentences that are written to the Capture file.
              For example setting the property to "RMC GLL" will ensure only the RMC and GLL sentence
              types are written to the file. Leaving the property empty will ensure that all sentence
              types are written to the file.
            </summary>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.Dispose">
            <summary>
              Closes all resources and disposes of the object.
            </summary>
        </member>
        <member name="E:Waymex.Gps.NmeaDevice.ReceiveSentence">
            <summary>
              This event provides access to real time NMEA data. The Event fires when a valid
              NMEA Sentence is received from the NMEA device. Passed to the Event is an object
              representing the sentence received. The following Sentence types are supported
              with specific typed objects;
              BOD, GGA, GLL, GSA, GSV, RMB, RMC, WPL, PGRMC, PGRME, PGRMM, PGRMZ, PSLIB.
              Other sentence type are accessed via a generic sentence type.
            </summary>
            <example>
              C#
              <code><![CDATA[
             
             // Register the event, typically in Form_Load
             gps.ReceiveSentence += new EventHandler<ReceiveSentenceEventArgs>(gpsDevice_ReceiveSentence);
            
             // Use a delegate as Windows Forms Controls are not thread safe
             private delegate void DisplayNmeaDelegate(Sentence sentence);
            
             // The Event is then raised by the assembly when data is received from the NMEA device.
             private void gpsDevice_ReceiveSentence(object source, ReceiveSentenceEventArgs e)
             {
                 // Call the Display function
            	    DisplayNmea(e.Sentence);
             }
             
             private void DisplayNmea(Sentence sentence)
             {
            
                // Populate a label called lblSentence
            
                // Do NOT do this, as we may not be on the UI thread.
                // lblSentence.Text = sentence.ToString();
            
                // Check if we need to call Invoke.
                if (this.InvokeRequired)
                {
                    // Pass the this function to Invoke,
                    // then the call will come in on the correct
                    // thread and InvokeRequired will be false.
                    this.BeginInvoke(new DisplayNmeaDelegate(DisplayNmea), new object[] { sentence });
                    return;
                }
            
                //ok now as we are on the UI thread so this is OK
                lblSentence.Text = sentence.ToString();
            
                // All sentence objects are derived from Waymex.Gps.NMEA.Sentence, to get to the
                // specific properties of a derived type (e.g. SentenceRmc) simply
                // cast the Sentence object to the approriate type as follows;
                switch (sentence.TypeId)
                {
                    case "RMC":
            
                        // RMC Sentence received so cast to the SentenceRmc type
                        SentenceRmc sentenceRmc = (SentenceRmc)sentence;
            
                        // process the properties as required
                        lblLatitude.Text = sentenceRmc.Latitude.ToString();
                        lblLongitude.Text = sentenceRmc.Longitude.ToString();
            
                        break;
            
                    case "RMB":
            
                        // RMB Sentence received so cast to the SentenceRmb type
                       SentenceRmb sentenceRmb = (SentenceRmb)sentence;
            
                        // process the properties as required
                        lblDestLatitude.Text = sentenceRmb.DestinationLatitude.ToString();
            
                         break;
                 }
             }
             ]]></code>
            </example>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.Send(Waymex.Gps.Nmea.Sentence)">
            <summary>
              Provides a mechanism to send an NMEA sentence to the GPS Device.
            </summary>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.Stop">
            <summary>
              Closes the communications port and stops processing NMEA data.
            </summary>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.OpenPort(System.Int32)">
            <summary>
              Specifies and opens the serial communication port to use.
            </summary>
            <param name="port">The serial port to use. Values in the range 1 to 256 are accepted.</param>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.OpenPort(System.Int32,System.Int32)">
            <summary>
              Specifies and opens the serial communication port to use at the specified speed.
            </summary>
            <param name="port">Specifies the serial port to use. Values in the range 1 to 256 are accepted.</param>
            <param name="speed">Specifies the baud rate to use.</param>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.OpenPort">
            <summary>
              Opens the default port, COM 1 at the default speed, 4800 baud..
            </summary>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.ClosePort">
            <summary>
              Closes the currently open port. This can safely be called at any time.
            </summary>
        </member>
        <member name="M:Waymex.Gps.NmeaDevice.Start">
            <summary>
              Opens the communications Port and starts processing the NMEA data.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Port">
            <summary>
            Communications Port Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.Port.Usb">
            <summary>USB Port</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial01">
            <summary>Serial Port 1</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial02">
            <summary>Serial Port 2</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial03">
            <summary>Serial Port 3</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial04">
            <summary>Serial Port 4</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial05">
            <summary>Serial Port 5</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial06">
            <summary>Serial Port 6</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial07">
            <summary>Serial Port 7</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial08">
            <summary>Serial Port 8</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial09">
            <summary>Serial Port 9</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial10">
            <summary>Serial Port 10</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial11">
            <summary>Serial Port 11</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial12">
            <summary>Serial Port 12</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial13">
            <summary>Serial Port 13</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial14">
            <summary>Serial Port 14</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial15">
            <summary>Serial Port 15</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial16">
            <summary>Serial Port 16</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial17">
            <summary>Serial Port 17</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial18">
            <summary>Serial Port 18</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial19">
            <summary>Serial Port 19</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial20">
            <summary>Serial Port 20</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial21">
            <summary>Serial Port 21</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial22">
            <summary>Serial Port 22</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial23">
            <summary>Serial Port 23</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial24">
            <summary>Serial Port 24</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial25">
            <summary>Serial Port 25</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial26">
            <summary>Serial Port 26</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial27">
            <summary>Serial Port 27</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial28">
            <summary>Serial Port 28</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial29">
            <summary>Serial Port 29</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial30">
            <summary>Serial Port 30</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial31">
            <summary>Serial Port 31</summary>
        </member>
        <member name="F:Waymex.Gps.Port.Serial32">
            <summary>Serial Port 32</summary>
        </member>
        <member name="T:Waymex.Gps.BaudRate">
            <summary>
            Baud Rate Enumerator.
            </summary>
        </member>
        <member name="F:Waymex.Gps.BaudRate.Baud1200">
            <summary>
            Baud Rate Enumerator, 1200 Baud.
            </summary>
        </member>
        <member name="F:Waymex.Gps.BaudRate.Baud4800">
            <summary>
            Baud Rate Enumerator, 1200 Baud.
            </summary>
        </member>
        <member name="F:Waymex.Gps.BaudRate.Baud9600">
            <summary>
            Baud Rate Enumerator, 4800 Baud.
            </summary>
        </member>
        <member name="F:Waymex.Gps.BaudRate.Baud19200">
            <summary>
            Baud Rate Enumerator, 9600 Baud.
            </summary>
        </member>
        <member name="F:Waymex.Gps.BaudRate.Baud57600">
            <summary>
            Baud Rate Enumerator, 57600 Baud.
            </summary>
        </member>
        <member name="F:Waymex.Gps.BaudRate.Baud115200">
            <summary>
            Baud Rate Enumerator, 115200 Baud.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Position">
            <summary>
            This object is typically used to store the current position. 
            It is the object returned by the GetPosition method of the 
            Device object.
            </summary>
            <remarks>
            <para>Garmin Devices Only.</para>
            </remarks>
        </member>
        <member name="P:Waymex.Gps.Position.Latitude">
            <summary>
            This property returns the current Latitude in degrees as reported
            by the GPS device.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Position.Longitude">
            <summary>
            This property returns the current Longitude in degrees as reported
            by the GPS device.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Position.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Position.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Position.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.ProductInfo">
            <summary>
            This object contains details about the connected GPS device.
            </summary>
        </member>
        <member name="P:Waymex.Gps.ProductInfo.SoftwareVersion">
            <summary>
            Returns an Integer representing the version of software used in the connected GPS device. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.ProductInfo.ProductId">
            <summary>
            Returns an Integer representing the Product ID of the connected GPS device.
            </summary>
        </member>
        <member name="P:Waymex.Gps.ProductInfo.ProductDescription">
            <summary>
            Returns the product description of the connected GPS device as a String.
            </summary>
        </member>
        <member name="P:Waymex.Gps.ProductInfo.ProtocolCapability">
            <summary>
            Returns True if the connected GPS device supports the Protocol Capabilities Protocol.
            </summary>
        </member>
        <member name="P:Waymex.Gps.ProductInfo.ProtocolTable">
            <summary>
            Returns a CR/LF delimited string containing the protocol information for the connected GPS device. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.ProductInfo.ProductName">
            <summary>
            Returns the Name of the connected GPS device.
            </summary>
        </member>
        <member name="P:Waymex.Gps.ProductInfo.SymbolSet">
            <summary>
            Returns the symbol set in use for the connected device. Only applicable for Garmin devices.
            Other devices will return -1.
            </summary>
        </member>
        <member name="M:Waymex.Gps.ProductInfo.GetSoftwareVersionAsInteger">
            <summary>
            Returns the software version as an integer or zero if unknown.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Gps.ProductInfo.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.ProductInfo.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.ProgressEventArgs">
            <summary>
            ProgressEventArgs is the class containing event data. 
            </summary>
        </member>
        <member name="M:Waymex.Gps.ProgressEventArgs.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Waymex.Gps.ProgressEventArgs.Progress">
            <summary>
            Progress value as within the range 0 - 100 representing the percentage complete.
            </summary>
        </member>
        <member name="T:Waymex.Gps.Route">
            <summary>
            This object forms part of the RouteCollection object which is returned 
            by the GetRoutes method of the Device object. The object represents 
            a single route stored in the connected GPS device.
            </summary>
            <remarks>
            <para><b>Magellan Devices</b></para>
            <para>The following Properties are used by the Magellan devices.</para>
            <list type="table">
            <item><term>Number</term><description>Int16</description></item>
            <item><term>Identifier</term><description>String</description></item>
            </list>
            <br/><br/>
            <para><b>Garmin Devices</b></para>
            <para>
            When the Host requests the GPS to send routes, the GPS will send every route stored in its
            database. When the Host sends routes to the GPS, the Host may selectively transfer any
            number of routes.
            </para>
            <para>
            Some GPS devices contain an internal database of waypoint information; for example, most
            aviation products have an internal database of aviation waypoints, and others may have an
            internal database of land waypoints. When routes are being transferred from the Host to one
            of these units, the GPS will attempt to match the incoming route waypoints with waypoints in
            its internal database. The GPS inspects the 'Class' member of the incoming route waypoint
            and if it indicates a non-user waypoint, the GPS searches its internal database using either
            the 'Identifier' and 'Country' members or the 'Sub Class' member. If a match is found, the
            waypoint from the internal database is used for the route; otherwise, a new user waypoint is
            created and used.
            </para>
            <para>
            In most cases not all of the Properties of the Route object are used. The Properties
            actually used are determined by the protocol employed by the connected GPS Device.
            Below is a list of which Properties are supported by Protocol. Please note that even though a
            Property is identified as being supported does not mean that it will actually be used/populated.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D200</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>Number</term><description>Int16</description></item>
            <item><term>Waypoints</term><description>Waypoints</description></item>
            </list>
            <para>
            The 'Number' Property must be unique for each route.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D201</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>Number</term><description>Int16</description></item>
            <item><term>Comment</term><description>String</description></item>
            <item><term>Waypoints</term><description>Waypoints</description></item>
            </list>
            <para>
            Some GPS devices require a unique 'Comment' Property value for each route, 
            and other GPS devices do not. Unfortunately there is no way to determine 
            which method is used for a specific GPS device, therefore it is recommended 
            that a unique value is used in order to support the widest range of units.
            </para>
            <para>
            The 'Number' Property must be unique for each route.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D202</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>Identifier</term><description>String</description></item>
            <item><term>Waypoints</term><description>Waypoints</description></item>
            </list>
            <br/><br/>
            <para>
            <b>Protocol D210</b>
            </para>
            <para>
            This protocol is a Route Link Protocol and if implemented by a GPS device has 
            the effect of populating additional properties of the Waypoint objects 
            returned by the ‘Waypoints’ Property of the Route object. (Please note 
            that this is not supported in the GPS ActiveX Library prior to Version 2 
            and in the GPS Library for .Net prior to version 2.3).
            </para>
            <para>
            The Properties of the Waypoint object affected are shown below:
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>RouteLinkIdentifier</term><description>String</description></item>
            <item><term>RouteLinkClass</term><description>Int16</description></item>
            <item><term>RouteLinkSubclass</term><description>String</description></item>
            </list>
            <para>
            The values for the 'RouteLinkClass' Property are defined as follows:
            </para>
            <list type="table">
            <listheader><term>Value</term><description>Description</description></listheader>
            <item><term>0</term><description>Line</description></item>
            <item><term>1</term><description>Link</description></item>
            <item><term>2</term><description>Net</description></item>
            <item><term>3</term><description>Direct</description></item>
            <item><term>255</term><description>Snap</description></item>
            </list>
            <para>
            The 'RouteLinkIdentifier' Property has a maximum length of 50 characters.
            If the 'RouteLinkClass' Property is set to the value for 'Direct' or 'Snap'
            then 'RouteLinkSubclass' should be set to 
            "00 00 00 00 00 00 FF FF FF FF FF FF FF FF FF FF FF FF".
            </para>
            </remarks>
        </member>
        <member name="P:Waymex.Gps.Route.Number">
            <summary>
            Returns/Sets the Route Number. Not all GPS devices supply a route number.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Route.Identifier">
            <summary>
            Returns/Sets the Route Identifier. Not all GPS devices supply a Route Identifier.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Route.Comment">
            <summary>
            Returns/Sets the Comment for the Route.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Route.Waypoints">
            <summary>
            Returns a WaypointCollection object. 
            </summary>
        </member>
        <member name="M:Waymex.Gps.Route.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Route.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Route.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Route.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Route.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.RouteCollection">
            <summary>
            Collection of Route objects.
            </summary>
            <remarks>
            <para>
            When the Host requests the GPS to send routes, the GPS will send every route stored in its
            database. When the Host sends routes to the GPS, the Host may selectively transfer any
            number of routes.
            </para>
            <para>
            Some GPS devices contain an internal database of waypoint information; for example, most
            aviation products have an internal database of aviation waypoints, and others may have an
            internal database of land waypoints. When routes are being transferred from the Host to one
            of these units, the GPS will attempt to match the incoming route waypoints with waypoints in
            its internal database. The GPS inspects the 'Class' member of the incoming route waypoint
            and if it indicates a non-user waypoint, the GPS searches its internal database using either
            the 'Identifier' and 'Country' members or the 'Sub Class' member. If a match is found, the
            waypoint from the internal database is used for the route; otherwise, a new user waypoint is
            created and used.
            </para>
            </remarks>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.Add(Waymex.Gps.Route)">
            <summary>
            Adds a Route object to the RouteCollection object. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.RouteCollection.Count">
            <summary>
            Returns the number of Route objects in the collection. 
            </summary>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.GetEnumerator">
            <summary>
            Returns the Enumerator.
            </summary>
        </member>
        <member name="P:Waymex.Gps.RouteCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the collection by ordinal reference. 
            This Property is the default indexer property in C#.
            </summary>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.ToXml(System.String)">
            <summary>
            Returns an XML representation of the object.
            This overloaded method accepts an xslt filename which can be used to ransform the xml.
            </summary>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.ToDataSet">
            <summary>
            This method returns a System.Data.Dataset populated with the contents of the RouteCollection object.
            The dataset includes two tables called 'Routes' and 'Waypoints'. A 'Route ID' field has been added to
            each of the tables, it is used to create a relationship called 'Waypoints' between them.
            </summary>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.RouteCollection.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.Tracklog">
             <summary>
             This object represents a single Track Log.
             </summary>
             <remarks>
             <para><b>Magellan Devices</b></para>
             <para>The following Properties are used by the Magellan devices.</para>
             <list type="table">
             <item><term>Identifier</term><description>String</description></item>
             <item><term>Trackpoints</term><description>Trackpoints</description></item>
             </list>
             <br/><br/>
             <para><b>Garmin Devices</b></para>
             <para>
             Most GPS products store only one track log (called the 'active' track log), however, some
             newer GPS products can store multiple track logs (in addition to the active track log). When
             the Host requests the GPS to send track logs, the GPS will send every Tracklog stored in its
             database. However only the Active Tracklog will contain Date/Time data.	
             </para>
             <para>
             In most cases not all of the Properties of the Tracklog object are used. The Properties
             actually used are determined by the protocol employed by the connected GPS Device.
             Below is a list of which Properties are supported by Protocol. Please note that even though a
             Property is identified as being supported does not mean that it will actually be used/populated.
             </para>
             <br/><br/>
             <para>
             <b>Protocol D310</b>
             </para>
             <list type="table">
             <listheader><term>Property</term><description>Type</description></listheader>
             <item><term>Display</term><description>Boolean</description></item>
             <item><term>Colour</term><description>Int16</description></item>
             <item><term>Identifier</term><description>String</description></item>
             <item><term>Trackpoints</term><description>Trackpoints</description></item>
             </list>
             <para>
             The 'Identifier' Property has a maximum length of 50 characters.
             </para> 
             <para>
             The Display property indicates whether the tracklog should be displayed on the map.
             </para>
             <para>
             The values for the 'Colour' Property are defined as follows:
             </para>
             <list type="table">
             <listheader><term>Value</term><description>Colour</description></listheader>
             <item><term>0</term><description>black</description></item>
             <item><term>1</term><description>dark red</description></item>
             <item><term>2</term><description>dark green</description></item>
             <item><term>3</term><description>dark yellow</description></item>
             <item><term>4</term><description>dark blue</description></item>
             <item><term>5</term><description>dark majenta</description></item>
             <item><term>6</term><description>dark cyan</description></item>
             <item><term>7</term><description>light grey</description></item>
             <item><term>8</term><description>dark grey</description></item>
             <item><term>9</term><description>red</description></item>
             <item><term>10</term><description>green</description></item>
             <item><term>11</term><description>yellow</description></item>
             <item><term>12</term><description>blue</description></item>
             <item><term>13</term><description>majenta</description></item>
             <item><term>14</term><description>cyan</description></item>
             <item><term>15</term><description>white</description></item>
             <item><term>255</term><description>default colour</description></item>
             </list>
             <br/><br/>
             <para>
             <b>Protocol D311</b>
             </para>
             <list type="table">
             <listheader><term>Property</term><description>Type</description></listheader>
             <item><term>Index</term><description>Int16</description></item>
             </list>
             <para>The index property is unique for all tracks received from the device.</para>
             <br/><br/>
             <para>
             <b>Protocol D312</b>
             </para>
             <list type="table">
             <listheader><term>Property</term><description>Type</description></listheader>
             <item><term>Display</term><description>Boolean</description></item>
             <item><term>Colour</term><description>Int16</description></item>
             <item><term>Identifier</term><description>String</description></item>
             <item><term>Trackpoints</term><description>Trackpoints</description></item>
             </list>
             <para>
             The 'Identifier' Property has a maximum length of 50 characters.
             </para>
             <para>
             The Display property indicates whether the tracklog should be displayed on the map.
             </para>
             <para>
             The Colour property can be one of the following values.
             <list type="table">
             <listheader><term>Value</term><description>Colour</description></listheader>
             <item><term>0</term><description>black</description></item>
             <item><term>1</term><description>dark red</description></item>
             <item><term>2</term><description>dark green</description></item>
             <item><term>3</term><description>dark yellow</description></item>
             <item><term>4</term><description>dark blue</description></item>
             <item><term>5</term><description>dark majenta</description></item>
             <item><term>6</term><description>dark cyan</description></item>
             <item><term>7</term><description>light grey</description></item>
             <item><term>8</term><description>dark grey</description></item>
             <item><term>9</term><description>red</description></item>
             <item><term>10</term><description>green</description></item>
             <item><term>11</term><description>yellow</description></item>
             <item><term>12</term><description>blue</description></item>
             <item><term>13</term><description>majenta</description></item>
             <item><term>14</term><description>cyan</description></item>
             <item><term>15</term><description>white</description></item>
             <item><term>16</term><description>transparent</description></item>
             <item><term>255</term><description>default colour</description></item>
             </list>
             </para>
            </remarks>
        </member>
        <member name="P:Waymex.Gps.Tracklog.Colour">
            <summary>
            See GPSLibrary Developer notes for details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Tracklog.Display">
            <summary>
            See GPSLibrary Developer notes for details.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Tracklog.Index">
            <summary>
            Returns/Sets the Index property, this property.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Tracklog.Identifier">
            <summary>
            Returns/Sets the Identifier for the Track Log. Many GPS devices do not use this property.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Tracklog.Trackpoints">
            <summary>
            Returns a TrackPointsCollection object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Tracklog.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Tracklog.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Tracklog.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Tracklog.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Tracklog.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.TracklogCollection">
             <summary>
             Collection of TrackLog objects.
             </summary>
             <remarks>
             <para>
             Most GPS products store only one track log (called the 'active' track log), however, some
             newer GPS products can store multiple track logs (in addition to the active track log). When
             the Host requests the GPS to send track logs, the GPS will send every Tracklog stored in its
             database. However only the Active Tracklog will contain Date/Time data.	
             </para>
            </remarks>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.Add(Waymex.Gps.Tracklog)">
            <summary>
            Allows a TrackLog Object to be added to the collection.
            </summary>
        </member>
        <member name="P:Waymex.Gps.TracklogCollection.Count">
            <summary>
            Returns the number of TrackLog objects in the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.TracklogCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the collection by ordinal reference. 
            This Property is the default indexer property in C#.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.ToXml(System.String)">
            <summary>
            Returns an XML representation of the object.
            This overloaded method accepts an xslt filename which can be used to ransform the xml.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.ToDataSet">
            <summary>
            This method returns a System.Data.Dataset populated with the contents of the Tracklogs collection
            of Tracklog objects.
            The dataset includes two tables called 'Tracklogs' and 'Trackpoints'). A 'Tracklog ID' field has been added to
            each of the tables, it is used to create a relationship called 'Trackpoints' between them.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.TracklogCollection.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.Trackpoint">
            <summary>
            This Trackpoint object forms part of a Tracklog.
            </summary>
            <remarks>
            <para><b>Magellan Devices</b></para>
            <para>The following Properties are used by the Magellan devices.</para>
            <list type="table">
            <item><term>Latitude</term><description>Double</description></item>
            <item><term>Longitude</term><description>Double</description></item>
            <item><term>FixDateTime</term><description>DateTime</description></item>
            </list>
            <br/><br/>
            <para><b>Garmin Devices</b></para>
            <para>
            In most cases not all of the Properties of the Trackpoint object are used. The Properties
            actually used are determined by the protocol employed by the connected GPS Device.
            Below is a list of which Properties are supported by Protocol. Please note that even though a
            Property is identified as being supported does not mean that it will actually be used/populated.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D300</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>TracklogNumber</term><description>Int16</description></item>
            <item><term>Latitude</term><description>Double</description></item>
            <item><term>Longitude</term><description>Double</description></item>
            <item><term>NewTrack</term><description>Boolean</description></item>
            </list>
            <para>
            The 'Time' Property provides a timestamp for the track point. This time
            is expressed as the number of seconds since UTC 24:00 on December 31st, 1989.
            </para>
            <para>
            When true, the 'NewTrack' Property indicates that the track log point marks
            the beginning of a new Tracklog segment.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D301</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>TracklogNumber</term><description>Int16</description></item>
            <item><term>Latitude</term><description>Double</description></item>
            <item><term>Longitude</term><description>Double</description></item>
            <item><term>NewTrack</term><description>Boolean</description></item>
            <item><term>Time</term><description>Int32</description></item>
            <item><term>Altitude</term><description>Single</description></item>
            <item><term>Depth</term><description>Single</description></item>
            </list>
            <para>
            The 'Time' Property provides a timestamp for the track point. This time
            is expressed as the number of seconds since UTC 24:00 on December 31st, 1989.
            </para>
            <para>
            When true, the 'NewTrack' Property indicates that the track log point marks
            the beginning of a new Tracklog segment.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D302</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>TracklogNumber</term><description>Int16</description></item>
            <item><term>Latitude</term><description>Double</description></item>
            <item><term>Longitude</term><description>Double</description></item>
            <item><term>NewTrack</term><description>Boolean</description></item>
            <item><term>Time</term><description>Int32</description></item>
            <item><term>Altitude</term><description>Single</description></item>
            <item><term>Depth</term><description>Single</description></item>
            <item><term>Temperature</term><description>Single</description></item>
            </list>
            <para>
            The 'Time' Property provides a timestamp for the track point. This time
            is expressed as the number of seconds since UTC 24:00 on December 31st, 1989.
            </para>
            <para>
            When true, the 'NewTrack' Property indicates that the track log point marks
            the beginning of a new Tracklog segment.
            </para>
            <para>
            The Temperature property may not be supported by all units. 
            A value of 1.0e25 in this field indicates that this parameter is not supported 
            or is unknown for this track point.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D303</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>TracklogNumber</term><description>Int16</description></item>
            <item><term>Latitude</term><description>Double</description></item>
            <item><term>Longitude</term><description>Double</description></item>
            <item><term>Time</term><description>Int32</description></item>
            <item><term>Altitude</term><description>Single</description></item>
            <item><term>HeartRate</term><description>Int32</description></item>
            </list>
            <para>
            The 'Time' Property provides a timestamp for the track point. This time
            is expressed as the number of seconds since UTC 24:00 on December 31st, 1989.
            </para>
            <para>
            The Temperature property may not be supported by all units. 
            A value of 1.0e25 in this field indicates that this parameter is not supported 
            or is unknown for this track point.
            </para>
            <para>
            The HeartRate is specified in beats per minute and is invalid if its value is 0.
            </para>
            <para>
            The position is invalid if both Latitude and Longitude values equal 0x7FFFFFFF.
            </para>
            <br/><br/>
            <para>
            <b>Protocol D304</b>
            </para>
            <list type="table">
            <listheader><term>Property</term><description>Type</description></listheader>
            <item><term>TracklogNumber</term><description>Int16</description></item>
            <item><term>Latitude</term><description>Double</description></item>
            <item><term>Longitude</term><description>Double</description></item>
            <item><term>Time</term><description>Int32</description></item>
            <item><term>Altitude</term><description>Single</description></item>
            <item><term>Distance</term><description>Single</description></item>
            <item><term>HeartRate</term><description>Int32</description></item>
            <item><term>Cadence</term><description>Int32</description></item>
            <item><term>Sensor</term><description>Boolean</description></item>
            </list>
            <para>
            The 'Time' Property provides a timestamp for the track point. This time
            is expressed as the number of seconds since UTC 24:00 on December 31st, 1989.
            </para>
            <para>
            The Temperature property may not be supported by all units. 
            A value of 1.0e25 in this field indicates that this parameter is not supported 
            or is unknown for this track point.
            </para>
            <para>
            The HeartRate is specified in beats per minute and is invalid if its value is 0.
            </para>
            <para>
            The position is invalid if both Latitude and Longitude values equal 0x7FFFFFFF.
            </para>
            <para>The Distance property is the cumulative distance traveled up to this 
            point in meters as determined by the wheel sensor or from the latitude/longitude 
            whichever is more accurate. If the distance cannot be obtained the property will 
            have a value of 1.0e25.
            </para>
            <para>
            A value of 0xFF for Cadence indicates that it is invalid.
            </para>
            <para>
            Two consecutive Trackpoints with invalid lat/long, altitude, heart rate, 
            distance and cadence indicate a pause in the Trackpoint recording.
            </para>
            </remarks>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Latitude">
            <summary>
            Returns/Sets the Latitude co-ordinate in degrees.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Longitude">
            <summary>
            Returns/Sets the Longtitude co-ordinate in degrees.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.X">
            <summary>
            Returns/Sets the X co-ordinate. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Y">
            <summary>
            Returns/Sets the Y co-ordinate.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.NewTrack">
            <summary>
            Returns/Sets the new track segment.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Time">
            <summary>
            Returns/Sets the time value. This value represents
            the number of seconds since December 31st 1989 and is
            used by some Garmin devices.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Altitude">
            <summary>
            Returns/Sets the Altitude in metres.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Depth">
            <summary>
            Returns/Sets the Depth in metres.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Temperature">
            <summary>
            Returns/Sets the Temperature.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.HeartRate">
            <summary>
            Returns/Sets the Heart rate in beats per minute.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Cadence">
            <summary>
            Returns/Sets the Cadence in revolutions per minute.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Sensor">
            <summary>
            Returns/Sets the Sensor indicating whether a wheel sensor is present.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Distance">
            <summary>
            Returns/Sets the distance traveled in meters.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.FixDateTime">
            <summary>
            Returns/Sets the Fix Date and Time. This property is used by some Magellan Units only.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Trackpoint.Name">
            <summary>
            Returns/Sets the Trackpoint Name. This property is used by some Magellan Units.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Trackpoint.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Trackpoint.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Trackpoint.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Trackpoint.Equals(System.Object,System.Boolean)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value. Passing true
            to the positionOnly parameter will compare the Trackpoint
            in terms of the Latitude and Longitude only.
            </summary>
            <param name="obj"></param>
            <param name="positionOnly"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Trackpoint.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.TrackpointCollection">
            <summary>
            Collection of TrackPoint objects.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.Add(Waymex.Gps.Trackpoint)">
            <summary>
            Allows a Trackpoint Object to be added to the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.TrackpointCollection.Count">
            <summary>
            Returns the number of Trackpoint objects in the collection. 
            </summary>
        </member>
        <member name="P:Waymex.Gps.TrackpointCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the collection by ordinal reference. 
            This Property is the default indexer property in C#.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.ToXml(System.String)">
            <summary>
            Returns an XML representation of the object.
            This overloaded method accepts an xslt filename which can be used to ransform the xml.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.ToDataSet">
            <summary>
            This method returns a System.Data.Dataset populated with the contents of the TrackpointCollection object.
            The dataset includes one table called 'Trackpoints'.
            </summary>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.TrackpointCollection.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.Waypoint">
            <summary>
              This object represents a single Waypoint and forms part of the
              of the WaypointCollection object that is returned by the GetWaypoints
              and GetProximityWaypoints methods of the Device object.
              This object is also returned by the Waypoints Property
              of the Route object.
            </summary>
            <remarks>
              <para>
                When receiving data from the Host, most GPS devices will overwrite any existing
                waypoints with the same name stored in the GPS device. For example, if the Host
                sends a waypoint named CBELLS, most GPS devices will overwrite a waypoint named
                CBELLS that may be stored in GPS memory.
              </para>
              <para>
                However some GPS devices compare the position of the new waypoint with the position
                of the stored waypoint (altitude is ignored). If the positions match, the GPS
                will erase the identically named waypoint and replace it with the new one.
                If the positions differ, the unit will create a new, unique name for the
                incoming waypoint and preserve the existing waypoint under its original name.
              </para>
              <para>
                When the Host requests the GPS to send waypoints, the GPS will send every
                waypoint stored in its database. When the Host sends waypoints to the GPS,
                the Host may selectively transfer any number of waypoints.
              </para>
              <para>
                When the Host requests the GPS to send proximity waypoints, the GPS will send all proximity
                waypoints stored in its database.
              </para>
              <para>
                <b>Symbols</b>
              </para>
              <para>
                Garmin devices use three symbol sets for Waypoint symbols and
                Magellan devices use five symbol sets.
                The set used depends upon the specific device connected.
                The <see cref="P:Waymex.Gps.ProductInfo.SymbolSet">ProductInfo.SymbolSet</see> property returns the symbol set in
                use by a particular device.
                The <see cref="P:Waymex.Gps.Waypoint.SymbolIdentifier">Waypoint.SymbolIdentifier</see> property allows for an enumerated value
                that
                works for all symbols across all devices (including Magellan devices).
                The Waypoint.Symbol property (Int16) returns the raw symbol value of the waypoint
                for garmin devices and the Waypoint.Icon property (String) returns the raw Icon
                value of the waypoint for Magellan devices.
              </para>
              <para>
                When retrieving waypoint data from one device and transferring it to another device,
                care must be taken when using the Symbol or Icon properties. For example the raw
                symbol value for a 'dot' on a garmin device using symbol set 0 is 0 but a dot for
                a device using symbol set 1 is 18. The SymbolIdentifier is a much safer approach.
              </para>
              <para>
                <b>
                  Garmin Symbol Sets
                </b>
              </para>
              <para>
                Many GPS devices are limited to a much smaller subset of these symbols.
                However, the GPS will ignore any disallowed symbol values that are received
                and instead substitute the value for a generic dot symbol.
              </para>
              <para>
                <b>Symbols Set 0</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Raw Value (Symbol property)</term><description>Symbol Description</description>
                </listheader>
                <item>
                  <term>0</term><description>dot</description>
                </item>
                <item>
                  <term>1</term><description>house</description>
                </item>
                <item>
                  <term>2</term><description>gas</description>
                </item>
                <item>
                  <term>3</term><description>car</description>
                </item>
                <item>
                  <term>4</term><description>fish</description>
                </item>
                <item>
                  <term>5</term><description>boat</description>
                </item>
                <item>
                  <term>6</term><description>anchor</description>
                </item>
                <item>
                  <term>7</term><description>wreck</description>
                </item>
                <item>
                  <term>8</term><description>exit</description>
                </item>
                <item>
                  <term>9</term><description>skull</description>
                </item>
                <item>
                  <term>10</term><description>flag</description>
                </item>
                <item>
                  <term>11</term><description>camp</description>
                </item>
                <item>
                  <term>12</term><description>circle with x </description>
                </item>
                <item>
                  <term>13</term><description>deer</description>
                </item>
                <item>
                  <term>14</term><description>first aid</description>
                </item>
                <item>
                  <term>15</term><description>back track</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Symbols Set 1</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Raw Value (Symbol property)</term><description>Symbol Description</description>
                </listheader>
                <item>
                  <term>0</term><description>white anchor symbol</description>
                </item>
                <item>
                  <term>1</term><description>white bell symbol</description>
                </item>
                <item>
                  <term>2</term><description>green diamond symbol</description>
                </item>
                <item>
                  <term>3</term><description>red diamond symbol</description>
                </item>
                <item>
                  <term>4</term><description>diver down flag 1</description>
                </item>
                <item>
                  <term>5</term><description>diver down flag 2</description>
                </item>
                <item>
                  <term>6</term><description>white dollar symbol</description>
                </item>
                <item>
                  <term>7</term><description>white fish symbol</description>
                </item>
                <item>
                  <term>8</term><description>white fuel symbol</description>
                </item>
                <item>
                  <term>9</term><description>white horn symbol</description>
                </item>
                <item>
                  <term>10</term><description>white house symbol</description>
                </item>
                <item>
                  <term>11</term><description>white knife and fork symbol</description>
                </item>
                <item>
                  <term>12</term><description>white light symbol</description>
                </item>
                <item>
                  <term>13</term><description>white mug symbol</description>
                </item>
                <item>
                  <term>14</term><description>white skull and crossbones symbol</description>
                </item>
                <item>
                  <term>15</term><description>green square symbol</description>
                </item>
                <item>
                  <term>16</term><description>red square symbol</description>
                </item>
                <item>
                  <term>17</term><description>white buoy waypoint symbol</description>
                </item>
                <item>
                  <term>18</term><description>waypoint dot</description>
                </item>
                <item>
                  <term>19</term><description>white wreck symbol</description>
                </item>
                <item>
                  <term>20</term><description>null symbol (transparent)</description>
                </item>
                <item>
                  <term>21</term><description>man overboard symbol</description>
                </item>
                <item>
                  <term>22</term><description>amber map buoy symbol</description>
                </item>
                <item>
                  <term>23</term><description>black map buoy symbol</description>
                </item>
                <item>
                  <term>24</term><description>blue map buoy symbol</description>
                </item>
                <item>
                  <term>25</term><description>green map buoy symbol</description>
                </item>
                <item>
                  <term>26</term><description>green/red map buoy symbol</description>
                </item>
                <item>
                  <term>27</term><description>green/white map buoy symbol</description>
                </item>
                <item>
                  <term>28</term><description>orange map buoy symbol</description>
                </item>
                <item>
                  <term>29</term><description>red map buoy symbol</description>
                </item>
                <item>
                  <term>30</term><description>red/green map buoy symbol</description>
                </item>
                <item>
                  <term>31</term><description>red/white map buoy symbol</description>
                </item>
                <item>
                  <term>32</term><description>violet map buoy symbol</description>
                </item>
                <item>
                  <term>33</term><description>white map buoy symbol</description>
                </item>
                <item>
                  <term>34</term><description>white/green map buoy symbol</description>
                </item>
                <item>
                  <term>35</term><description>white/red map buoy symbol</description>
                </item>
                <item>
                  <term>36</term><description>white dot symbol</description>
                </item>
                <item>
                  <term>37</term><description>radio beacon symbol</description>
                </item>
                <item>
                  <term>150</term><description>boat ramp symbol</description>
                </item>
                <item>
                  <term>151</term><description>campground symbol</description>
                </item>
                <item>
                  <term>152</term><description>restrooms symbol</description>
                </item>
                <item>
                  <term>153</term><description>shower symbol</description>
                </item>
                <item>
                  <term>154</term><description>drinking water symbol</description>
                </item>
                <item>
                  <term>155</term><description>telephone symbol</description>
                </item>
                <item>
                  <term>156</term><description>first aid symbol</description>
                </item>
                <item>
                  <term>157</term><description>information symbol</description>
                </item>
                <item>
                  <term>158</term><description>parking symbol</description>
                </item>
                <item>
                  <term>159</term><description>park symbol</description>
                </item>
                <item>
                  <term>160</term><description>picnic symbol</description>
                </item>
                <item>
                  <term>161</term><description>scenic area symbol</description>
                </item>
                <item>
                  <term>162</term><description>skiing symbol</description>
                </item>
                <item>
                  <term>163</term><description>swimming symbol</description>
                </item>
                <item>
                  <term>164</term><description>dam symbol</description>
                </item>
                <item>
                  <term>165</term><description>controlled area symbol</description>
                </item>
                <item>
                  <term>166</term><description>danger symbol</description>
                </item>
                <item>
                  <term>167</term><description>restricted area symbol</description>
                </item>
                <item>
                  <term>168</term><description>null symbol</description>
                </item>
                <item>
                  <term>169</term><description>ball symbol</description>
                </item>
                <item>
                  <term>170</term><description>car symbol</description>
                </item>
                <item>
                  <term>171</term><description>deer symbol</description>
                </item>
                <item>
                  <term>172</term><description>shopping cart symbol</description>
                </item>
                <item>
                  <term>173</term><description>lodging symbol</description>
                </item>
                <item>
                  <term>174</term><description>mine symbol</description>
                </item>
                <item>
                  <term>175</term><description>trail head symbol</description>
                </item>
                <item>
                  <term>176</term><description>truck stop symbol</description>
                </item>
                <item>
                  <term>177</term><description>user exit symbol</description>
                </item>
                <item>
                  <term>178</term><description>flag symbol</description>
                </item>
                <item>
                  <term>179</term><description>circle with x in the center</description>
                </item>
                <item>
                  <term>180</term><description>open 24 hours symbol</description>
                </item>
                <item>
                  <term>181</term><description>U fishing hot spots facility (tm)</description>
                </item>
                <item>
                  <term>182</term><description>bottom conditions</description>
                </item>
                <item>
                  <term>183</term><description>tide/current prediction station</description>
                </item>
                <item>
                  <term>184</term><description>U anchor prohibited symbol</description>
                </item>
                <item>
                  <term>185</term><description>U beacon symbol</description>
                </item>
                <item>
                  <term>186</term><description>U coast guard symbol</description>
                </item>
                <item>
                  <term>187</term><description>U reef symbol</description>
                </item>
                <item>
                  <term>188</term><description>U weedbed symbol</description>
                </item>
                <item>
                  <term>189</term><description>U dropoff symbol</description>
                </item>
                <item>
                  <term>190</term><description>U dock symbol</description>
                </item>
                <item>
                  <term>191</term><description>U marina symbol</description>
                </item>
                <item>
                  <term>192</term><description>U bait and tackle symbol</description>
                </item>
                <item>
                  <term>193</term><description>U stump symbol</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Symbols Set 2</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Raw Value (Symbol property)</term><description>Symbol Description</description>
                </listheader>
                <item>
                  <term>0</term><description>white anchor symbol</description>
                </item>
                <item>
                  <term>1</term><description>white bell symbol</description>
                </item>
                <item>
                  <term>2</term><description>green diamond symbol</description>
                </item>
                <item>
                  <term>3</term><description>red diamond symbol</description>
                </item>
                <item>
                  <term>4</term><description>diver down flag 1</description>
                </item>
                <item>
                  <term>5</term><description>diver down flag 2</description>
                </item>
                <item>
                  <term>6</term><description>white dollar symbol</description>
                </item>
                <item>
                  <term>7</term><description>white fish symbol</description>
                </item>
                <item>
                  <term>8</term><description>white fuel symbol</description>
                </item>
                <item>
                  <term>9</term><description>white horn symbol</description>
                </item>
                <item>
                  <term>10</term><description>white house symbol</description>
                </item>
                <item>
                  <term>11</term><description>white knife and fork symbol</description>
                </item>
                <item>
                  <term>12</term><description>white light symbol</description>
                </item>
                <item>
                  <term>13</term><description>white mug symbol</description>
                </item>
                <item>
                  <term>14</term><description>white skull and crossbones symbol</description>
                </item>
                <item>
                  <term>15</term><description>green square symbol</description>
                </item>
                <item>
                  <term>16</term><description>red square symbol</description>
                </item>
                <item>
                  <term>17</term><description>white buoy waypoint symbol</description>
                </item>
                <item>
                  <term>18</term><description>waypoint dot</description>
                </item>
                <item>
                  <term>19</term><description>white wreck symbol</description>
                </item>
                <item>
                  <term>20</term><description>null symbol (transparent)</description>
                </item>
                <item>
                  <term>21</term><description>man overboard symbol</description>
                </item>
                <item>
                  <term>22</term><description>amber map buoy symbol</description>
                </item>
                <item>
                  <term>23</term><description>black map buoy symbol</description>
                </item>
                <item>
                  <term>24</term><description>blue map buoy symbol</description>
                </item>
                <item>
                  <term>25</term><description>green map buoy symbol</description>
                </item>
                <item>
                  <term>26</term><description>green/red map buoy symbol</description>
                </item>
                <item>
                  <term>27</term><description>green/white map buoy symbol</description>
                </item>
                <item>
                  <term>28</term><description>orange map buoy symbol</description>
                </item>
                <item>
                  <term>29</term><description>red map buoy symbol</description>
                </item>
                <item>
                  <term>30</term><description>red/green map buoy symbol</description>
                </item>
                <item>
                  <term>31</term><description>red/white map buoy symbol</description>
                </item>
                <item>
                  <term>32</term><description>violet map buoy symbol</description>
                </item>
                <item>
                  <term>33</term><description>white map buoy symbol</description>
                </item>
                <item>
                  <term>34</term><description>white/green map buoy symbol</description>
                </item>
                <item>
                  <term>35</term><description>white/red map buoy symbol</description>
                </item>
                <item>
                  <term>36</term><description>white dot symbol</description>
                </item>
                <item>
                  <term>37</term><description>radio beacon symbol</description>
                </item>
                <item>
                  <term>150</term><description>boat ramp symbol</description>
                </item>
                <item>
                  <term>151</term><description>campground symbol</description>
                </item>
                <item>
                  <term>152</term><description>restrooms symbol</description>
                </item>
                <item>
                  <term>153</term><description>shower symbol</description>
                </item>
                <item>
                  <term>154</term><description>drinking water symbol</description>
                </item>
                <item>
                  <term>155</term><description>telephone symbol</description>
                </item>
                <item>
                  <term>156</term><description>first aid symbol</description>
                </item>
                <item>
                  <term>157</term><description>information symbol</description>
                </item>
                <item>
                  <term>158</term><description>parking symbol</description>
                </item>
                <item>
                  <term>159</term><description>park symbol</description>
                </item>
                <item>
                  <term>160</term><description>picnic symbol</description>
                </item>
                <item>
                  <term>161</term><description>scenic area symbol</description>
                </item>
                <item>
                  <term>162</term><description>skiing symbol</description>
                </item>
                <item>
                  <term>163</term><description>swimming symbol</description>
                </item>
                <item>
                  <term>164</term><description>dam symbol</description>
                </item>
                <item>
                  <term>165</term><description>controlled area symbol</description>
                </item>
                <item>
                  <term>166</term><description>danger symbol</description>
                </item>
                <item>
                  <term>167</term><description>restricted area symbol</description>
                </item>
                <item>
                  <term>168</term><description>null symbol</description>
                </item>
                <item>
                  <term>169</term><description>ball symbol</description>
                </item>
                <item>
                  <term>170</term><description>car symbol</description>
                </item>
                <item>
                  <term>171</term><description>deer symbol</description>
                </item>
                <item>
                  <term>172</term><description>shopping cart symbol</description>
                </item>
                <item>
                  <term>173</term><description>lodging symbol</description>
                </item>
                <item>
                  <term>174</term><description>mine symbol</description>
                </item>
                <item>
                  <term>175</term><description>trail head symbol</description>
                </item>
                <item>
                  <term>176</term><description>truck stop symbol</description>
                </item>
                <item>
                  <term>177</term><description>user exit symbol</description>
                </item>
                <item>
                  <term>178</term><description>flag symbol</description>
                </item>
                <item>
                  <term>179</term><description>circle with x in the center</description>
                </item>
                <item>
                  <term>180</term><description>open 24 hours symbol</description>
                </item>
                <item>
                  <term>181</term><description>U fishing hot spots facility (tm)</description>
                </item>
                <item>
                  <term>182</term><description>bottom conditions</description>
                </item>
                <item>
                  <term>183</term><description>tide/current prediction station</description>
                </item>
                <item>
                  <term>184</term><description>U anchor prohibited symbol</description>
                </item>
                <item>
                  <term>185</term><description>U beacon symbol</description>
                </item>
                <item>
                  <term>186</term><description>U coast guard symbol</description>
                </item>
                <item>
                  <term>187</term><description>U reef symbol</description>
                </item>
                <item>
                  <term>188</term><description>U weedbed symbol</description>
                </item>
                <item>
                  <term>189</term><description>U dropoff symbol</description>
                </item>
                <item>
                  <term>190</term><description>U dock symbol</description>
                </item>
                <item>
                  <term>191</term><description>U marina symbol</description>
                </item>
                <item>
                  <term>192</term><description>U bait and tackle symbol</description>
                </item>
                <item>
                  <term>193</term><description>U stump symbol</description>
                </item>
                <item>
                  <term>7680</term><description>first user customisable symbol</description>
                </item>
                <item>
                  <term>8191</term><description>last user customisable symbol</description>
                </item>
                <item>
                  <term>8192</term><description>interstate hwy symbol</description>
                </item>
                <item>
                  <term>8193</term><description>us hwy symbol</description>
                </item>
                <item>
                  <term>8194</term><description>state hwy symbol</description>
                </item>
                <item>
                  <term>8195</term><description>mile marker symbol</description>
                </item>
                <item>
                  <term>8196</term><description>TracBack (feet) symbol</description>
                </item>
                <item>
                  <term>8197</term><description>golf symbol</description>
                </item>
                <item>
                  <term>8198</term><description>small city symbol</description>
                </item>
                <item>
                  <term>8199</term><description>medium city symbol</description>
                </item>
                <item>
                  <term>8200</term><description>large city symbol</description>
                </item>
                <item>
                  <term>8201</term><description>intl freeway hwy symbol</description>
                </item>
                <item>
                  <term>8202</term><description>intl national hwy symbol</description>
                </item>
                <item>
                  <term>8203</term><description>capitol city symbol (star)</description>
                </item>
                <item>
                  <term>8204</term><description>amusement park symbol</description>
                </item>
                <item>
                  <term>8205</term><description>bowling symbol</description>
                </item>
                <item>
                  <term>8206</term><description>car rental symbol</description>
                </item>
                <item>
                  <term>8207</term><description>car repair symbol</description>
                </item>
                <item>
                  <term>8208</term><description>fast food symbol</description>
                </item>
                <item>
                  <term>8209</term><description>fitness symbol</description>
                </item>
                <item>
                  <term>8210</term><description>movie symbol</description>
                </item>
                <item>
                  <term>8211</term><description>museum symbol</description>
                </item>
                <item>
                  <term>8212</term><description>pharmacy symbol</description>
                </item>
                <item>
                  <term>8213</term><description>pizza symbol</description>
                </item>
                <item>
                  <term>8214</term><description>post office symbol</description>
                </item>
                <item>
                  <term>8215</term><description>RV park symbol</description>
                </item>
                <item>
                  <term>8216</term><description>school symbol</description>
                </item>
                <item>
                  <term>8217</term><description>stadium symbol</description>
                </item>
                <item>
                  <term>8218</term><description>dept. store symbol</description>
                </item>
                <item>
                  <term>8219</term><description>zoo symbol</description>
                </item>
                <item>
                  <term>8220</term><description>convenience store symbol</description>
                </item>
                <item>
                  <term>8221</term><description>live  heatre symbol</description>
                </item>
                <item>
                  <term>8222</term><description>ramp intersection symbol</description>
                </item>
                <item>
                  <term>8223</term><description>street intersection symbol</description>
                </item>
                <item>
                  <term>8226</term><description>inspection/weigh station symbol</description>
                </item>
                <item>
                  <term>8227</term><description>toll booth symbol</description>
                </item>
                <item>
                  <term>8228</term><description>elevation point symbol</description>
                </item>
                <item>
                  <term>8229</term><description>exit without services symbol</description>
                </item>
                <item>
                  <term>8230</term><description>Geographic place name</description>
                </item>
                <item>
                  <term>8231</term><description>Geographic place name</description>
                </item>
                <item>
                  <term>8232</term><description>Geographic place name</description>
                </item>
                <item>
                  <term>8233</term><description>bridge symbol</description>
                </item>
                <item>
                  <term>8234</term><description>building symbol</description>
                </item>
                <item>
                  <term>8235</term><description>cemetery symbol</description>
                </item>
                <item>
                  <term>8236</term><description>church symbol</description>
                </item>
                <item>
                  <term>8237</term><description>civil location symbol</description>
                </item>
                <item>
                  <term>8238</term><description>crossing symbol</description>
                </item>
                <item>
                  <term>8239</term><description>historical town symbol</description>
                </item>
                <item>
                  <term>8240</term><description>levee symbol</description>
                </item>
                <item>
                  <term>8241</term><description>military location symbol</description>
                </item>
                <item>
                  <term>8242</term><description>oil field symbol</description>
                </item>
                <item>
                  <term>8243</term><description>tunnel symbol</description>
                </item>
                <item>
                  <term>8244</term><description>beach symbol</description>
                </item>
                <item>
                  <term>8245</term><description>forest symbol</description>
                </item>
                <item>
                  <term>8246</term><description>summit symbol</description>
                </item>
                <item>
                  <term>8247</term><description>large ramp intersection symbol</description>
                </item>
                <item>
                  <term>8248</term><description>large exit without services smbl</description>
                </item>
                <item>
                  <term>8249</term><description>police/official badge symbol</description>
                </item>
                <item>
                  <term>8250</term><description>gambling/casino symbol</description>
                </item>
                <item>
                  <term>8251</term><description>snow skiing symbol</description>
                </item>
                <item>
                  <term>8252</term><description>ice skating symbol</description>
                </item>
                <item>
                  <term>8253</term><description>tow truck (wrecker) symbol</description>
                </item>
                <item>
                  <term>8254</term><description>border crossing (port of entry)</description>
                </item>
                <item>
                  <term>8255</term><description>goecache location symbol</description>
                </item>
                <item>
                  <term>8256</term><description>found geocache symbol</description>
                </item>
                <item>
                  <term>8257</term><description>Rhino contact symbol, "smiley"</description>
                </item>
                <item>
                  <term>8258</term><description>Rhino contact symbol, "ball cap"</description>
                </item>
                <item>
                  <term>8259</term><description>Rhino contact symbol, "big ear"</description>
                </item>
                <item>
                  <term>8260</term><description>Rhino contact symbol, "spike"</description>
                </item>
                <item>
                  <term>8261</term><description>Rhino contact symbol, "goatee"</description>
                </item>
                <item>
                  <term>8262</term><description>Rhino contact symbol, "afro"</description>
                </item>
                <item>
                  <term>8263</term><description>Rhino contact symbol, "dreads"</description>
                </item>
                <item>
                  <term>8264</term><description>Rhino contact symbol, "female 1"</description>
                </item>
                <item>
                  <term>8265</term><description>Rhino contact symbol, "female 2" </description>
                </item>
                <item>
                  <term>8266</term><description>Rhino contact symbol, "female 3" </description>
                </item>
                <item>
                  <term>8267</term><description>Rhino contact symbol, "ranger"</description>
                </item>
                <item>
                  <term>8268</term><description>Rhino contact symbol, "kung fu"</description>
                </item>
                <item>
                  <term>8269</term><description>Rhino contact symbol, "sumo"</description>
                </item>
                <item>
                  <term>8270</term><description>Rhino contact symbol, "pirate"</description>
                </item>
                <item>
                  <term>8271</term><description>Rhino contact symbol, "biker"</description>
                </item>
                <item>
                  <term>8272</term><description>Rhino contact symbol, "alien"</description>
                </item>
                <item>
                  <term>8273</term><description>Rhino contact symbol, "bug"</description>
                </item>
                <item>
                  <term>8274</term><description>Rhino contact symbol, "cat"</description>
                </item>
                <item>
                  <term>8275</term><description>Rhino contact symbol, "dog"</description>
                </item>
                <item>
                  <term>8276</term><description>Rhino contact symbol, "pig"</description>
                </item>
                <item>
                  <term>8282</term><description>water hydrant symbol</description>
                </item>
                <item>
                  <term>8284</term><description>blue flag symbol</description>
                </item>
                <item>
                  <term>8285</term><description>green flag symbol</description>
                </item>
                <item>
                  <term>8286</term><description>red flag symbol</description>
                </item>
                <item>
                  <term>8287</term><description>blue pin symbol</description>
                </item>
                <item>
                  <term>8288</term><description>green pin symbol</description>
                </item>
                <item>
                  <term>8289</term><description>red pin symbol</description>
                </item>
                <item>
                  <term>8290</term><description>blue block symbol</description>
                </item>
                <item>
                  <term>8291</term><description>green block symbol</description>
                </item>
                <item>
                  <term>8292</term><description>red block symbol</description>
                </item>
                <item>
                  <term>8293</term><description>bike trail symbol</description>
                </item>
                <item>
                  <term>8294</term><description>red circle symbol</description>
                </item>
                <item>
                  <term>8295</term><description>green circle symbol</description>
                </item>
                <item>
                  <term>8296</term><description>blue circle symbol</description>
                </item>
                <item>
                  <term>8299</term><description>blue diamond symbol</description>
                </item>
                <item>
                  <term>8300</term><description>red oval symbol</description>
                </item>
                <item>
                  <term>8301</term><description>green oval symbol</description>
                </item>
                <item>
                  <term>8302</term><description>blue oval symbol</description>
                </item>
                <item>
                  <term>8303</term><description>red rectangle symbol</description>
                </item>
                <item>
                  <term>8304</term><description>green rectangle symbol</description>
                </item>
                <item>
                  <term>8305</term><description>blue oval symbol</description>
                </item>
                <item>
                  <term>8308</term><description>blue square symbol</description>
                </item>
                <item>
                  <term>8309</term><description>red letter "A"</description>
                </item>
                <item>
                  <term>8310</term><description>red letter "B"</description>
                </item>
                <item>
                  <term>8311</term><description>red letter "C"</description>
                </item>
                <item>
                  <term>8312</term><description>red letter "D"</description>
                </item>
                <item>
                  <term>8313</term><description>green letter "A"</description>
                </item>
                <item>
                  <term>8314</term><description>green letter "B"</description>
                </item>
                <item>
                  <term>8315</term><description>green letter "C"</description>
                </item>
                <item>
                  <term>8316</term><description>green letter "D"</description>
                </item>
                <item>
                  <term>8317</term><description>blue letter "A"</description>
                </item>
                <item>
                  <term>8318</term><description>blue letter "B"</description>
                </item>
                <item>
                  <term>8319</term><description>blue letter "C"</description>
                </item>
                <item>
                  <term>8320</term><description>blue letter "D"</description>
                </item>
                <item>
                  <term>8321</term><description>red number "0"</description>
                </item>
                <item>
                  <term>8322</term><description>red number "1"</description>
                </item>
                <item>
                  <term>8323</term><description>red number "2"</description>
                </item>
                <item>
                  <term>8324</term><description>red number "3"</description>
                </item>
                <item>
                  <term>8325</term><description>red number "4"</description>
                </item>
                <item>
                  <term>8326</term><description>red number "5"</description>
                </item>
                <item>
                  <term>8327</term><description>red number "6"</description>
                </item>
                <item>
                  <term>8328</term><description>red number "7"</description>
                </item>
                <item>
                  <term>8329</term><description>red number "8"</description>
                </item>
                <item>
                  <term>8330</term><description>red number "9"</description>
                </item>
                <item>
                  <term>8331</term><description>green number "0"</description>
                </item>
                <item>
                  <term>8332</term><description>green number "1"</description>
                </item>
                <item>
                  <term>8333</term><description>green number "2"</description>
                </item>
                <item>
                  <term>8334</term><description>green number "3"</description>
                </item>
                <item>
                  <term>8335</term><description>green number "4"</description>
                </item>
                <item>
                  <term>8336</term><description>green number "5"</description>
                </item>
                <item>
                  <term>8337</term><description>green number "6"</description>
                </item>
                <item>
                  <term>8338</term><description>green number "7"</description>
                </item>
                <item>
                  <term>8339</term><description>green number "8"</description>
                </item>
                <item>
                  <term>8340</term><description>green number "9"</description>
                </item>
                <item>
                  <term>8341</term><description>blue number "0"</description>
                </item>
                <item>
                  <term>8342</term><description>blue number "1"</description>
                </item>
                <item>
                  <term>8343</term><description>blue number "2"</description>
                </item>
                <item>
                  <term>8344</term><description>blue number "3"</description>
                </item>
                <item>
                  <term>8345</term><description>blue number "4"</description>
                </item>
                <item>
                  <term>8346</term><description>blue number "5"</description>
                </item>
                <item>
                  <term>8347</term><description>blue number "6"</description>
                </item>
                <item>
                  <term>8348</term><description>blue number "7"</description>
                </item>
                <item>
                  <term>8349</term><description>blue number "8"</description>
                </item>
                <item>
                  <term>8350</term><description>blue number "9"</description>
                </item>
                <item>
                  <term>8351</term><description>blue triangle symbol</description>
                </item>
                <item>
                  <term>8352</term><description>green triangle symbol</description>
                </item>
                <item>
                  <term>8353</term><description>red triangle symbol</description>
                </item>
                <item>
                  <term>8359</term><description>asian food symbol</description>
                </item>
                <item>
                  <term>8360</term><description>deli symbol</description>
                </item>
                <item>
                  <term>8361</term><description>italian food symbol</description>
                </item>
                <item>
                  <term>8362</term><description>seafood symbol</description>
                </item>
                <item>
                  <term>8363</term><description>steak symbol</description>
                </item>
                <item>
                  <term>16384</term><description>airport symbol</description>
                </item>
                <item>
                  <term>16385</term><description>intersection symbol</description>
                </item>
                <item>
                  <term>16386</term><description>non-directional beacon symbol</description>
                </item>
                <item>
                  <term>16387</term><description>VHF omni-range symbol</description>
                </item>
                <item>
                  <term>16388</term><description>heliport symbol</description>
                </item>
                <item>
                  <term>16389</term><description>private field symbol</description>
                </item>
                <item>
                  <term>16390</term><description>soft field symbol</description>
                </item>
                <item>
                  <term>16391</term><description>tall tower symbol</description>
                </item>
                <item>
                  <term>16392</term><description>short tower symbol</description>
                </item>
                <item>
                  <term>16393</term><description>glider symbol</description>
                </item>
                <item>
                  <term>16394</term><description>ultralight symbol</description>
                </item>
                <item>
                  <term>16395</term><description>parachute symbol</description>
                </item>
                <item>
                  <term>16396</term><description>VOR/TACAN symbol</description>
                </item>
                <item>
                  <term>16397</term><description>VOR-DME symbol</description>
                </item>
                <item>
                  <term>16398</term><description>first approach fix</description>
                </item>
                <item>
                  <term>16399</term><description>localizer outer marker</description>
                </item>
                <item>
                  <term>16400</term><description>missed approach point</description>
                </item>
                <item>
                  <term>16401</term><description>TACAN symbol</description>
                </item>
                <item>
                  <term>16402</term><description>Seaplane Base</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>
                  Magellan Symbol Sets (Product Id is shown in brackets)
                </b>
              </para>
              <para>
                This tables below show which Magellan Icons the lowercase identifiers translate to for a specific device,
                the product ID, as returned by MagellaDevice.GetProductInfo.ProductId, is shown in brackets:
              </para>
              <para>
                <b>Symbols Set 0</b>
              </para>
              <para>
                <b>Colortrak (19), Tracker (23), GPS 315/320 (24), MAP 410 (25) and Sportrak (37):</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Raw Value (Icon property)</term><description>Symbol Description</description>
                </listheader>
                <item>
                  <term>a</term><description>filled circle</description>
                </item>
                <item>
                  <term>b</term><description>box</description>
                </item>
                <item>
                  <term>c</term><description>red buoy</description>
                </item>
                <item>
                  <term>d</term><description>green buoy</description>
                </item>
                <item>
                  <term>e</term><description>anchor</description>
                </item>
                <item>
                  <term>f</term><description>rocks</description>
                </item>
                <item>
                  <term>g</term><description>green daymark</description>
                </item>
                <item>
                  <term>h</term><description>red daymark</description>
                </item>
                <item>
                  <term>i</term><description>bell</description>
                </item>
                <item>
                  <term>j</term><description>danger</description>
                </item>
                <item>
                  <term>k</term><description>diver down</description>
                </item>
                <item>
                  <term>l</term><description>fish</description>
                </item>
                <item>
                  <term>m</term><description>house</description>
                </item>
                <item>
                  <term>n</term><description>mark</description>
                </item>
                <item>
                  <term>o</term><description>car</description>
                </item>
                <item>
                  <term>p</term><description>tent</description>
                </item>
                <item>
                  <term>q</term><description>boat</description>
                </item>
                <item>
                  <term>r</term><description>food</description>
                </item>
                <item>
                  <term>s</term><description>fuel</description>
                </item>
                <item>
                  <term>t</term><description>tree</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Symbols Set 1</b>
              </para>
              <para>
                <b>NAV 6000 (18):</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Raw Value (Icon property)</term><description>Symbol Description</description>
                </listheader>
                <item>
                  <term>a</term><description>filled circle</description>
                </item>
                <item>
                  <term>b</term><description>fish</description>
                </item>
                <item>
                  <term>c</term><description>buoy</description>
                </item>
                <item>
                  <term>d</term><description>light</description>
                </item>
                <item>
                  <term>e</term><description>anchor</description>
                </item>
                <item>
                  <term>f</term><description>flag</description>
                </item>
                <item>
                  <term>g</term><description>red daymark</description>
                </item>
                <item>
                  <term>h</term><description>green daymark</description>
                </item>
                <item>
                  <term>i</term><description>wreck</description>
                </item>
                <item>
                  <term>j</term><description>house</description>
                </item>
                <item>
                  <term>k</term><description>boat</description>
                </item>
                <item>
                  <term>l</term><description>fuel</description>
                </item>
                <item>
                  <term>m</term><description>danger</description>
                </item>
                <item>
                  <term>n</term><description>diver down</description>
                </item>
                <item>
                  <term>o</term><description>food</description>
                </item>
                <item>
                  <term>p</term><description>w</description>
                </item>
                <item>
                  <term>q</term><description>l</description>
                </item>
                <item>
                  <term>r</term><description>r</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Symbols Set 2</b>
              </para>
              <para>
                <b>Meridian XL (5):</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Raw Value (Icon property)</term><description>Symbol Description</description>
                </listheader>
                <item>
                  <term>a</term><description>filled circle</description>
                </item>
                <item>
                  <term>b</term><description>flag right</description>
                </item>
                <item>
                  <term>c</term><description>flag left</description>
                </item>
                <item>
                  <term>d</term><description>diamond</description>
                </item>
                <item>
                  <term>e</term><description>square</description>
                </item>
                <item>
                  <term>f</term><description>filled square</description>
                </item>
                <item>
                  <term>g</term><description>anchor</description>
                </item>
                <item>
                  <term>h</term><description>banner</description>
                </item>
                <item>
                  <term>i</term><description>fish</description>
                </item>
                <item>
                  <term>j</term><description>crosshair</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Symbols Set 3</b>
              </para>
              <para>
                <b>Trailblazer XL (7):</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Raw Value (Icon property)</term><description>Symbol Description</description>
                </listheader>
                <item>
                  <term>a</term><description>filled circle</description>
                </item>
                <item>
                  <term>b</term><description>flag right</description>
                </item>
                <item>
                  <term>c</term><description>flag left</description>
                </item>
                <item>
                  <term>d</term><description>diamond</description>
                </item>
                <item>
                  <term>e</term><description>square</description>
                </item>
                <item>
                  <term>f</term><description>filled square</description>
                </item>
                <item>
                  <term>g</term><description>anchor</description>
                </item>
                <item>
                  <term>h</term><description>banner</description>
                </item>
                <item>
                  <term>i</term><description>fish</description>
                </item>
                <item>
                  <term>j</term><description>crosshair</description>
                </item>
                <item>
                  <term>k</term><description>car</description>
                </item>
                <item>
                  <term>l</term><description>house</description>
                </item>
                <item>
                  <term>m</term><description>wine glass</description>
                </item>
                <item>
                  <term>n</term><description>mountain</description>
                </item>
                <item>
                  <term>o</term><description>sign</description>
                </item>
                <item>
                  <term>p</term><description>tree</description>
                </item>
                <item>
                  <term>q</term><description>water</description>
                </item>
                <item>
                  <term>r</term><description>airplane</description>
                </item>
                <item>
                  <term>s</term><description>deer’s head</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Symbols Set 4</b>
              </para>
              <para>
                <b>MAP 330 (30), ProMark 2 (35), Meridian New (33), Sportrak Map/Pro (36):</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Raw Value (Icon property)</term><description>Symbol Description</description>
                </listheader>
                <item>
                  <term>a</term><description>crossed square</description>
                </item>
                <item>
                  <term>b</term><description>box</description>
                </item>
                <item>
                  <term>c</term><description>house</description>
                </item>
                <item>
                  <term>d</term><description>aerial</description>
                </item>
                <item>
                  <term>e</term><description>airport</description>
                </item>
                <item>
                  <term>f</term><description>amusement park</description>
                </item>
                <item>
                  <term>g</term><description>ATM</description>
                </item>
                <item>
                  <term>h</term><description>auto repair</description>
                </item>
                <item>
                  <term>i</term><description>boating</description>
                </item>
                <item>
                  <term>j</term><description>camping</description>
                </item>
                <item>
                  <term>k</term><description>exit ramp</description>
                </item>
                <item>
                  <term>l</term><description>first aid</description>
                </item>
                <item>
                  <term>m</term><description>nav aid</description>
                </item>
                <item>
                  <term>n</term><description>buoy</description>
                </item>
                <item>
                  <term>o</term><description>fuel</description>
                </item>
                <item>
                  <term>p</term><description>garden</description>
                </item>
                <item>
                  <term>q</term><description>golf</description>
                </item>
                <item>
                  <term>r</term><description>hotel</description>
                </item>
                <item>
                  <term>s</term><description>hunting/fishing</description>
                </item>
                <item>
                  <term>t</term><description>large city</description>
                </item>
                <item>
                  <term>u</term><description>lighthouse</description>
                </item>
                <item>
                  <term>v</term><description>major city</description>
                </item>
                <item>
                  <term>w</term><description>marina</description>
                </item>
                <item>
                  <term>x</term><description>medium city</description>
                </item>
                <item>
                  <term>y</term><description>museum</description>
                </item>
                <item>
                  <term>z</term><description>obstruction</description>
                </item>
                <item>
                  <term>aa</term><description>park</description>
                </item>
                <item>
                  <term>ab</term><description>resort</description>
                </item>
                <item>
                  <term>ac</term><description>restaurant</description>
                </item>
                <item>
                  <term>ad</term><description>rock</description>
                </item>
                <item>
                  <term>ae</term><description>scuba</description>
                </item>
                <item>
                  <term>af</term><description>RV service</description>
                </item>
                <item>
                  <term>ag</term><description>shooting</description>
                </item>
                <item>
                  <term>ah</term><description>sight seeing</description>
                </item>
                <item>
                  <term>ai</term><description>small city</description>
                </item>
                <item>
                  <term>aj</term><description>sounding</description>
                </item>
                <item>
                  <term>ak</term><description>sports arena</description>
                </item>
                <item>
                  <term>al</term><description>tourist info</description>
                </item>
                <item>
                  <term>am</term><description>truck service</description>
                </item>
                <item>
                  <term>an</term><description>winery</description>
                </item>
                <item>
                  <term>ao</term><description>wreck</description>
                </item>
                <item>
                  <term>ap</term><description>zoo</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Magellan Devices</b>
              </para>
              <para>
                The following Properties are normally used by the Magellan devices.
                However when Waypoints form part of a route some may not be.
              </para>
              <list type="table">
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Icon</term><description>String</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Garmin Devices</b>
              </para>
              <para>
                In most cases not all of the Properties of the Waypoint object are used. The Properties
                actually used are determined by the protocol employed by the connected GPS Device.
                Below is a list of which Properties are supported by Protocol. Please note that even though a
                Property is identified as being supported does not mean that it will actually be used/populated.
              </para>
              <br /><br />
              <para>
                <b>Protocol D100</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Protocol D101</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
              </list>
              <para>
                The 'ProximityDistance' Property is valid only during Proximity Waypoint transfer.
              </para>
              <br /><br />
              <para>
                <b>Protocol D102</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
              </list>
              <para>
                The 'ProximityDistance' Property is valid only during Proximity Waypoint transfer.
              </para>
              <br /><br />
              <para>
                <b>Protocol D103</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>Display</term><description>Int16</description>
                </item>
              </list>
              <para>
                The values for the 'Display' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Display symbol with waypoint name</description>
                </item>
                <item>
                  <term>1</term><description>Display symbol by itself</description>
                </item>
                <item>
                  <term>2</term><description>Display symbol with comment</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Protocol D104</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term>
                  <description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>Display</term><description>Int16</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
              </list>
              <para>
                The values for the 'Display' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Display no symbol</description>
                </item>
                <item>
                  <term>1</term><description>Display symbol by itself</description>
                </item>
                <item>
                  <term>2</term><description>Display symbol with waypoint name</description>
                </item>
                <item>
                  <term>2</term><description>Display symbol with comment</description>
                </item>
              </list>
              <para>
                The 'ProximityDistance' Property is valid only during Proximity Waypoint transfer.
              </para>
              <br /><br />
              <para>
                <b>Protocol D105</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Protocol D106</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>Subclass</term><description>String</description>
                </item>
                <item>
                  <term>Link</term><description>String</description>
                </item>
              </list>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>Zero</term><description>Indicates a user waypoint (Subclass is ignored)</description>
                </item>
                <item>
                  <term>Non-Zero</term><description>Indicates a non-user waypoint (Subclass must be valid)</description>
                </item>
                <item>
                  <term>2</term><description>Display symbol with comment</description>
                </item>
              </list>
              <br /><br />
              <para>
                For non-user waypoints (such as a city in the GPS map database), the GPS will provide a
                non-zero value in the 'Class' Property, and the 'Subclass' member will contain valid data to
                further identify the non-user waypoint. If the Host wishes to transfer this waypoint back to the
                GPS (as part of a route), the Host must leave the 'Class' and 'Subclass' Properties
                unmodified.
              </para>
              <para>
                For user waypoints, the Host must ensure that the 'Class' Property is zero (default value), the
                'Subclass' Property will be ignored.
              </para>
              <para>
                The 'Link' Property provides a string that indicates the name of the path from the previous
                waypoint in the route to this one. An empty string indicates that no particular path is specified.
              </para>
              <br /><br />
              <para>
                <b>Protocol D107</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>Colour</term><description>int</description>
                </item>
                <item>
                  <term>Display</term><description>Int16</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
              </list>
              <para>
                The values for the 'Display' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Display symbol with waypoint name</description>
                </item>
                <item>
                  <term>1</term><description>Display symbol by itself</description>
                </item>
                <item>
                  <term>2</term><description>Display symbol with comment</description>
                </item>
              </list>
              <para>
                The values for the 'Colour' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Symbol</description>
                </listheader>
                <item>
                  <term>0</term><description>Default waypoint colour</description>
                </item>
                <item>
                  <term>1</term><description>Red</description>
                </item>
                <item>
                  <term>2</term><description>Green</description>
                </item>
                <item>
                  <term>3</term><description>Blue</description>
                </item>
              </list>
              <br /><br />
              <para>
                <b>Protocol D108</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>Colour</term><description>int</description>
                </item>
                <item>
                  <term>Display</term><description>Int16</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Depth</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>Subclass</term><description>String</description>
                </item>
                <item>
                  <term>Attributes</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Address</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
                <item>
                  <term>Crossroad</term><description>String</description>
                </item>
              </list>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0x00</term><description>User Waypoint</description>
                </item>
                <item>
                  <term>0x40</term><description>Aviation Airport Waypoint</description>
                </item>
                <item>
                  <term>0x41</term><description>Aviation Intersection Waypoint</description>
                </item>
                <item>
                  <term>0x42</term><description>Aviation NDB Waypoint</description>
                </item>
                <item>
                  <term>0x43</term><description>Aviation VOR Waypoint</description>
                </item>
                <item>
                  <term>0x44</term><description>Aviation Airport Runway Waypoint</description>
                </item>
                <item>
                  <term>0x45</term><description>Aviation Airport Intersection Waypoint</description>
                </item>
                <item>
                  <term>0x46</term><description>Aviation Airport NDB Waypoint</description>
                </item>
                <item>
                  <term>0x80</term><description>Map Point Waypoint</description>
                </item>
                <item>
                  <term>0x81</term><description>Map Area Waypoint</description>
                </item>
                <item>
                  <term>0x82</term><description>Map Intersection Waypoint</description>
                </item>
                <item>
                  <term>0x83</term><description>Map Address Waypoint</description>
                </item>
                <item>
                  <term>0x84</term><description>Map Line Waypoint</description>
                </item>
              </list>
              <para>
                The values for the 'Colour' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Symbol</description>
                </listheader>
                <item>
                  <term>0x00</term><description>Black</description>
                </item>
                <item>
                  <term>0x01</term><description>Dark Red</description>
                </item>
                <item>
                  <term>0x02</term><description>Dark Green</description>
                </item>
                <item>
                  <term>0x03</term><description>Dark Yellow</description>
                </item>
                <item>
                  <term>0x04</term><description>Dark Blue</description>
                </item>
                <item>
                  <term>0x05</term><description>Dark Magenta</description>
                </item>
                <item>
                  <term>0x06</term><description>Dark Cyan</description>
                </item>
                <item>
                  <term>0x07</term><description>Light Grey</description>
                </item>
                <item>
                  <term>0x08</term><description>Dark Grey</description>
                </item>
                <item>
                  <term>0x09</term><description>Red</description>
                </item>
                <item>
                  <term>0x0A</term><description>Green</description>
                </item>
                <item>
                  <term>0x0B</term><description>Yellow</description>
                </item>
                <item>
                  <term>0x0C</term><description>Blue</description>
                </item>
                <item>
                  <term>0x0D</term><description>Magenta</description>
                </item>
                <item>
                  <term>0x0E</term><description>Cyan</description>
                </item>
                <item>
                  <term>0x0F</term><description>White</description>
                </item>
                <item>
                  <term>0xFF</term><description>Default colour</description>
                </item>
              </list>
              <para>
                The values for the 'Display' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Display symbol with waypoint name</description>
                </item>
                <item>
                  <term>1</term><description>Display symbol by itself</description>
                </item>
                <item>
                  <term>2</term><description>Display symbol with comment</description>
                </item>
              </list>
              <para>
                The 'Attributes' Property should be set to a value of 0x60. This is the default setting for this
                Property on versions after 2.30 and does not need to
                be explicitly set.
              </para>
              <para>
                The 'Sub Class' Property is used for map waypoints only, and should be set to "00 00 00 00
                00 00 FF FF FF FF FF FF FF FF FF FF FF FF" for other classes of waypoints.
              </para>
              <para>
                The 'Altitude' and 'Depth' Properties may or may not be supported on a given unit. A value of
                1.0e25 in either of these Properties indicates that this parameter is not supported or is
                unknown for this waypoint.
              </para>
              <para>
                The 'ProximityDistance' Property is used during Proximity Waypoint transfer, and should be
                set to zero in all other cases.
              </para>
              <para>
                The 'Comment' Property is used for user waypoints only, and should be an empty string for
                other waypoint classes.
              </para>
              <para>
                The 'Facility' and 'City' Properties are used only for aviation waypoints, and should be empty
                strings for other waypoint classes.
              </para>
              <para>
                The 'Address' Property is only valid for 'Map Address Waypoint' class waypoints and should
                be an empty string for other waypoint classes.
              </para>
              <para>
                The 'Crossroad' member is valid only for 'Map Intersection Waypoint' class waypoints, and
                should be an empty string for other waypoint classes.
              </para>
              <br /><br />
              <para>
                <b>Protocol D109</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>Colour</term><description>int</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Depth</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>Subclass</term><description>String</description>
                </item>
                <item>
                  <term>Attributes</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Address</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
                <item>
                  <term>Crossroad</term><description>String</description>
                </item>
                <item>
                  <term>PacketType</term><description>Int16</description>
                </item>
                <item>
                  <term>TimeENRoute</term><description>int</description>
                </item>
              </list>
              <para>
                All fields are defined the same as D108 except as noted below.
              </para>
              <para>
                The 'PacketType' Property, must be set to 0x01.
              </para>
              <para>
                The 'Colour' Property contains three fields; bits 0-4 specify the colour, bits 5-6 specify the
                waypoint display attribute and bit 7 is unused and must be 0. Colour values are as specified
                for D108 except that the default value is 0x1f.
              </para>
              <para>
                The 'Attribute' Property must be set to 0x70 for D109. This is the default setting for this
                Property on versions after 2.30 and does not need to
                be explicitly set.
              </para>
              <para>
                The 'TimeENRoute' is the estimated time in seconds to the next waypoint the default value is
                0xFFFFFFFF.
              </para>
              <br /><br />
              <para>
                <b>Protocol D110</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>Colour</term><description>int</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Depth</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>Subclass</term><description>String</description>
                </item>
                <item>
                  <term>Attributes</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Address</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
                <item>
                  <term>Crossroad</term><description>String</description>
                </item>
                <item>
                  <term>PacketType</term><description>Int16</description>
                </item>
                <item>
                  <term>TimeENRoute</term><description>int</description>
                </item>
                <item>
                  <term>Temperature</term><description>Single</description>
                </item>
                <item>
                  <term>Timestamp</term><description>int</description>
                </item>
                <item>
                  <term>Category</term><description>Int16</description>
                </item>
              </list>
              <para>
                All fields are defined the same as D109 except as noted below.
              </para>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0x00</term><description>User Waypoint</description>
                </item>
                <item>
                  <term>0x40</term><description>Aviation Airport Waypoint</description>
                </item>
                <item>
                  <term>0x41</term><description>Aviation Intersection Waypoint</description>
                </item>
                <item>
                  <term>0x42</term><description>Aviation NDB Waypoint</description>
                </item>
                <item>
                  <term>0x43</term><description>Aviation VOR Waypoint</description>
                </item>
                <item>
                  <term>0x44</term><description>Aviation Airport Runway Waypoint</description>
                </item>
                <item>
                  <term>0x45</term><description>Aviation Airport Intersection Waypoint</description>
                </item>
                <item>
                  <term>0x46</term><description>Aviation Airport NDB Waypoint</description>
                </item>
                <item>
                  <term>0x80</term><description>Map Point Waypoint</description>
                </item>
                <item>
                  <term>0x81</term><description>Map Area Waypoint</description>
                </item>
                <item>
                  <term>0x82</term><description>Map Intersection Waypoint</description>
                </item>
                <item>
                  <term>0x83</term><description>Map Address Waypoint</description>
                </item>
                <item>
                  <term>0x84</term><description>Map Line Waypoint</description>
                </item>
              </list>
              <para>
                The 'Category' Property may not be supported by all units, the default value is 0.
              </para>
              <para>
                The Temperature Property may not be supported by all units. A value of 1.0e25 in this
                field indicates that this parameter is not supported or is unknown for this waypoint.
              </para>
              <para>
                The Timestamp Property may not be supported by all units. A value of 0xFFFFFFFF in this
                field indicates that this parameter is not supported or is unknown for this waypoint.
              </para>
              <para>
                The 'Attribute' Property must be set to 0x80. This is the default setting for this
                Property and does not need to be explicitly set.
              </para>
              <para>
                The Colour Property contains three fields; bits 0-4 specify the color, bits 5-6 specify
                the waypoint display attribute and bit 7 is unused and must be 0. Valid color values are
                specified below. If an invalid color value is received, the value will be Black.
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Symbol</description>
                </listheader>
                <item>
                  <term>0x00</term><description>Black</description>
                </item>
                <item>
                  <term>0x01</term><description>Dark Red</description>
                </item>
                <item>
                  <term>0x02</term><description>Dark Green</description>
                </item>
                <item>
                  <term>0x03</term><description>Dark Yellow</description>
                </item>
                <item>
                  <term>0x04</term><description>Dark Blue</description>
                </item>
                <item>
                  <term>0x05</term><description>Dark Magenta</description>
                </item>
                <item>
                  <term>0x06</term><description>Dark Cyan</description>
                </item>
                <item>
                  <term>0x07</term><description>Light Grey</description>
                </item>
                <item>
                  <term>0x08</term><description>Dark Grey</description>
                </item>
                <item>
                  <term>0x09</term><description>Red</description>
                </item>
                <item>
                  <term>0x0A</term><description>Green</description>
                </item>
                <item>
                  <term>0x0B</term><description>Yellow</description>
                </item>
                <item>
                  <term>0x0C</term><description>Blue</description>
                </item>
                <item>
                  <term>0x0D</term><description>Magenta</description>
                </item>
                <item>
                  <term>0x0E</term><description>Cyan</description>
                </item>
                <item>
                  <term>0x0F</term><description>White</description>
                </item>
                <item>
                  <term>0x10</term><description>Transparent</description>
                </item>
              </list>
              <para>
                Valid display attribute values are as shown below. If an invalid display attribute value is received, the value
                will be Name.
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Symbol</description>
                </listheader>
                <item>
                  <term>0</term><description>Display symbol with waypoint name (name)</description>
                </item>
                <item>
                  <term>1</term><description>Display symbol by itself (None)</description>
                </item>
                <item>
                  <term>2</term><description>DDisplay symbol with comment (Comment)</description>
                </item>
              </list>
              <para>
                If a D110 waypoint is received that contains a value in the Latitude Property that is greater
                than 2^30 or less than -2^30, then that waypoint will be rejected.
              </para>
              <br /><br />
              <para>
                <b>Protocol D150</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
              </list>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Airport Waypoint</description>
                </item>
                <item>
                  <term>1</term><description>Intersection Waypoint</description>
                </item>
                <item>
                  <term>2</term><description>NDB Waypoint</description>
                </item>
                <item>
                  <term>3</term><description>VOR Waypoint</description>
                </item>
                <item>
                  <term>4</term><description>User Defined Waypoint</description>
                </item>
                <item>
                  <term>5</term><description>Airport Runway Threshold Waypoint</description>
                </item>
                <item>
                  <term>6</term><description>Airport Intersection Waypoint</description>
                </item>
                <item>
                  <term>7</term><description>Locked Waypoint</description>
                </item>
              </list>
              <para>
                The 'Locked Waypoint' class code indicates that a route within a GPS contains
                an aviation database waypoint that the GPS could not find in its aviation
                database (perhaps because the aviation database was updated to a newer version).
                The Host should never send this code to the GPS.
              </para>
              <para>
                The 'City', 'State', 'Facility' and 'Country' Properties are invalid when the
                'Class' Property value is equal to the 'User Defined Waypoint' class code.
              </para>
              <para>
                The 'Altitude' Property is valid only when the 'Class' Property value is equal
                to the 'Airport Waypoint' class code.
              </para>
              <br /><br />
              <para>
                <b>Protocol D151</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
              </list>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Airport Waypoint</description>
                </item>
                <item>
                  <term>1</term><description>VOR Waypoint</description>
                </item>
                <item>
                  <term>2</term><description>User Defined Waypoint</description>
                </item>
                <item>
                  <term>3</term><description>Locked Waypoint</description>
                </item>
              </list>
              <para>
                The 'Locked Waypoint' class code indicates that a route within a GPS contains
                an aviation database waypoint that the GPS could not find in its aviation
                database (perhaps because the aviation database was updated to a newer version).
                The Host should never send this code to the GPS.
              </para>
              <para>
                The 'ProximityDistance' Property is used during Proximity Waypoint transfer, and should be
                set to zero in all other cases.
              </para>
              <para>
                The 'City', 'State', 'Facility' and 'Country' Properties are invalid when the
                'Class' Property value is equal to the 'User Defined Waypoint' class code.
              </para>
              <para>
                The 'Altitude' Property is valid only when the 'Class' Property value is equal
                to the 'Airport Waypoint' class code.
              </para>
              <br /><br />
              <para>
                <b>Protocol D152</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
              </list>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Airport Waypoint</description>
                </item>
                <item>
                  <term>1</term><description>Intersection Waypoint</description>
                </item>
                <item>
                  <term>2</term><description>NDB Waypoint</description>
                </item>
                <item>
                  <term>3</term><description>VOR Waypoint</description>
                </item>
                <item>
                  <term>4</term><description>User Defined Waypoint</description>
                </item>
                <item>
                  <term>5</term><description>Locked Waypoint</description>
                </item>
              </list>
              <para>
                The 'Locked Waypoint' class code indicates that a route within a GPS contains
                an aviation database waypoint that the GPS could not find in its aviation
                database (perhaps because the aviation database was updated to a newer version).
                The Host should never send this code to the GPS.
              </para>
              <para>
                The 'ProximityDistance' Property is used during Proximity Waypoint transfer, and should be
                set to zero in all other cases.
              </para>
              <para>
                The 'City', 'State', 'Facility' and 'Country' Properties are invalid when the
                'Class' Property value is equal to the 'User Defined Waypoint' class code.
              </para>
              <para>
                The 'Altitude' Property is valid only when the 'Class' Property value is equal
                to the 'Airport Waypoint' class code.
              </para>
              <br /><br />
              <para>
                <b>Protocol D154</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
              </list>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Airport Waypoint</description>
                </item>
                <item>
                  <term>1</term><description>Intersection Waypoint</description>
                </item>
                <item>
                  <term>2</term><description>NDB Waypoint</description>
                </item>
                <item>
                  <term>3</term><description>VOR Waypoint</description>
                </item>
                <item>
                  <term>4</term><description>User Defined Waypoint</description>
                </item>
                <item>
                  <term>5</term><description>Airport Runway Threshold Waypoint</description>
                </item>
                <item>
                  <term>6</term><description>Airport Intersection Waypoint</description>
                </item>
                <item>
                  <term>7</term><description>Airport NDB Waypoint</description>
                </item>
                <item>
                  <term>8</term><description>User Defined Symbol-Only Waypoint</description>
                </item>
                <item>
                  <term>9</term><description>Locked Waypoint</description>
                </item>
              </list>
              <para>
                The 'Locked Waypoint' class code indicates that a route within a GPS contains
                an aviation database waypoint that the GPS could not find in its aviation
                database (perhaps because the aviation database was updated to a newer version).
                The Host should never send this code to the GPS.
              </para>
              <para>
                The 'ProximityDistance' Property is used during Proximity Waypoint transfer, and should be
                set to zero in all other cases.
              </para>
              <para>
                The 'City', 'State', 'Facility' and 'Country' Properties are invalid when the
                'Class' Property value is equal to the 'User Defined Symbol Only Waypoint' class code.
              </para>
              <para>
                The 'Altitude' Property is valid only when the 'Class' Property value is equal
                to the 'Airport Waypoint' class code.
              </para>
              <br /><br />
              <para>
                <b>Protocol D155</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Display</term><description>Int16</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
              </list>
              <para>
                The values for the 'Display' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Display Symbol Only</description>
                </item>
                <item>
                  <term>3</term><description>Display Symbol with Waypoint Name</description>
                </item>
                <item>
                  <term>5</term><description>Display Symbol with Comment</description>
                </item>
              </list>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Airport Waypoint</description>
                </item>
                <item>
                  <term>1</term><description>Intersection Waypoint</description>
                </item>
                <item>
                  <term>2</term><description>NDB Waypoint</description>
                </item>
                <item>
                  <term>3</term><description>VOR Waypoint</description>
                </item>
                <item>
                  <term>4</term><description>User Defined Waypoint</description>
                </item>
                <item>
                  <term>9</term><description>Locked Waypoint</description>
                </item>
              </list>
              <para>
                The 'Locked Waypoint' class code indicates that a route within a GPS contains
                an aviation database waypoint that the GPS could not find in its aviation
                database (perhaps because the aviation database was updated to a newer version).
                The Host should never send this code to the GPS.
              </para>
              <para>
                The 'ProximityDistance' Property is used during Proximity Waypoint transfer, and should be
                set to zero in all other cases.
              </para>
              <para>
                The 'City', 'State', 'Facility' and 'Country' Properties are invalid when the
                'Class' Property value is equal to the 'User Defined Symbol Only Waypoint' class code.
              </para>
              <para>
                The 'Altitude' Property is valid only when the 'Class' Property value is equal
                to the 'Airport Waypoint' class code.
              </para>
              <br /><br />
              <para>
                <b>Protocol D400</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
              </list>
              <para>
                The 'ProximityDistance' Property is used during Proximity Waypoint transfer, and should be
                set to zero in all other cases.
              </para>
              <br /><br />
              <para>
                <b>Protocol D403</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Symbol</term><description>Int16</description>
                </item>
                <item>
                  <term>Display</term><description>Int16</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
              </list>
              <para>
                The values for the 'Symbol' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Symbol</description>
                </listheader>
                <item>
                  <term>0</term><description>dot</description>
                </item>
                <item>
                  <term>1</term><description>house</description>
                </item>
                <item>
                  <term>2</term><description>gas</description>
                </item>
                <item>
                  <term>3</term><description>car</description>
                </item>
                <item>
                  <term>4</term><description>fish</description>
                </item>
                <item>
                  <term>5</term><description>boat</description>
                </item>
                <item>
                  <term>6</term><description>anchor</description>
                </item>
                <item>
                  <term>7</term><description>wreck</description>
                </item>
                <item>
                  <term>8</term><description>exit</description>
                </item>
                <item>
                  <term>9</term><description>skull</description>
                </item>
                <item>
                  <term>10</term><description>flag</description>
                </item>
                <item>
                  <term>11</term><description>camp</description>
                </item>
                <item>
                  <term>12</term><description>circle with x </description>
                </item>
                <item>
                  <term>13</term><description>deer</description>
                </item>
                <item>
                  <term>14</term><description>first aid</description>
                </item>
                <item>
                  <term>15</term><description>back track</description>
                </item>
              </list>
              <para>
                The values for the 'Display' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Display symbol with waypoint name</description>
                </item>
                <item>
                  <term>1</term><description>Display symbol by itself</description>
                </item>
                <item>
                  <term>2</term><description>Display symbol with comment</description>
                </item>
              </list>
              <para>
                The values for the 'Display' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Display Symbol with Waypoint Name</description>
                </item>
                <item>
                  <term>1</term><description>Display Symbol Only</description>
                </item>
                <item>
                  <term>2</term><description>Display Symbol with Comment</description>
                </item>
              </list>
              <para>
                The 'ProximityDistance' Property is used during Proximity Waypoint transfer, and should be
                set to zero in all other cases.
              </para>
              <br /><br />
              <para>
                <b>Protocol D450</b>
              </para>
              <list type="table">
                <listheader>
                  <term>Property</term><description>Type</description>
                </listheader>
                <item>
                  <term>Identifier</term><description>String</description>
                </item>
                <item>
                  <term>Latitude</term><description>Double</description>
                </item>
                <item>
                  <term>Longitude</term><description>Double</description>
                </item>
                <item>
                  <term>Comment</term><description>String</description>
                </item>
                <item>
                  <term>Altitude</term><description>Single</description>
                </item>
                <item>
                  <term>Class</term><description>Int16</description>
                </item>
                <item>
                  <term>State</term><description>String</description>
                </item>
                <item>
                  <term>Country</term><description>String</description>
                </item>
                <item>
                  <term>City</term><description>String</description>
                </item>
                <item>
                  <term>Facility</term><description>String</description>
                </item>
                <item>
                  <term>ProximityDistance</term><description>Single</description>
                </item>
              </list>
              <para>
                The values for the 'Class' Property are defined as follows:
              </para>
              <list type="table">
                <listheader>
                  <term>Value</term><description>Description</description>
                </listheader>
                <item>
                  <term>0</term><description>Airport Waypoint</description>
                </item>
                <item>
                  <term>1</term><description>Intersection Waypoint</description>
                </item>
                <item>
                  <term>2</term><description>NDB Waypoint</description>
                </item>
                <item>
                  <term>3</term><description>VOR Waypoint</description>
                </item>
                <item>
                  <term>4</term><description>User Defined Waypoint</description>
                </item>
                <item>
                  <term>5</term><description>Airport Runway Threshold Waypoint</description>
                </item>
                <item>
                  <term>6</term><description>Airport Intersection Waypoint</description>
                </item>
                <item>
                  <term>7</term><description>Locked Waypoint</description>
                </item>
              </list>
              <para>
                The 'Locked Waypoint' class code indicates that a route within a GPS contains
                an aviation database waypoint that the GPS could not find in its aviation
                database (perhaps because the aviation database was updated to a newer version).
                The Host should never send this code to the GPS.
              </para>
              <para>
                The 'City', 'State', 'Facility' and 'Country' Properties are invalid when the
                'Class' Property value is equal to the 'User Defined Waypoint' class code.
              </para>
              <para>
                The 'Altitude' Property is valid only when the 'Class' Property value is equal
                to the 'Airport Waypoint' class code.
              </para>
              <para>
                The 'ProximityDistance' Property is used during Proximity Waypoint transfer, and should be
                set to zero in all other cases.
              </para>
            </remarks>
        </member>
        <member name="M:Waymex.Gps.Waypoint.#ctor">
            <summary>
              Constructor.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Identifier">
            <summary>
              Returns/Sets the Identifier for the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Comment">
            <summary>
              Returns/Sets Comment for the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Symbol">
            <summary>
              Returns/Sets the raw value representing the symbol. This property is NOT used on Magellan units,
              the Icon property (String) is used instead.
            </summary>
            <remarks>
              <para>
                Please see the Waypoint Overview for ways to manage symbols and icons for devices.
              </para>
            </remarks>
        </member>
        <member name="P:Waymex.Gps.Waypoint.SymbolIdentifier">
            <summary>
              Returns/Sets the Symbol Identifier
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Colour">
            <summary>
              Returns/Sets the Waypoint Colour.
              (See GPSLibrary Developer Notes for further details).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Display">
            <summary>
              Returns/Sets the Waypoint Display.
              (See GPSLibrary Developer Notes for further details).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.ProximityDistance">
            <summary>
              Returns/Sets the proximity distance in meters
              of the Waypoint. Only valid if the Waypoint is a Proximity Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.ProximityIndex">
            <summary>
              Returns/Sets the proximity index of the Waypoint.
              Only valid if the Waypoint is a Proximity Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Altitude">
            <summary>
              Returns/Sets the altitude of the Waypoint in meters.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Depth">
            <summary>
              Return/Setss the depth of the Waypoint in meters.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Class">
            <summary>
              Returns/Sets the class
              (See GPSLibrary Developer Notes for further details).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Attributes">
            <summary>
              Returns/Sets the Waypoint attribute setting.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Link">
            <summary>
              Returns/Sets the path from a previous Waypoint in the route to this one.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.State">
            <summary>
              Returns the State part of the Waypoint address.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Country">
            <summary>
              Returns/Sets the Country part of the Waypoint address.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.City">
            <summary>
              Returns/Sets the City part of the Waypoint address.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Address">
            <summary>
              Returns/Sets the Address of the Waypoint.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Facility">
            <summary>
              Returns/Sets the Facility part of the Waypoint address.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Crossroad">
            <summary>
              Returns/Sets the intersection address.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Unused1">
            <summary>
              Unused field.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Unused2">
            <summary>
              Unused field.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.PacketType">
            <summary>
              Returns/Sets the Packet type. Used for data type D109 only.
              (See GPSLibrary Developer Notes for further details).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.TimeENRoute">
            <summary>
              Returns/Sets estimated 'time en route' to next waypoint in seconds.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Temperature">
            <summary>
              Returns/Sets the Temperature Property.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Category">
            <summary>
              Returns/Sets the Timestamp Property.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Timestamp">
            <summary>
              Returns/Sets the Category Property.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.RouteLinkClass">
            <summary>
              Returns/Sets the Route Link Class. This Property describes the link that
              this waypoint has with the Waypoint that precedes it. Not used on all GPS devices.
              (See GPSLibrary Developer Notes for further details).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.RouteLinkIdentifier">
            <summary>
              Returns/Sets the Route Link Identifier. This Property describes the link that
              this waypoint has with the Waypoint that precedes it. Not used on all GPS devices.
              (See GPSLibrary Developer Notes for further details).
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Latitude">
            <summary>
              Returns/Sets the Latitude co-ordinate in degrees.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Longitude">
            <summary>
              Returns/Sets the Longtitude co-ordinate in degrees.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.X">
            <summary>
              Returns/Sets the X co-ordinate.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Y">
            <summary>
              Returns/Sets the Y co-ordinate.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Icon">
            <summary>
              Returns/Sets the raw value representing the icon. This property is NOT used on Garmin units,
              the Symbol property (Int16) is used instead.
            </summary>
            <remarks>
              <para>
                Please see the Waypoint Overview for ways to manage symbols and icons for devices.
              </para>
            </remarks>
        </member>
        <member name="M:Waymex.Gps.Waypoint.ToXml">
            <summary>
              Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Waypoint.XmlLoad(System.String)">
            <summary>
              This method populates the object from XML.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.Subclass">
            <summary>
              Returns/Sets the Waypoint Sub Class.
            </summary>
        </member>
        <member name="P:Waymex.Gps.Waypoint.RouteLinkSubclass">
            <summary>
              Returns/Sets the Route Link Sub-Class. This Property describes the
              link that this waypoint has with the Waypoint that precedes it.
              Not used on all GPS devices.
            </summary>
        </member>
        <member name="M:Waymex.Gps.Waypoint.Equals(System.Object)">
            <summary>
              Overridden method. Returns true of the values of each
              of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Waypoint.Equals(System.Object,System.Boolean)">
            <summary>
              Overridden method. Returns true of the values of each
              of the properties are equal in value. Passing true
              to the positionOnly parameter will compare the Trackpoint
              in terms of the Latitude and Longitude only.
            </summary>
            <param name="obj"></param>
            <param name="positionOnly"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.Waypoint.GetHashCode">
            <summary>
              Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Gps.WaypointCollection">
            <summary>
            This object represents a collection of Waypoint objects.
            </summary>
            <remarks>
            <para>
            When receiving data from the Host, most GPS devices will overwrite any existing 
            waypoints with the same name stored in the GPS device. For example, if the Host 
            sends a waypoint named CBELLS, most GPS devices will overwrite a waypoint named
            CBELLS that may be stored in GPS memory.
            </para>
            <para>
            However some GPS devices compare the position of the new waypoint with the position
            of the stored waypoint (altitude is ignored). If the positions match, the GPS
            will erase the identically named waypoint and replace it with the new one.
            If the positions differ, the unit will create a new, unique name for the
            incoming waypoint and preserve the existing waypoint under its original name.
            </para>
            <para>
            When the Host requests the GPS to send waypoints, the GPS will send every
            waypoint stored in its database. When the Host sends waypoints to the GPS,
            the Host may selectively transfer any number of waypoints.
            </para>
            <para>
            When the Host requests the GPS to send proximity waypoints, the GPS will send all proximity
            waypoints stored in its database.
            </para>
            </remarks>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.Add(Waymex.Gps.Waypoint)">
            <summary>
            Allows a Waypoint Object to be added to the collection. 
            </summary>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.Find(System.String)">
            <summary>
            Returns the first Waypoint object that matches the specified Identifier.
            </summary>
            <param name="identifier"></param>
            <returns></returns>
        </member>
        <member name="P:Waymex.Gps.WaypointCollection.Count">
            <summary>
            Returns the number of Waypoint objects in the collection.
            </summary>
        </member>
        <member name="P:Waymex.Gps.WaypointCollection.Item(System.Int32)">
            <summary>
            Can be used to refer to a member of the collection by ordinal reference.
            This Property is the default indexer property in C#.
            </summary>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.GetEnumerator">
            <summary>
            Returns an Enumerator for the Collection.
            </summary>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.ToXml">
            <summary>
            Returns an XML representation of the object.
            </summary>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.ToXml(System.String)">
            <summary>
            Returns an XML representation of the object.
            This overloaded method accepts an xslt filename which can be used to ransform the xml.
            </summary>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.XmlLoad(System.String)">
            <summary>
            This method populates the object from XML.
            </summary>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.ToDataSet">
            <summary>
            This method returns a System.Data.Dataset populated with the contents of the WaypointCollection objec.
            The dataset includes one table called 'Waypoints'.
            </summary>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.Equals(System.Object)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value.
            </summary>
            <param name="obj"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.Equals(System.Object,System.Boolean)">
            <summary>
            Overridden method. Returns true of the values of each
            of the properties are equal in value. Passing true
            to the positionOnly parameter will compare the Trackpoint
            in terms of the Latitude and Longitude only.
            </summary>
            <param name="obj"></param>
            <param name="positionOnly"></param>
            <returns>boolean</returns>
        </member>
        <member name="M:Waymex.Gps.WaypointCollection.GetHashCode">
            <summary>
            Overridden function. Retrieves a value that indicates the hash code value for the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Waymex.Interop.ManagedMethods">
            <summary>
            This class contains managed versions of the native methods exposed in Waymex.Interop.NativeMethods.
            It includes helper functions error handling and marshalling specifics.
            TODO: Enhance all these methods to handle overlapped results and accept standard CLR Types.
            </summary>
        </member>
        <member name="M:Waymex.Interop.ManagedMethods.ReadDeviceIoControlOverlapped(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.ManagedMethods.ReadFileOverlapped(System.IntPtr,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
            Method that performs a full overlapped read until the number of bytes
            specified is read or until the timeout period expires.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.ManagedMethods.ReadFileOverlapped(System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,System.Int32)">
            Method that performs a full overlapped read until the number of bytes
            specified is read or until the timeout period expires. This overload accepts an
            externally created buffer allowing for greater control.
        </member>
        <member name="T:Waymex.Interop.NativeMethods">
            <summary>
            This class defines platform specific method declarations. These methods should not be
            used directly, the higher level functions should be used instead e.g. Waymex.Gps.Interop.
            </summary>
        </member>
        <member name="T:Waymex.Interop.NativeMethods.OVERLAPPED">
            <summary>
             typedef struct _OVERLAPPED { 
             ULONG_PTR  Internal; 
             ULONG_PTR  InternalHigh; 
             DWORD  Offset; 
             DWORD  OffsetHigh; 
             HANDLE hEvent; 
             } OVERLAPPED;
            </summary>
        </member>
        <member name="T:Waymex.Interop.NativeMethods.SP_DEVINFO_DATA">
            <summary>
             typedef struct _SP_DEVINFO_DATA {
             DWORD cbSize;  
             GUID ClassGuid;
             DWORD DevInst;
             ULONG_PTR Reserved;
             } SP_DEVINFO_DATA,  *PSP_DEVINFO_DATA;
            </summary>
        </member>
        <member name="T:Waymex.Interop.NativeMethods.DEVICE_INTERFACE_DATA">
            <summary>
             typedef struct _SP_DEVICE_INTERFACE_DATA {
             DWORD cbSize;
             GUID  InterfaceClassGuid;
             DWORD Flags;
             ULONG_PTR Reserved;
             } SP_DEVICE_INTERFACE_DATA, *PSP_DEVICE_INTERFACE_DATA;
            </summary>
        </member>
        <member name="T:Waymex.Interop.NativeMethods.DEVICE_INTERFACE_DETAIL_DATA">
            <summary>
             typedef struct _SP_DEVICE_INTERFACE_DETAIL_DATA {
             DWORD  cbSize;
             TCHAR  DevicePath[ANYSIZE_ARRAY];
             } SP_DEVICE_INTERFACE_DETAIL_DATA, *PSP_DEVICE_INTERFACE_DETAIL_DATA;
            </summary>
        </member>
        <member name="T:Waymex.Interop.NativeMethods.SECURITY_ATTRIBUTES">
            <summary>
             typedef struct _SECURITY_ATTRIBUTES {
             DWORD nLength;
             LPVOID lpSecurityDescriptor;
             BOOL bInheritHandle;
             } SECURITY_ATTRIBUTES, *PSECURITY_ATTRIBUTES;
            </summary>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.CreateEvent(System.IntPtr,System.Int32,System.Int32,System.String)">
            <summary>
             HANDLE CreateEvent(
             LPSECURITY_ATTRIBUTES lpEventAttributes, // SD
             BOOL bManualReset,                       // reset type
             BOOL bInitialState,                      // initial state
             LPCTSTR lpName                           // object name
             );
            </summary>
            <param name="lpEventAttributes"></param>
            <param name="bManualReset"></param>
            <param name="bInitialState"></param>
            <param name="lpName"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.CreateFile(System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
             HANDLE CreateFile(
             LPCTSTR lpFileName,                         // file name
             DWORD dwDesiredAccess,                      // access mode
             DWORD dwShareMode,                          // share mode
             LPSECURITY_ATTRIBUTES lpSecurityAttributes, // SD
             DWORD dwCreationDisposition,                // how to create
             DWORD dwFlagsAndAttributes,                 // file attributes
             HANDLE hTemplateFile                        // handle to template file
             );
            </summary>
            <param name="lpFileName"></param>
            <param name="dwDesiredAccess"></param>
            <param name="dwShareMode"></param>
            <param name="lpSecurityAttributes"></param>
            <param name="dwCreationDisposition"></param>
            <param name="dwFlagsAndAttributes"></param>
            <param name="hTemplateFile"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.SetupDiDestroyDeviceInfoList(System.IntPtr)">
            <summary>
             BOOL SetupDiDestroyDeviceInfoList(
             HDEVINFO DeviceInfoSet
             );
            </summary>
            <param name="DeviceInfoSet"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.SetupDiGetDeviceInterfaceDetail(System.IntPtr,Waymex.Interop.NativeMethods.DEVICE_INTERFACE_DATA@,System.IntPtr,System.Int32,System.Int32@,System.IntPtr)">
            <summary>
             BOOL SetupDiGetDeviceInterfaceDetail(
             HDEVINFO DeviceInfoSet,
             PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,
             PSP_DEVICE_INTERFACE_DETAIL_DATA DeviceInterfaceDetailData, 
             DWORD DeviceInterfaceDetailDataSize,
             PDWORD RequiredSize, 
             PSP_DEVINFO_DATA DeviceInfoData 
             );
            </summary>
            <param name="DeviceInfoSet"></param>
            <param name="DeviceInterfaceData"></param>
            <param name="DeviceInterfaceDetailData"></param>
            <param name="DeviceInterfaceDetailDataSize"></param>
            <param name="RequiredSize"></param>
            <param name="DeviceInfoData"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.SetupDiEnumDeviceInterfaces(System.IntPtr,System.IntPtr,System.Guid@,System.Int32,Waymex.Interop.NativeMethods.DEVICE_INTERFACE_DATA@)">
            <summary>
             BOOL SetupDiEnumDeviceInterfaces(
             HDEVINFO DeviceInfoSet,
             PSP_DEVINFO_DATA DeviceInfoData, 
             CONST GUID * InterfaceClassGuid,
             DWORD MemberIndex,
             PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData
             );
            </summary>
            <param name="DeviceInfoSet"></param>
            <param name="DeviceInfoData"></param>
            <param name="InterfaceClassGuid"></param>
            <param name="MemberIndex"></param>
            <param name="DeviceInterfaceData"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.SetupDiGetClassDevs(System.Guid@,System.String,System.IntPtr,System.UInt32)">
            <summary>
             HDEVINFO SetupDiGetClassDevs(
             CONST GUID * ClassGuid, 
             PCTSTR Enumerator, 
             HWND hwndParent, 
             DWORD Flags
             );
            </summary>
            <param name="ClassGuid"></param>
            <param name="Enumerator"></param>
            <param name="hwndParent"></param>
            <param name="Flags"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.CloseHandle(System.IntPtr)">
            <summary>
             BOOL CloseHandle(
             HANDLE hObject   // handle to object
             );
            </summary>
            <param name="hObject"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.ResetEvent(System.IntPtr)">
            <summary>
             BOOL ResetEvent(
             HANDLE hEvent   // handle to event
             );
            </summary>
            <param name="hEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.WriteFile(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,Waymex.Interop.NativeMethods.OVERLAPPED@)">
            <summary>
             BOOL WriteFile(
             HANDLE hFile,                    // handle to file
             LPCVOID lpBuffer,                // data buffer
             DWORD nNumberOfBytesToWrite,     // number of bytes to write
             LPDWORD lpNumberOfBytesWritten,  // number of bytes written
             LPOVERLAPPED lpOverlapped        // overlapped buffer
             );
            </summary>
            <param name="hFile"></param>
            <param name="lpBuffer"></param>
            <param name="nNumberOfBytesToWrite"></param>
            <param name="lpNumberOfBytesWritten"></param>
            <param name="lpOverlapped"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.ReadFile(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,Waymex.Interop.NativeMethods.OVERLAPPED@)">
            <summary>
             BOOL ReadFile(
             HANDLE hFile,                // handle to file<br/>
             LPVOID lpBuffer,             // data buffer<br/>
             DWORD nNumberOfBytesToRead,  // number of bytes to read<br/>
             LPDWORD lpNumberOfBytesRead, // number of bytes read<br/>
             LPOVERLAPPED lpOverlapped    // overlapped buffer<br/>
             );
            </summary>
            <param name="hFile"></param>
            <param name="lpBuffer"></param>
            <param name="nNumberOfBytesToRead"></param>
            <param name="lpNumberOfBytesRead"></param>
            <param name="lpOverlapped"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.DeviceIoControl(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,Waymex.Interop.NativeMethods.OVERLAPPED@)">
            <summary>
             BOOL DeviceIoControl(
             HANDLE hDevice,              // handle to device
             DWORD dwIoControlCode,       // operation
             LPVOID lpInBuffer,           // input data buffer
             DWORD nInBufferSize,         // size of input data buffer
             LPVOID lpOutBuffer,          // output data buffer
             DWORD nOutBufferSize,        // size of output data buffer
             LPDWORD lpBytesReturned,     // byte count
             LPOVERLAPPED lpOverlapped    // overlapped information
             );
            </summary>
            <param name="hDevice"></param>
            <param name="dwIoControlCode"></param>
            <param name="lpInBuffer"></param>
            <param name="nInBufferSize"></param>
            <param name="lpOutBuffer"></param>
            <param name="nOutBufferSize"></param>
            <param name="lpBytesReturned"></param>
            <param name="lpOverlapped"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.GetOverlappedResult(System.IntPtr,Waymex.Interop.NativeMethods.OVERLAPPED@,System.UInt32@,System.Boolean)">
            <summary>
             BOOL GetOverlappedResult(
             HANDLE hFile,                       // handle to file, pipe, or device
             LPOVERLAPPED lpOverlapped,          // overlapped structure
             LPDWORD lpNumberOfBytesTransferred, // bytes transferred
             BOOL bWait                          // wait option
             );
            </summary>
            <param name="hFile"></param>
            <param name="lpOverlapped"></param>
            <param name="lpNumberOfBytesTransferred"></param>
            <param name="bWait"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Interop.NativeMethods.CancelIo(System.IntPtr)">
            <summary>
             BOOL CancelIo(
             HANDLE hFile  // handle to file
             );
            </summary>
            <param name="hFile"></param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Diagnostics.ExceptionBase">
            <summary>
            Base Exception  Class.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.ExceptionBase.#ctor(System.String,System.Exception)">
            <summary>
            GISSystem Exception.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.ExceptionBase.#ctor(System.String)">
            <summary>
            GPSSystem Exception.
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.ExceptionBase.AppSource">
            <summary>
            Exposed in order that derived classe can overide.
            </summary>
        </member>
        <member name="T:Waymex.Diagnostics.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.AccessToSerialPortDenied">
            <summary>
              Looks up a localized string similar to Access to serial port denied..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.ArgumentLengthNotGreaterThanZero">
            <summary>
              Looks up a localized string similar to The argument length must be greater than zero..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.ArgumentNotGreaterThanZero">
            <summary>
              Looks up a localized string similar to The argument must be greater than zero..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.ArrayCreationError">
            <summary>
              Looks up a localized string similar to Error occurred during array creation..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.BadByteSize">
            <summary>
              Looks up a localized string similar to Bad Size byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.BadCheckSum">
            <summary>
              Looks up a localized string similar to Bad Checksum byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.BadDle">
            <summary>
              Looks up a localized string similar to Bad DLE byte detected during disassembly..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.FailedToOpenSerialPort">
            <summary>
              Looks up a localized string similar to Failed to open serial port..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.GpsNotDetectedOnUsb">
            <summary>
              Looks up a localized string similar to GPS Device not detected on Universal Serial Bus..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.InterruptInReadError">
            <summary>
              Looks up a localized string similar to Unable to read USB Interrupt In..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.Invalid8CharacterFilename">
            <summary>
              Looks up a localized string similar to Invalid Filename. Filenames must consist of 8 characters or less, and file extensions should not be specified..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.InvalidAttributeCollection">
            <summary>
              Looks up a localized string similar to Invalid Attribute Collection. Attribute collections added to a ShapeFile object must contain the same list of attribute names and data types..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.InvalidQueueSettings">
            <summary>
              Looks up a localized string similar to Invalid queue settings..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.InvalidReadDataDeviceID">
            <summary>
              Looks up a localized string similar to Invalid Device ID used to Read Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.InvalidSerialPortSettings">
            <summary>
              Looks up a localized string similar to Invalid serial port settings..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.InvalidShapeType">
            <summary>
              Looks up a localized string similar to Invalid Shape Type..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.InvalidTimeOutSettings">
            <summary>
              Looks up a localized string similar to Invalid timeout settings..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.IoErrorUnexpected">
            <summary>
              Looks up a localized string similar to An unexpected IO Error has occurred..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.MethodUnavailable">
            <summary>
              Looks up a localized string similar to This method is not available in this version of the GPS Library..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.NoDeviceName">
            <summary>
              Looks up a localized string similar to Unable to get the name of the Device..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.NoFolderName">
            <summary>
              Looks up a localized string similar to The folder name must be specified..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.NoGpsAcknowledgement">
            <summary>
              Looks up a localized string similar to No Acknowledgement received from the GPS device..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.NoPacketStart">
            <summary>
              Looks up a localized string similar to Packet Start not found in buffer..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.NoUsbDeviceDriver">
            <summary>
              Looks up a localized string similar to Unable to find USB Device Driver..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.NoUsbDeviceHandle">
            <summary>
              Looks up a localized string similar to Unable to obtain handle to USB Device..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.NoUsbSessionStart">
            <summary>
              Looks up a localized string similar to Unable to start a session with the USB Device..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.PacketLength">
            <summary>
              Looks up a localized string similar to Packet length received exceeds maximum length permissible..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.ProtocolNotSupported">
            <summary>
              Looks up a localized string similar to Protocol Not Supported..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.ReadOperationTimeOut">
            <summary>
              Looks up a localized string similar to Timed out during a Read Operation..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.ReceiveThreadException">
            <summary>
              Looks up a localized string similar to An exception has occurred on the receive thread..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.ReceiveTimeout">
            <summary>
              Looks up a localized string similar to Receive Timeout..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.SendTimeout">
            <summary>
              Looks up a localized string similar to Send Timeout..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.SerialPortNotOpen">
            <summary>
              Looks up a localized string similar to The serial port is not open..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorAlmanac">
            <summary>
              Looks up a localized string similar to Error Transferring Almanac Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorDateTime">
            <summary>
              Looks up a localized string similar to Error Transferring Date and Time Information..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorFlightBook">
            <summary>
              Looks up a localized string similar to Error Transferring Flight Book Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorGpsData">
            <summary>
              Looks up a localized string similar to Error Transferring GPS Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorPosition">
            <summary>
              Looks up a localized string similar to Error Transferring Position Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorProductData">
            <summary>
              Looks up a localized string similar to Error Transferring Product Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorProtocol">
            <summary>
              Looks up a localized string similar to Error Transferring Protocol Table..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorProximity">
            <summary>
              Looks up a localized string similar to Error Transferring Proximity Waypoint Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorRoute">
            <summary>
              Looks up a localized string similar to Error Transferring Routes..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorTracklog">
            <summary>
              Looks up a localized string similar to Error Transferring Tracklog Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransferErrorWaypoint">
            <summary>
              Looks up a localized string similar to Error Transferring Waypoint Data..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.TransmissionFailure">
            <summary>
              Looks up a localized string similar to Transmission Failure..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.UnexpectedFailure">
            <summary>
              Looks up a localized string similar to Unexpected Failure..
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.Strings.WriteOperationTimeOut">
            <summary>
              Looks up a localized string similar to Timed out during a Write Operation..
            </summary>
        </member>
        <member name="T:Waymex.Diagnostics.TraceLog">
            <summary>
            This class allows trace information to be written to a Trace Log file. 
            The object is static and can be used without an instance of the class being created. 
            If a valid TraceFilename has been set then objects will write to the 
            class to log information to the Trace Log. The type of information logged will 
            depend on the setting of the TraceType property.
            During development, any Debug.Write type statements will be automatically added 
            to the trace log. 
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.#ctor">
            <summary>
            Constructor, creates the Trace Switch and the TraceSwitch Level.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.WriteMessage(System.String)">
            <summary>
            Write a message to the Trace Log.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.WriteMessage(System.String,System.Diagnostics.TraceLevel)">
            <summary>
            Write a message to the Trace Log.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.WriteMessage(System.String,System.Diagnostics.TraceLevel,System.Boolean)">
            <summary>
            Write a message to the Trace Log.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.WriteMessage(System.String,System.Diagnostics.TraceLevel,System.Boolean,System.Boolean)">
            <summary>
            Write a message to the Trace Log.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.WriteMessage(System.String,System.Diagnostics.TraceLevel,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Write a message to the Trace Log.
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.TraceLog.TraceFileName">
            <summary>
            Sets the Trace file name, setting this to a valid 
            file causes trace output from the GPS Library to be written to the file.
            </summary>
        </member>
        <member name="P:Waymex.Diagnostics.TraceLog.TraceType">
            <summary>
            Sets the Trace level and will be one of the following. Error, Info, Off, Verbose or Warning.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.WriteHeader">
            <summary>
            Writes a header to the Trace File which contains diagnostic information. Typically this would
            be called only once at the begining of the program execution.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.WriteError(System.Exception)">
            <summary>
            Writes Exception information, including stack trace information to the Trace File.
            </summary>
        </member>
        <member name="M:Waymex.Diagnostics.TraceLog.Dispose">
            <summary>
            Closes all resources and disposes of the object. 
            </summary>
        </member>
        <member name="M:Waymex.Resources.ResourceManager.GetEmbeddedResource(System.String)">
            <summary>
            Returns an embedded resource as a stream. 
            </summary>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Security.Licencing.GetLicenceStatus(System.String,System.String,System.Double)">
            <summary>
            Date based Licencing method
            </summary>
            <param name="productName">Installshields product code</param>
            <param name="version">Installshields product version</param>
            <param name="expiryDays">Days until licence expires</param>
            <returns></returns>
        </member>
        <member name="T:Waymex.Security.DesigntimeRegistryLicense">
            <summary>
            Summary description for DesigntimeRegistryLicense.
            </summary>
        </member>
        <member name="T:Waymex.Security.RegistryLicenseProvider">
            <summary>
            Summary description for RegistryLicenseProvider.
            </summary>
        </member>
        <member name="T:Waymex.Security.RuntimeRegistryLicense">
            <summary>
            Summary description for RuntimeRegistryLicense.
            </summary>
        </member>
        <member name="T:Waymex.Xml.Transform">
            <summary>
            Tis class is used to transform Xml documents using Xslt documents.
            </summary>
        </member>
        <member name="T:Waymex.Xml.Transform.OutputType">
            <summary>
            Enumetrator indicating the return type (i.e. Text or XML)
            </summary>
        </member>
        <member name="F:Waymex.Xml.Transform.OutputType.Text">
            <summary>
            Returns the transformed data as an unformatted string.
            </summary>
        </member>
        <member name="F:Waymex.Xml.Transform.OutputType.Xml">
            <summary>
            Returns the transformed data as a string but with an Xml declaraions and insdentation. 
            </summary>
        </member>
        <member name="M:Waymex.Xml.Transform.XsltTransform(System.String,System.String)">
            <summary>
            Transformns the specified Xml string using the specified Xslt document.
            </summary>
            <param name="xml"></param>
            <param name="xslFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Xml.Transform.XsltTransform(System.String,System.IO.Stream)">
            <summary>
            Transformns the specified Xml string using the specified Xslt document.
            </summary>
            <param name="xml"></param>
            <param name="xsltDocument"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Xml.Transform.XsltTransform(System.String,System.String,Waymex.Xml.Transform.OutputType)">
            <summary>
            Transformns the specified Xml string using the specified Xslt document.
            </summary>
            <param name="xml"></param>
            <param name="xslFileName"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Xml.Transform.XsltTransform(System.String,System.IO.Stream,Waymex.Xml.Transform.OutputType)">
            <summary>
            Transformns the specified Xml string using the specified Xslt document.
            </summary>
            <param name="xml"></param>
            <param name="xsltDocument"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Xml.Transform.XsltTransform(System.String,System.String,System.Xml.Xsl.XsltArgumentList,Waymex.Xml.Transform.OutputType)">
            <summary>
            Transformns the specified Xml string using the specified Xslt document.
            </summary>
            <param name="xml"></param>
            <param name="xslFileName"></param>
            <param name="xsltArguments"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Xml.Transform.XsltTransform(System.String,System.IO.Stream,System.Xml.Xsl.XsltArgumentList,Waymex.Xml.Transform.OutputType)">
            <summary>
            Transformns the specified Xml string using the specified Xslt document.
            </summary>
            <param name="xml"></param>
            <param name="xsltDocument"></param>
            <param name="xsltArguments"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Waymex.Xml.Transform.XsltTransform(System.String,System.Xml.Xsl.XslCompiledTransform,System.Xml.Xsl.XsltArgumentList,Waymex.Xml.Transform.OutputType)">
            <summary>
            Transformns the specified Xml string using the specified Xslt document.
            </summary>
            <param name="xml"></param>
            <param name="xsltTransform"></param>
            <param name="xsltArguments"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
    </members>
</doc>
